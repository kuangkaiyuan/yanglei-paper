%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 14-1-eps-converted-to.pdf
%%Creator: Adobe Acrobat 15.10.0
%%For: <6211><554A>
%%CreationDate: 2016/6/12, 19:07:21
%%BoundingBox: 0 0 242 212
%%HiResBoundingBox: 0 0 242 212
%%CropBox: 0 0 242 212
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1020 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c015 81.157285, 2014/12/12-00:43:15        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   pdf:Producer="MiKTeX GPL Ghostscript  9.0"
   xmp:ModifyDate="2016-06-12T16:25:16+08:00"
   xmp:CreateDate="2016-06-12T16:25:16+08:00"
   xmp:CreatorTool="Adobe Acrobat 15.10.0"
   xmpMM:DocumentID="b0c37f2f-32d2-11e6-0000-800ca39f751c"
   xmpMM:InstanceID="b0c37f2f-32d2-11e6-0000-800ca39f751c"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">14-2.pdf</rdf:li>
    </rdf:Alt>
   </dc:title>
   <dc:creator>
    <rdf:Seq>
     <rdf:li>&lt;6211&gt;&lt;554A&gt;</rdf:li>
    </rdf:Seq>
   </dc:creator>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
<<
/Name (Black)
/0 
[/DeviceCMYK] /CSA add_res
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 1 
/Lookup <~
z"%?,g~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -212 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 212 li
242 212 li
242 0 li
cp
clp
gsave
225.75 155.75 mo
212.25 155.75 li
212.25 149.625 li
220.875 149.625 li
220.875 22.875 li
53.6246 22.875 li
53.6246 85.92 li
53.5469 86.008 53.5 86.123 53.5 86.25 cv
53.5 86.377 53.5469 86.492 53.6246 86.58 cv
53.6246 149.25 li
54 149.25 li
53.6246 149.25 li
53.6246 149.625 li
58.5 149.625 li
58.5 155.75 li
49.5 155.75 li
49.5 20 li
225.75 20 li
225.75 155.75 li
184.5 155.75 mo
180.75 155.75 li
180.75 149.625 li
184.5 149.625 li
184.5 155.75 li
153 155.75 mo
149.25 155.75 li
149.25 149.625 li
153 149.625 li
153 155.75 li
121.5 155.75 mo
117.75 155.75 li
117.75 149.625 li
121.5 149.625 li
121.5 155.75 li
90 155.75 mo
86.25 155.75 li
86.25 149.625 li
90 149.625 li
90 155.75 li
220.125 148.875 mo
212.25 148.875 li
212.25 146 li
184.5 146 li
184.5 148.875 li
180.75 148.875 li
180.75 145.25 li
153 145.25 li
153 148.875 li
149.25 148.875 li
149.25 142.25 li
121.5 142.25 li
121.5 148.875 li
117.75 148.875 li
117.75 95.75 li
90 95.75 li
90 148.875 li
86.25 148.875 li
86.25 58.25 li
58.5 58.25 li
58.5 148.875 li
54.3754 148.875 li
54.3754 86.75 li
57 86.75 li
57.2762 86.75 57.5 86.526 57.5 86.25 cv
57.5 85.974 57.2762 85.75 57 85.75 cv
54.3754 85.75 li
54.3754 23.625 li
220.125 23.625 li
220.125 148.875 li
216 85.75 mo
215.724 85.75 215.5 85.974 215.5 86.25 cv
215.5 86.526 215.724 86.75 216 86.75 cv
219 86.75 li
219.276 86.75 219.5 86.526 219.5 86.25 cv
219.5 85.974 219.276 85.75 219 85.75 cv
216 85.75 li
213 85.75 mo
212.724 85.75 212.5 85.974 212.5 86.25 cv
212.5 86.526 212.724 86.75 213 86.75 cv
213.276 86.75 213.5 86.526 213.5 86.25 cv
213.5 85.974 213.276 85.75 213 85.75 cv
207 85.75 mo
206.724 85.75 206.5 85.974 206.5 86.25 cv
206.5 86.526 206.724 86.75 207 86.75 cv
210 86.75 li
210.276 86.75 210.5 86.526 210.5 86.25 cv
210.5 85.974 210.276 85.75 210 85.75 cv
207 85.75 li
204 85.75 mo
203.724 85.75 203.5 85.974 203.5 86.25 cv
203.5 86.526 203.724 86.75 204 86.75 cv
204.276 86.75 204.5 86.526 204.5 86.25 cv
204.5 85.974 204.276 85.75 204 85.75 cv
198 85.75 mo
197.724 85.75 197.5 85.974 197.5 86.25 cv
197.5 86.526 197.724 86.75 198 86.75 cv
201 86.75 li
201.276 86.75 201.5 86.526 201.5 86.25 cv
201.5 85.974 201.276 85.75 201 85.75 cv
198 85.75 li
195 85.75 mo
194.724 85.75 194.5 85.974 194.5 86.25 cv
194.5 86.526 194.724 86.75 195 86.75 cv
195.276 86.75 195.5 86.526 195.5 86.25 cv
195.5 85.974 195.276 85.75 195 85.75 cv
189 85.75 mo
188.724 85.75 188.5 85.974 188.5 86.25 cv
188.5 86.526 188.724 86.75 189 86.75 cv
192 86.75 li
192.276 86.75 192.5 86.526 192.5 86.25 cv
192.5 85.974 192.276 85.75 192 85.75 cv
189 85.75 li
186 85.75 mo
185.724 85.75 185.5 85.974 185.5 86.25 cv
185.5 86.526 185.724 86.75 186 86.75 cv
186.276 86.75 186.5 86.526 186.5 86.25 cv
186.5 85.974 186.276 85.75 186 85.75 cv
180 85.75 mo
179.724 85.75 179.5 85.974 179.5 86.25 cv
179.5 86.526 179.724 86.75 180 86.75 cv
183 86.75 li
183.276 86.75 183.5 86.526 183.5 86.25 cv
183.5 85.974 183.276 85.75 183 85.75 cv
180 85.75 li
177 85.75 mo
176.724 85.75 176.5 85.974 176.5 86.25 cv
176.5 86.526 176.724 86.75 177 86.75 cv
177.276 86.75 177.5 86.526 177.5 86.25 cv
177.5 85.974 177.276 85.75 177 85.75 cv
171 85.75 mo
170.724 85.75 170.5 85.974 170.5 86.25 cv
170.5 86.526 170.724 86.75 171 86.75 cv
174 86.75 li
174.276 86.75 174.5 86.526 174.5 86.25 cv
174.5 85.974 174.276 85.75 174 85.75 cv
171 85.75 li
168 85.75 mo
167.724 85.75 167.5 85.974 167.5 86.25 cv
167.5 86.526 167.724 86.75 168 86.75 cv
168.276 86.75 168.5 86.526 168.5 86.25 cv
168.5 85.974 168.276 85.75 168 85.75 cv
162 85.75 mo
161.724 85.75 161.5 85.974 161.5 86.25 cv
161.5 86.526 161.724 86.75 162 86.75 cv
165 86.75 li
165.276 86.75 165.5 86.526 165.5 86.25 cv
165.5 85.974 165.276 85.75 165 85.75 cv
162 85.75 li
159 85.75 mo
158.724 85.75 158.5 85.974 158.5 86.25 cv
158.5 86.526 158.724 86.75 159 86.75 cv
159.276 86.75 159.5 86.526 159.5 86.25 cv
159.5 85.974 159.276 85.75 159 85.75 cv
153 85.75 mo
152.724 85.75 152.5 85.974 152.5 86.25 cv
152.5 86.526 152.724 86.75 153 86.75 cv
156 86.75 li
156.276 86.75 156.5 86.526 156.5 86.25 cv
156.5 85.974 156.276 85.75 156 85.75 cv
153 85.75 li
150 85.75 mo
149.724 85.75 149.5 85.974 149.5 86.25 cv
149.5 86.526 149.724 86.75 150 86.75 cv
150.276 86.75 150.5 86.526 150.5 86.25 cv
150.5 85.974 150.276 85.75 150 85.75 cv
144 85.75 mo
143.724 85.75 143.5 85.974 143.5 86.25 cv
143.5 86.526 143.724 86.75 144 86.75 cv
147 86.75 li
147.276 86.75 147.5 86.526 147.5 86.25 cv
147.5 85.974 147.276 85.75 147 85.75 cv
144 85.75 li
141 85.75 mo
140.724 85.75 140.5 85.974 140.5 86.25 cv
140.5 86.526 140.724 86.75 141 86.75 cv
141.276 86.75 141.5 86.526 141.5 86.25 cv
141.5 85.974 141.276 85.75 141 85.75 cv
135 85.75 mo
134.724 85.75 134.5 85.974 134.5 86.25 cv
134.5 86.526 134.724 86.75 135 86.75 cv
138 86.75 li
138.276 86.75 138.5 86.526 138.5 86.25 cv
138.5 85.974 138.276 85.75 138 85.75 cv
135 85.75 li
132 85.75 mo
131.724 85.75 131.5 85.974 131.5 86.25 cv
131.5 86.526 131.724 86.75 132 86.75 cv
132.276 86.75 132.5 86.526 132.5 86.25 cv
132.5 85.974 132.276 85.75 132 85.75 cv
126 85.75 mo
125.724 85.75 125.5 85.974 125.5 86.25 cv
125.5 86.526 125.724 86.75 126 86.75 cv
129 86.75 li
129.276 86.75 129.5 86.526 129.5 86.25 cv
129.5 85.974 129.276 85.75 129 85.75 cv
126 85.75 li
123 85.75 mo
122.724 85.75 122.5 85.974 122.5 86.25 cv
122.5 86.526 122.724 86.75 123 86.75 cv
123.276 86.75 123.5 86.526 123.5 86.25 cv
123.5 85.974 123.276 85.75 123 85.75 cv
117 85.75 mo
116.724 85.75 116.5 85.974 116.5 86.25 cv
116.5 86.526 116.724 86.75 117 86.75 cv
120 86.75 li
120.276 86.75 120.5 86.526 120.5 86.25 cv
120.5 85.974 120.276 85.75 120 85.75 cv
117 85.75 li
114 85.75 mo
113.724 85.75 113.5 85.974 113.5 86.25 cv
113.5 86.526 113.724 86.75 114 86.75 cv
114.276 86.75 114.5 86.526 114.5 86.25 cv
114.5 85.974 114.276 85.75 114 85.75 cv
108 85.75 mo
107.724 85.75 107.5 85.974 107.5 86.25 cv
107.5 86.526 107.724 86.75 108 86.75 cv
111 86.75 li
111.276 86.75 111.5 86.526 111.5 86.25 cv
111.5 85.974 111.276 85.75 111 85.75 cv
108 85.75 li
105 85.75 mo
104.724 85.75 104.5 85.974 104.5 86.25 cv
104.5 86.526 104.724 86.75 105 86.75 cv
105.276 86.75 105.5 86.526 105.5 86.25 cv
105.5 85.974 105.276 85.75 105 85.75 cv
99 85.75 mo
98.7238 85.75 98.5 85.974 98.5 86.25 cv
98.5 86.526 98.7238 86.75 99 86.75 cv
102 86.75 li
102.276 86.75 102.5 86.526 102.5 86.25 cv
102.5 85.974 102.276 85.75 102 85.75 cv
99 85.75 li
96 85.75 mo
95.7238 85.75 95.5 85.974 95.5 86.25 cv
95.5 86.526 95.7238 86.75 96 86.75 cv
96.2762 86.75 96.5 86.526 96.5 86.25 cv
96.5 85.974 96.2762 85.75 96 85.75 cv
90 85.75 mo
89.7238 85.75 89.5 85.974 89.5 86.25 cv
89.5 86.526 89.7238 86.75 90 86.75 cv
93 86.75 li
93.2762 86.75 93.5 86.526 93.5 86.25 cv
93.5 85.974 93.2762 85.75 93 85.75 cv
90 85.75 li
87 85.75 mo
86.7238 85.75 86.5 85.974 86.5 86.25 cv
86.5 86.526 86.7238 86.75 87 86.75 cv
87.2762 86.75 87.5 86.526 87.5 86.25 cv
87.5 85.974 87.2762 85.75 87 85.75 cv
clp
48.69 156.51 mo
226.51 156.51 li
226.51 19.19 li
48.69 19.19 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[177.82 0 0 137.32 48.69 55.49 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 237 
/H 183 
/M[237 0 0 -183 0 183 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 237 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 237 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 237 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 237 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcL`0pAojH
XTA4tq#H9QRfV^QJcLB&JcMtS!!1UOJca0u!!2]l!<E2?!J1@1!<E0$nc/Xj[/bdYnGiOiP5p17oDeso
"9\pm#F#Gq"p>&0p&G-r!<[oWV$-o&!<_uprrVWhJcN1YrrUOIJcN@^!W`?+bR/q/ed;H^!Wi)s!s&B'
"hXti"R#sj"TeZ)p]1<pr;`u$JcYcMr;ciuN<"P1rW!*&!sf8E$]>@`$3^eI$O?h8p](Eu"9f&7q#l9P
Y64t3#R(>4quHTo!!2utNWGaQqu?]tl2ZD9TE#/s!soDE#mTZ"Jd9'r"pPAA%1*+;p](L""U>/6!s@6\
Jd'R+"p4r2":#)3o`+sm`;kJihZ*WWV#Z)Ij8]Dc!soDD"p5"+!epaY"9Si8!t>P=!VcX!!X/c2!s/Rj
!LEfk!s/Q-"pG)$!<3'$!!!(S!2ol#!WW3$!T3s0!3#r&!<WW9#m:=g!J1?o!<rT.#n%%A!VcWp!r`?)
!<E2J!J1@,!<N6%!WE6&!qQBl!knYd!9sOa!h'+@!:9aj!<WW9#m14!!0.$`!<WW9#m15+!;ult!r`?'
!fI&M!!!*""TSVh!.k3I!.k33!!WH+#n%%A!W)kK!3ZA,!<WW9#m15'!!!*""TSVg!.k3c!!!*""TSVG
!.k3&!.k4"!!WH+#n%%A!Oi&\!:p0p!<WW9#m15'!!!*""TSV#!/(=Q!X/W/"TjAXJcLB&QiI<k!so>A
!s.rmJcN:\"p"f4$OHn9p](9qrWN9'huJ?/a8c2ArWN9'^]8rdJcLB&g].NZ!so>A!s,P)JcP]K"p"f4
$OHn9p](9qrWN9'S,eNK!!<-'!!<#tJcLB&JcMVIr;[$&!so>A!s+A]ScArq!so>A!s//s!!<-'!!;us
JcMqR!!<-'!!:jSJcLB&JcNXf"p"f4$OHn9a8geliW'/`!so>A!s//s!!<-'!!9S/JcP?A!!<-'!!8Gd
JcLB&LB%GX!so>A!<W@U!2ff$!<WW9#m15'!!!*""TSVo!.k3[!!!*""TSVO!.k3&!.k3o!!WH+#n%%A
!P\Vd!:'Uh!<WW9#m15'!!!*""TSV+!.k4J!!!*""TSU`!.k3&!0@0b!<WW9#m15)!.k3T!!WH+#n%%A
!W<#r!!!*""TSU_!1a)i!r`?'!p]i<!.k3&!3lM.!<WW9#m14]!.k3u!!WH+#n%%A!VcWp!r`?'!lk:m
!9!nX!r`?'!iH$M!.k3&!;-<r!<WW9#m13n!1!Th!<WW9#m15'!!!*""TSUV!2]_r!r`?'!oa33!.k3&
!4i.7!<WW9#m14T!.k4)!!WH+#n%%A!VcWp!r`?'!knYd!9sOa!r`?'!hKCD!.k3&!<)s&!<WW9#m13e
!1s5q!<WW9#m15'!!!*""TSW"!.k3S!!!*""TSW%!.k3&!.k3D!!WH+#n%%A!U9Z:!5JR=!<WW9#m15'
!!!*""TSVV!.k3t!!!*""TSV6!.k3&!.k43!!WH+#n%%A!N#jN!!30'#m1PA!s//s!!<-'!!8AbPlLdc
rWN9'o)O@BJcLB&W;m,'!so>A!s.?\JcNmm"p"f4$OHn9p](9qrWN9'cN&Osf`2!RrWN9'Y5j.SJcLB&
m/R=k!so>A!s+qmNW97a!so>A!s/<"r;Zg!rWN9'MZB=K!!<-'!!;EcJcMVIJcLi3"p"f4$OHn9qZ)3J
Y5eb-!so>A!s//s!!<-'!!;BbJcNOc!!<-'!!:7BJcLB&JcO7""p"f4$OHn9[fD![o)Jsq!so>A!s//s
!!<-'!!8tsKE)#S"Tei2!egW+!.k3<!!WH+#n%%A!V-5B!4W"5!<WW9#m15'!!!*""TSV^!.k3l!!!*"
"TSV>!.k3&!.k4+!!WH+#n%%A!NlES!;lg$!<WW9#m15'!!!*""TSUo!0$sY!r`?'!rDtL!.k3&!2T\o
!!WH+#n%%A!K@)N!!WH+#n%%A!VcWp!r`?'!r;nK!3Q;%!r`?'!nmX+!.k3&!5\^?!<WW9#m14L!.k41
!!WH+#n%%A!VcWp!r`?'!k&)\!:g*i!r`?'!gWh<!.k3+!!E<)#n%%?!s+&TVZ6o%!so>A!s//s!!<-'
!!;ZjJcN7[!!<-'!!:OJJcLB&JcNso"p"f4$OHn9^AriclMq+i!so>A!s//s!!<-'!!98&JcPZJ!!<-'
!!8,[JcLB&O8oIc!so>A!s/5uJcN"T"p"f4$OHn9r;c`q!!<-'!!8)ZSH&WkrWN9'lMuM:JcLB&YlFt/
!so>A!s.'TJcO0u"p"f4$OHn9p](9qrWN9'`rL\ki;`iZrWN9'VZ;;KJcLB&o`,0s!so>A!s+YeQ2h*i
!so>A!s//s!!<-'!!7cQV>pStrWN9'iW+Q1JcLB&\c;p8!so>A!s-aKJcOL)"p"f4$OHn9p](9qrWN9'
^&W`bl2UecrWN9'ScF?BJcLB&rW!-'!so>A!s+>\T)]&r!so>A!s//s!!<-'!!;rrJcMtS!!<-'!!<&u
JcLB&JcMGD"p"f4$OHn9l2ZD9^]4Q>!so>A!s//s!!<-'!!:dQJcO-t!!<-'!!9Y1JcLB&JcOj3"p"f4
$OHn9V>u;M!W`B0!t,D;!VcWp!r`?'!gE\M!!!*""TSVq!.k3&!.k3M!!WH+#n%%A!T=$1!6G3F!<WW9
#m15'!!!*""TSVM!.k4(!!!*""TSV-!.k3&!.k4<!!WH+#n%%A!M'4N!!WH+#n%%A!W2rr!!!*""TSU^
!1j/j!r`?'!pTc;!2T[I!07*a!<WW9#m15*!.k3S!!WH+#n%%A!VcWp!r`?'!pK]:!5AL6!r`?'!m(Fo
!.k3&!7LoP!<WW9#m14;!.k4B!!WH+#n%%A!VcWp!r`?'!i5mM!!*-)!X/`/K`H])JcM/<"p"f4$OHn9
nc47A\,Z^6!so>A!s//s!!<-'!!;'YJcNjl!!<-'!!9q9JcLB&JcOR+"p"f4$OHn9XoO%Rqu?p%!so>A
!s//s!!<-'!!8YjN;rq[rWN9'qZ)3JJcLB&V#^Go"p"f4$OHn9N<#OM"p"f4$OHn9p](9qrWN9'q>c*I
XoJG'rWN9'g&Q^)JcLB&_>jc@!so>A!s-ICJcOd1"p"f4$OHn9p](9qrWN9'[K(mZnc/XkrWN9'Q2lL:
JcLQ+"9AT2$OHh9!JCHN!!WH+#n%%A!VcWp!r`?'!q?8B!4Mq.!r`?'!mq""!.k3&!6Y?H!<WW9#m14C
!.k4:!!WH+#n%%A!VcWp!r`?'!j)HS!;c`r!r`?'!f[23!.k34!!WH+#n%%A!VueJ!3cG-!<WW9#m15,
!;lfs!r`?'!fR,M!!!*""TSVi!.k3&!.k3U!!WH+#n%%A!SII)!7:cN!<WW9#m15'!!!*""TSVE!.k40
!!!*""TSV%!.k3&!.k4D!!WH+#n%%A!L3YN!!WH+#n%%A!VcWp!r`?'!eUKM!!!*""TSV`!.k3&!.k3^
!!WH+#n%%A!RLgu!87DW!<WW9#m15'!!!*""TSV<!.k49!!!*""TSUq!.k3&!.k4M!!WH+#n%%A!K7#N
!!WH+#n%%A!VcWp!r`?'!r2hJ!3ZA&!r`?'!rN%M!.k3&!2';r!<WW9#m14n!.k3d!!WH+#n%%A!VcWp
!r`?'!n[L)!71]G!r`?'!k85^!.k3&!9=+a!<WW9#m14*!/1CS!<WW1$OHn9p](9qrWN9'PQ6sK!!<-'
!!;`lJcLB&JcMbM"p"f4$OHn9i;eH0aT)MG!so>A!s//s!!<-'!!:IHJcOI(!!<-'!!9>(JcLB&JcP0<
"p"f4$OHn9SH+ZM"p"f4$OHn9quHZq!!<-'!!8&YScA`lrWN9'l2ZD9V#Z)INrT@b!so>A!s/9!JcMtS
"p"f4$OHn9p](9qrWN9'kl?;8^An68rWN9'aT-nmJcLB&df9RQ!so>A!s,k2JcPBB"p"f4$OHn9p](9q
rWN9'V#Z/K!<NE+"U+s]!.k3&!13`j!<WW9#m15!!.k3\!!WH+#n%%A!VcWp!r`?'!oO'1!6>-?!r`?'
!l+ef!.k3&!8IPY!<WW9#m142!.k4K!!WH+#n%%A!VcWp!r`?'!h97M!!!*""TSW$!.k3&!.k3I!;um%
!<WW9#m13f!1j/p!<WW9#m15'!!!*""TSW#!.k3R!!!*""TSVX!.k3&!.k3f!!WH+#n%%A!QY7m!9*t_
!<WW9#m15'!!!*""TSV4!.k4A!!!*""TSUi!.k3&!/COW!<WW9#lt,/KE.nM"p"f4$OHn9p](9qrWN9'
nGn.@[f?C0rWN9'd/\auJcLB&b5__I!so>A!s-.:JcP*:"p"f4$OHn9p](9qrWN9'XT3qQqZ$TtrWN9'
N<"P1JcLl4"p"f4$OHn9q>c*IYQ+k.!so>A!s/?#qu?]urWN9'Mu]CK!!<-'!!;HdJcLB&JcN%U"p"f4
$OHn9f`6U(d/X@O!so>A!s//s!!<-'!!:1@JcOa0!!<-'!!9%uJcLB&JcPHD"p"f4$OHn9PlR*M"p"f4
$OHn9p](9qrWN9'K)hbK!!<-'!!;-[JcLB&JcN@^"p"f4$OHn9ciAXtg&M<X!so>A!s//s!!<-'!!9k7
JcP'9!!<-'!!8_lJcLB&JcPcM"p"f4$OHn9Mu]IM"p"f4$OHn9p](9qrWN9'q#H!HY5eP(rWN9'quD<K
JcLB&TE#/s!so>A!s.ZeJcNRd"p"f4$OHn9p](9qrWN9'fDpL'ci=%IrWN9'\,_*\JcLB&j8]Ab!so>A
!s,8!K`D/T!so&;#m15'!!!*""TSUg!0mNa!r`?'!qQDD!.k3&!3#r&!<WW9#m14e!.k3m!!WH+#n%%A
!VcWp!r`?'!m^ju!8.>P!r`?'!j;TU!.k3&!:9aj!<WW9#m14!!0.$`!<WW9#m15+!;ult!r`?'!fI&M
!!!*""TSVh!.k3I!.k33!!WH+#n%%A!W)kK!3ZA,!<WW9#m15'!!!*""TSVg!.k3c!!!*""TSVG!.k3&
!.k4"!!WH+#n%%A!Oi&\!:p0p!<WW9#m15'!!!*""TSV#!/(=Q!X/W/"TjAXJcLB&QiI<k!so>A!s.rm
JcN:\"p"f4$OHn9p](9qrWN9'huJ?/a8c2ArWN9'^]8rdJcLB&g].NZ!so>A!s,P)JcP]K"p"f4$OHn9
p](9qrWN9'S,eNK!!<-'!!<#tJcLB&JcMVIr;[$&!so>A!s+A]ScArq!so>A!s//s!!<-'!!;usJcMqR
!!<-'!!:jSJcLB&JcNXf"p"f4$OHn9a8geliW'/`!so>A!s//s!!<-'!!9S/JcP?A!!<-'!!8GdJcLB&
LB%GX!so>A!<W@U!2ff$!<WW9#m15'!!!*""TSVo!.k3[!!!*""TSVO!.k3&!.k3o!!WH+#n%%A!P\Vd
!:'Uh!<WW9#m15'!!!*""TSV+!.k4J!!!*""TSU`!.k3&!0@0b!<WW9#m15)!.k3T!!WH+#n%%A!W<#r
!!!*""TSU_!1a)i!r`?'!p]i<!.k3&!3lM.!<WW9#m14]!.k3u!!WH+#n%%A!VcWp!r`?'!lk:m!9!nX
!r`?'!iH$M!.k3&!;-<r!<WW9#m13n!1!Th!<WW9#m15'!!!*""TSUV!2]_r!r`?'!oa33!.k3&!4i.7
!<WW9#m14T!.k4)!!WH+#n%%A!VcWp!r`?'!knYd!9sOa!r`?'!hKCD!.k3&!<)s&!<WW9#m13e!1s5q
!<WW9#m15'!!!*""TSW"!.k3S!!!*""TSW%!.k3&!.k3D!!WH+#n%%A!U9Z:!5JR=!<WW9#m15'!!!*"
"TSVV!.k3t!!!*""TSV6!.k3&!.k43!!WH+#n%%A!N#jN!!30'#m1PA!s//s!!<-'!!8AbPlLdcrWN9'
o)O@BJcLB&W;m,'!so>A!s.?\JcNmm"p"f4$OHn9p](9qrWN9'cN&Osf`2!RrWN9'Y5j.SJcLB&m/R=k
!so>A!s+qmNW97a!so>A!s/<"r;Zg!rWN9'MZB=K!!<-'!!;EcJcMVIJcLi3"p"f4$OHn9qZ)3JY5eb-
!so>A!s//s!!<-'!!;BbJcNOc!!<-'!!:7BJcLB&JcO7""p"f4$OHn9[fD![o)Jsq!so>A!s//s!!<-'
!!8tsKE)#S"Tei2!egW+!.k3<!!WH+#n%%A!V-5B!4W"5!<WW9#m15'!!!*""TSV^!.k3l!!!*""TSV>
!.k3&!.k4+!!WH+#n%%A!NlES!;lg$!<WW9#m15'!!!*""TSUo!0$sY!r`?'!rDtL!.k3&!2T\o!!WH+
#n%%A!K@)N!!WH+#n%%A!VcWp!r`?'!r;nK!3Q;%!r`?'!nmX+!.k3&!5\^?!<WW9#m14L!.k41!!WH+
#n%%A!VcWp!r`?'!k&)\!:g*i!r`?'!gWh<!.k3+!!E<)#n%%?!s+&TVZ6o%!so>A!s//s!!<-'!!;Zj
JcN7[!!<-'!!:OJJcLB&JcNso"p"f4$OHn9^AriclMq+i!so>A!s//s!!<-'!!98&JcPZJ!!<-'!!8,[
JcLB&O8oIc!so>A!s/5uJcN"T"p"f4$OHn9r;c`q!!<-'!!8)ZSH&WkrWN9'lMuM:JcLB&YlFt/!so>A
!s.'TJcO0u"p"f4$OHn9p](9qrWN9'`rL\ki;`iZrWN9'VZ;;KJcLB&o`,0s!so>A!s+YeQ2h*i!so>A
!s//s!!<-'!!7cQV>pStrWN9'iW+Q1JcLB&\c;p8!so>A!s-aKJcOL)"p"f4$OHn9p](9qrWN9'^&W`b
l2UecrWN9'ScF?BJcLB&rW!-'!so>A!s+>\T)]&r!so>A!s//s!!<-'!!;rrJcMtS!!<-'!!<&uJcLB&
JcMGD"p"f4$OHn9l2ZD9^]4Q>!so>A!s//s!!<-'!!:dQJcO-t!!<-'!!9Y1JcLB&JcOj3"p"f4$OHn9
V>u;M!W`B0!t,D;!VcWp!r`?'!gE\M!!!*""TSVq!.k3&!.k3M!!WH+#n%%A!T=$1!6G3F!<WW9#m15'
!!!*""TSVM!.k4(!!!*""TSV-!.k3&!.k4<!!WH+#n%%A!M'4N!!WH+#n%%A!W2rr!!!*""TSU^!1j/j
!r`?'!pTc;!2T[I!07*a!<WW9#m15*!.k3S!!WH+#n%%A!VcWp!r`?'!pK]:!5AL6!r`?'!m(Fo!.k3&
!7LoP!<WW9#m14;!.k4B!!WH+#n%%A!VcWp!r`?'!i5mM!!*-)!X/`/K`H])JcM/<"p"f4$OHn9nc47A
\,Z^6!so>A!s//s!!<-'!!;'YJcNjl!!<-'!!9q9JcLB&JcOR+"p"f4$OHn9XoO%Rqu?p%!so>A!s//s
!!<-'!!8YjN;rq[rWN9'qZ)3JJcLB&V#^Go"p"f4$OHn9N<#OM"p"f4$OHn9p](9qrWN9'q>c*IXoJG'
rWN9'g&Q^)JcLB&_>jc@!so>A!s-ICJcOd1"p"f4$OHn9p](9qrWN9'[K(mZnc/XkrWN9'Q2lL:JcLQ+
"9AT2$OHh9!JCHN!!WH+#n%%A!VcWp!r`?'!q?8B!4Mq.!r`?'!mq""!.k3&!6Y?H!<WW9#m14C!.k4:
!!WH+#n%%A!VcWp!r`?'!j)HS!;c`r!r`?'!f[23!.k34!!WH+#n%%A!VueJ!3cG-!<WW9#m15,!;lfs
!r`?'!fR,M!!!*""TSVi!.k3&!.k3U!!WH+#n%%A!SII)!7:cN!<WW9#m15'!!!*""TSVE!.k40!!!*"
"TSV%!.k3&!.k4D!!WH+#n%%A!L3YN!!WH+#n%%A!VcWp!r`?'!eUKM!!!*""TSV`!.k3&!.k3^!!WH+
#n%%A!RLgu!87DW!<WW9#m15'!!!*""TSV<!.k49!!!*""TSUq!.k3&!.k4M!!WH+#n%%A!K7#N!!WH+
#n%%A!VcWp!r`?'!r2hJ!3ZA&!r`?'!rN%M!.k3&!2';r!<WW9#m14n!.k3d!!WH+#n%%A!VcWp!r`?'
!n[L)!71]G!r`?'!k85^!.k3&!9=+a!<WW9#m14*!/1CS!<WW1$OHn9p](9qrWN9'PQ6sK!!<-'!!;`l
JcLB&JcMbM"p"f4$OHn9i;eH0aT)MG!so>A!s//s!!<-'!!:IHJcOI(!!<-'!!9>(JcLB&JcP0<"p"f4
$OHn9SH+ZM"p"f4$OHn9quHZq!!<-'!!8&YScA`lrWN9'l2ZD9V#Z)INrT@b!so>A!s/9!JcMtS"p"f4
$OHn9p](9qrWN9'kl?;8^An68rWN9'aT-nmJcLB&df9RQ!so>A!s,k2JcPBB"p"f4$OHn9p](9qrWN9'
V#Z/K!<NE+"U+s]!.k3&!13`j!<WW9#m15!!.k3\!!WH+#n%%A!VcWp!r`?'!oO'1!6>-?!r`?'!l+ef
!.k3&!8IPY!<WW9#m142!.k4K!!WH+#n%%A!VcWp!r`?'!h97M!!!*""TSW$!.k3&!.k3I!;um%!<WW9
#m13f!1j/p!<WW9#m15'!!!*""TSW#!.k3R!!!*""TSVX!.k3&!.k3f!!WH+#n%%A!QY7m!9*t_!<WW9
#m15'!!!*""TSV4!.k4A!!!*""TSUi!.k3&!/COW!<WW9#lt,/KE.nM"p"f4$OHn9p](9qrWN9'nGn.@
[f?C0rWN9'd/\auJcLB&b5__I!so>A!s-.:JcP*:"p"f4$OHn9p](9qrWN9'XT3qQqZ$TtrWN9'N<"P1
JcLl4"p"f4$OHn9q>c*IYQ+k.!so>A!s/?#qu?]urWN9'Mu]CK!!<-'!!;HdJcLB&JcN%U"p"f4$OHn9
f`6U(d/X@O!so>A!s//s!!<-'!!:1@JcOa0!!<-'!!9%uJcLB&JcPHD"p"f4$OHn9PlR*M"p"f4$OHn9
p](9qrWN9'K)hbK!!<-'!!;-[JcLB&JcN@^"p"f4$OHn9ciAXtg&M<X!so>A!s//s!!<-'!!9k7JcP'9
!!<-'!!8_lJcLB&JcPcM"p"f4$OHn9Mu]IM"p"f4$OHn9p](9qrWN9'q#H!HY5eP(rWN9'quD<KJcLB&
TE#/s!so>A!s.ZeJcNRd"p"f4$OHn9p](9qrWN9'fDpL'ci=%IrWN9'\,_*\JcLB&j8]Ab!so>A!s,8!
K`D/T!so&;#m15'!!!*""TSUg!0mNa!r`?'!qQDD!.k3&!3#r&!<WW9#m14e!.k3m!!WH+#n%%A!VcWp
!r`?'!m^ju!8.>P!r`?'!j;TU!.k3&!:9aj!<WW9#m14!!0.$`!<WW9#m15+!;ult!r`?'!fI&M!!!*"
"TSVh!.k3I!.k33!!WH+#n%%A!W)kK!3ZA,!<WW9#m15'!!!*""TSVg!.k3c!!!*""TSVG!.k3&!.k4"
!!WH+#n%%A!Oi&\!:p0p!<WW9#m15'!!!*""TSV#!/(=Q!X/W/"TjAXJcLB&QiI<k!so>A!s.rmJcN:\
"p"f4$OHn9p](9qrWN9'huJ?/a8c2ArWN9'^]8rdJcLB&g].NZ!so>A!s,P)JcP]K"p"f4$OHn9p](9q
rWN9'S,eNK!!<-'!!<#tJcLB&JcMVIr;[$&!so>A!s+A]ScArq!so>A!s//s!!<-'!!;usJcMqR!!<-'
!!:jSJcLB&JcNXf"p"f4$OHn9a8geliW'/`!so>A!s//s!!<-'!!9S/JcP?A!!<-'!!8GdJcLB&LB%GX
!so>A!<W@U!2ff$!<WW9#m15'!!!*""TSVo!.k3[!!!*""TSVO!.k3&!.k3o!!WH+#n%%A!P\Vd!:'Uh
!<WW9#m15'!!!*""TSV+!.k4J!!!*""TSU`!.k3&!0@0b!<WW9#m15)!.k3T!!WH+#n%%A!W<#r!!!*"
"TSU_!1a)i!r`?'!p]i<!.k3&!3lM.!<WW9#m14]!.k3u!!WH+#n%%A!VcWp!r`?'!lk:m!9!nX!r`?'
!iH$M!.k3&!;-<r!<WW9#m13n!1!Th!<WW9#m15'!!!*""TSUV!2]_r!r`?'!oa33!.k3&!4i.7!<WW9
#m14T!.k4)!!WH+#n%%A!VcWp!r`?'!knYd!9sOa!r`?'!hKCD!.k3&!<)s&!<WW9#m13e!1s5q!<WW9
#m15'!!!*""TSW"!.k3S!!!*""TSW%!.k3&!.k3D!!WH+#n%%A!U9Z:!5JR=!<WW9#m15'!!!*""TSVV
!.k3t!!!*""TSV6!.k3&!.k43!!WH+#n%%A!N#jN!!30'#m1PA!s//s!!<-'!!8AbPlLdcrWN9'o)O@B
JcLB&W;m,'!so>A!s.?\JcNmm"p"f4$OHn9p](9qrWN9'cN&Osf`2!RrWN9'Y5j.SJcLB&m/R=k!so>A
!s+qmNW97a!so>A!s/<"r;Zg!rWN9'MZB=K!!<-'!!;EcJcMVIJcLi3"p"f4$OHn9qZ)3JY5eb-!so>A
!s//s!!<-'!!;BbJcNOc!!<-'!!:7BJcLB&JcO7""p"f4$OHn9[fD![o)Jsq!so>A!s//s!!<-'!!8ts
KE)#S"Tei2!egW+!.k3<!!WH+#n%%A!V-5B!4W"5!<WW9#m15'!!!*""TSV^!.k3l!!!*""TSV>!.k3&
!.k4+!!WH+#n%%A!NlES!;lg$!<WW9#m15'!!!*""TSUo!0$sY!r`?'!rDtL!.k3&!2T\o!!WH+#n%%A
!K@)N!!WH+#n%%A!VcWp!r`?'!r;nK!3Q;%!r`?'!nmX+!.k3&!5\^?!<WW9#m14L!.k41!!WH+#n%%A
!VcWp!r`?'!k&)\!:g*i!r`?'!gWh<!.k3+!!E<)#n%%?"9O5WVZ?u'":5GB!s//s!!<-'!W`<%o)XFD
\H)a3!<N0'!!;`l!!;'YJcNjl!!9e5JcNso#6=o5%13:A"Mb(j!pfsn"9Si8%1*+;p](L""U5)3!X#V,
JcYfN"p4o/"9o#2o`,*q!<<*$ScFfO"9JQ'!<MurJcLl4"p"f4%1NUJq?MTWYQk@:#n7=M!s/?#qu?p&
"U>58!s=PeT*5E$!sJl6"Tn>srrMoqJcMnQrrLaPJcN%U"T\]2%1N]t$A&W3$3^eH%1!%:p](Eu"9o&6
`rptsi<08e"pP23o`5!mrW'G/JcYKErW)s!PQ6:8o`,-r!X8r>%$V*a$3^hH#mLG3q#CNu!<WK1!!e,Z
V?@&-#6b21!V-6]!J1?^!QtIp!4`(2!X&_P#D*34#6G)4!quZu!WrQ/!s?:AJd(HD"Tni1"9S`"!!<9(
!!0/$JcPWI!s&B'!quZp!gitE!!!)t!;lfs!JgfH!WW8n!;6GF!NZ=u!.k3&!.k3@!9XB7!PJO(!7h1&
!R:_R!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3&!.k3I!.k37!.Y~>

%%EndBinary
grestore
np
grestore
54 149.25 mo
54 148.875 li
220.125 148.875 li
220.125 23.625 li
54.3754 23.625 li
54.3754 149.25 li
54 149.25 li
54 148.875 li
54 149.25 li
53.6246 149.25 li
53.6246 22.875 li
220.875 22.875 li
220.875 149.625 li
53.6246 149.625 li
53.6246 149.25 li
54 149.25 li
false sop
1 /0 /CSD get_res sepcs
1 sep
f
gsave
63 173.484 mo
72.9859 173.484 li
72.9859 158.5 li
63 158.5 li
63 173.484 li
eclp
%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
-0.566 -0.305 2.043 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74201d6402d700000124000010846670676d6d591b53000011a800000a59
676c796600000000000078b00000070868656164e785330600001c040000
003668686561134d184100001c3c00000024686d74780000000000001c60
0000005a6c6f63610000000000001cbc000020546d617870173c08ae0000
3d10000000206e616d6543e71ee300003d3000002bea70726570b3329291
0000691c00000f9367646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff0000000000000000000000000001000000000000058e0000054c001f
054c001c0394001b0000ffe10000ffe40000ffe8fe4afffc056b0023fe6a
ffe00313000000ad000000ad0000000000250096009f002400f0013100c2
00c0004a00a6004100500094004700cf00af000e007901cb000400230044
00a80025011f0002004600170105009900d9005c007200e500e00028004b
00de011200240045007000160039ffe90016004b0088ffb900d9000a0043
00ae00ba016c0153002f00430048022c012b0025008fffc000170028ffcd
ffd80025009d00e50124ffb10048009d00e600110027007f00910012006a
00cafffc00000024006200a7017c01e900210060008b0434048aff6b003b
00b500d5014bff6b004d007905d809b5006c009100a3011701c0ffdfffe7
00be04010065007f00820088009900b200c0022e034305a000200026003d
004e00610065007b00d9011301310340ff27ff42ff99004e00a700f2022b
02c603070011002b0049005f008d00a100af00d600e400f5010b0135019d
01ab01ab01d101ee05d80000004b0075007a0080009d00a600a700ac00b9
013101310217021700020017002900550080008f00a500b200b300d0014b
015901c001c103a50530fe3fff14ff15ffe7ffff002a00580099009f00c1
00e400f40130015901ab01ab03220374041e04740532fd81004d0064009c
00d000d100d600de00e500f500f8012a012a01e1027e027fff57ffa8ffe5
00000008001f00380051005a006f0076007700a200c000c200c400f101fb
0209027e02cf04c5057a05f0ff92001200260042004b004f005100530064
008b00ae00b200b800b800d600f50111012001310138014e01520167018f
019601b801d901d902060221027102ea03b003cb03dc04360505ff3a0012
0016001e001f002300570068006c007e0088009200a500a800c500c90115
0126012d013001d601d901f6023b0244024402a302cf02de0385038f04fc
0586fee0feebfefbff8a0007004400470058007500aa00e400ef01160120
0129016a017301e3027e029002b4030e0310032303350341035403590388
039403c803ce047204ab04da0549056105ab0761fe6efed1ff4bff840000
00010006001e0027002c0034003700620066006a006b006c007000700072
007c0081008a008e0091009200a000ab00b800bf00c900d500dd00ec00f4
0100012101300169016a016d017c0185018e018e019901ac01c101c501c9
01e101f601f601f60222022202280236023f024302460267028502850294
02d002d602e8031c0363037f03800380039e03b603d90400040404ff0532
05320548058b05a706cb07280748076208ccfcedfd2afd59fddefe00fe1a
fe5bfe96fec1fee7ff56ff7900010025002d002e007c00870091009900a1
00a500a500aa00af00b600c600cc00d700dd00ec00f20102010501170118
0123012a012c0131013f014701490149014d01510151015501550157015a
015a0161016201680168017f0180018201830184018d0195019501950198
019901a501a901b601b601b701ba01ba01d501df01e601ea01f202000200
0203021702250227022f0239024302430247024f025202520267026f026f
027002720276027e02a702b302b902d603130325032d03610371039903ae
03c203d403f90402042c042f043c04560467048304cf04d104d804fb051f
05450568059e05c2061b06340655066a069806af06e806fc070607500762
077c07d407ff082500ad00c700aa00b5000000000000000000000000002f
06cf01730514047802df009c0018037005870155002500060254036c038e
03d2056601f0032001da018a0369036bffa3034602f8036f015602bf0122
031f053a0366008c00ff01ab02e102f402e70415015402e90128049101b7
026f034302060000000005d30415048305e8000002d7003a027d01c002c5
03830383ffbd003a059e01df059e02d1002004e0021300df01c001870297
000000ce0269028b0058043405fb0069015a01a905780182013e0288012a
03d4049e00e5032302f301f00196007a00cd014a0424025e023901ab00cf
00fd011e00ed017100700195004001bb01dd01b8000101a803a7014c020c
018d01b0020d0137010000cd032101d4030a005900000000012602150150
02f0025503bc06d00335010100d000d2007a01030130007c000000000000
000000fe006e006600940227002b0045004d00d3013200180097004100f4
febcffe9001605d8058b009100a1032c00520030005d02cb003a009200e5
00e500580086003200ba0099008800300298007cff8001640028004d0065
000200b8016a002f010b001100170100007f00040016022200a6005f0000
00f8000a00ca0043004b01ee0077012000f401c00028045f0000008c0445
00c20060007b008b008b0064005d00c2009c009206b505d3004f01170000
0420fe9e00cc00dc005e004600e30032001a003c0091005a00a1042c0041
002000490071009c009cfe4800400040008600cb0102007d003a003e006a
0050044800290096ff6a0097006900e0004c001b00c90069ff970043ffbd
0052ff83ff8b005fffa1ff5c00670053ffa8002a0076ffb2003600870559
0256052b043400de00c901c4004800db018b00b3004800da011601250118
00ea00ea00ae0000003e05bb008a04d70053003fff8cffd5001500280022
00990062004a00e4006d00ee00e5004803c00033fe4e02b1ff4603700079
05df0051ffa7ff1f010a0068ff6c004f00bc00a5070500ab0080001e05a5
0025008b04660230006900290016012f0080005c059f03d703f104700000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000160016001700180018001a001b00210029002a002a002c002d002e
002f003200340036003700380039003a003b003c003d003e004200460046
004a004c004d004f004f00530053005500570059005c005c005d005d005e
005f0061006400650067006800690069006b006e006f0071007600760077
0077007d007e007f008000810082008600870087008a008d008e00960096
00970097009c00a000a200a300a600ac00b300b300b600b800b900be00bf
00c100c200c400c500c600c700ca00ca00cb00cc00cc00ce00d100d200d3
00d700da00db00dc00de00df00e000e000e300e640578574737271706f6e
6d6c6b6a6968676665625d55544f4e403f3e3d3c3b3a3938373635343332
31302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161413
1211100f0e0d0c0b0a090807060504030201002c4523466020b02660b004
262348482d2c452346236120b02661b004262348482d2c45234660b02061
20b04660b004262348482d2c4523462361b0206020b02661b02061b00426
2348482d2c45234660b0406120b06660b004262348482d2c4523462361b0
406020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0
cd442320b8015a51582320b08d44235920b0ed51582320b04d44235920b0
9051582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b017
2370b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b0
1923442d2c2045b00325456164b050515845441b2121592d2cb001436323
62b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb012
43588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720
b0a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b23
5961441cb114008a5279b31940201945208a54582321b03f1b235961442d
2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c
0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b52
5845441b2121592d2c0120b003252349b04060b0206320b000525823b002
253823b002256538008a63381b212121212159012d2c4bb06451584569b0
0943608a103a1b212110592d2c01b005251023208af500b0016023edec2d
2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c
20b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a
2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b8
02b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c
21b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c051
580c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb84000
626023212d2cb4000100000015b00826b00826b00826b008260f10161345
683ab001162d2cb4000100000015b00826b00826b00826b008260f101613
4568653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b5458
20458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b
2121592d2c014b53234b515ab00225b00425b006254923451869525a58b0
0225b00225b00525462345696048592121212d2cb0134358031b02592d2c
b0134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b010
60482046b0106048590a21211b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b8fff060482046b8ff
f06048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b
53234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b21
21592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b212159
2d2c462346608a8a462320468a608a61b8ff8062232010238ab903580358
8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2c23
20b000508a8a64b10003255458b0401bb10103255458b037438b59b04f2b
5923b0622b2321235865592d2cb13a000c215460432d2cb1020042b12301
8851b1400188535a58b910000020885458b202010243604259b124018851
58b920000040885458b2020202436042b12401885458b202200243604200
4b014b5258b2020802436042591bb940000080885458b202040243604259
b94000008063b80100885458b202080243604259b94000010063b8020088
5458b202100243604259b12601885158b94000020063b80400885458b202
400243604259b94000040063b80800885458b202800243604259b1280188
5158b94000080063b81000885458ba000201000002436042595959595959
59b10002435458400a37403a403b403e023f021bb10102435458b237403a
ba0100003b0100b33e013f011bb18002435258b237403ab80180b13b401b
b901000002435258b237403aba0180003b01401bb901800002435258b237
403ab80200b13b401bb237403aba0100003b0100595959b9400000808855
b94000020063b8040088555a58b33e003f011bb33e003f01595959424242
42422d2cb0024354584b53234b515a58381b2121591b21212121592d2c01
2d2cb0022563b0206066b00225b82000626023622d2c234ab1024e2b2d2c
234ab1014e2b2d2c238a4a234564b0022564b002256164b0354352582120
6459b1024e2b23b000505865592d2c238a4a234564b0022564b002256164
b03543525821206459b1014e2b23b000505865592d2c20b003254ab1024e
2b8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b
8a103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b0
04252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b0
0325466061b08062208a2010233a232010233a2d2cb0032547b003254760
b0052547b0806361b00225b00625496323b005254ab080632058621b2159
b0042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e
2b208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb080
5020605920606020b001515821211b20b005515821206661b0402361b100
032550b00325b00325505a5820b00325618a535821b000591b21591bb007
54582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab0
005358b0001b8a8a238ab00159b004254620666120b00526b0062649b005
26b00526b0702b236165b02060206661b02061652d2cb0022546208a20b0
00505821b1024e2b1b452321596165b00225103b2d2cb0042620b8020062
20b80200638a236120b05d602bb00525118a128a20398a58ba005d100000
04266356602b23212010204620b1024e2b23611b2321208a201049b1024e
2b593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb1
5d0725602bb00525b00525b00525b00525b06f2bba005d10000008266356
602b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb002
1738b00052b00225b001525a58b00425b0062549b00325b00525496020b0
405258211bb000525820b0025458b00425b00425b00725b0072549b00217
381bb00425b00425b00425b0062549b0021738595959595921212121212d
2cb12501885058b94000020063b8040088545cb0134b525b1bb001592d00
0000000100000006e666b1b0afba5f0f3cf50819080000000000a2e31dc2
00000000d19de403fb74fd8c105e08510000000900010000000000000001
00000721fe4500571000fb74f9d2105e0001000000000000000000000000
000000140639011c0639011c0639011c0639011c0639011c0639011c0639
011c0639011c0639011c0639011c0639011c0639011c0639011c0639011c
0639011c0639011c0639011c02000091020000910400004a00f0002c002c
002c006200000000004b004b004b004b004b004b004b004b004b004b004b
004b004b004b004b004b004b007f007f012901a802a702a702a703840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038403840384038403840384038403840384038403840384038403840384
038400010000102902b5003c00ca000700020010004000860000063404eb
000500020000003a02be0000000300000000021a00000000000300000001
001e021a0000000300000002000e02c20000000300000003005802900000
000300000004001e021a0000000300000005001802e80000000300000006
0022030000000003000000070076021a0000000300000008003003300000
00030000000900860540000000030000000d0d1805c60001000000000000
010d12de0001000000000001000f13eb00010000000000020007143f0001
000000000003002c14260001000000000004000f13eb0001000000000005
000c145200010000000000060011145e0001000000000007003b13eb0001
000000000008001812e500010000000000090043146f000100000000000d
068c14b20003000104030002000c1b3e000300010405000200101b4e0003
000104060002000c1b5e000300010407000200101b6a0003000104080002
00101b7a0003000104090000021e03220003000104090001001e021a0003
000104090002000e02c20003000104090003005802900003000104090004
001e021a0003000104090005001802e80003000104090006002203000003
0001040900070076021a0003000104090008003003300003000104090009
00860540000300010409000d0d2a1b8a00030001040a0002000c1b3e0003
0001040b0002001028b400030001040c0002000c1b3e00030001040e0002
000c28c40003000104100002000e28d40003000104130002001228e20003
000104140002000c1b3e000300010415000200101b3e0003000104160002
000c1b3e0003000104190002000e28f400030001041b0002001028c40003
0001041d0002000c1b3e00030001041f0002000c1b3e0003000104240002
000e290200030001042a0002000e291000030001042d0002000e291e0003
0001080a0002000c1b3e0003000108160002000c1b3e000300010c0a0002
000c1b3e000300010c0c0002000c1b3e00a9002000320030003100350020
0054006800650020004d006f006e006f007400790070006500200043006f
00720070006f0072006100740069006f006e002e00200041006c006c0020
005200690067006800740073002000520065007300650072007600650064
002e0020000d000d0048006500620072006500770020004f00700065006e
00540079007000650020004c00610079006f007500740020006c006f0067
0069006300200063006f0070007900720069006700680074002000a90020
00320030003000330020002600200032003000300037002c002000520061
006c00700068002000480061006e0063006f0063006b002000260020004a
006f0068006e00200048007500640073006f006e002e0020005400680069
00730020006c00610079006f007500740020006c006f0067006900630020
0066006f00720020004200690062006c006900630061006c002000480065
00620072006500770020006900730020006f00700065006e00200073006f
007500720063006500200073006f00660074007700610072006500200075
006e00640065007200200074006800650020004d004900540020004c0069
00630065006e00730065003b002000730065006500200065006d00620065
00640064006500640020006c006900630065006e00730065002000640065
0073006300720069007000740069006f006e00200066006f007200200064
0065007400610069006c0073002e00540069006d006500730020004e0065
007700200052006f006d0061006e00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e004d006f006e006f0074007900700065003a
00540069006d006500730020004e0065007700200052006f006d0061006e
00200052006500670075006c0061007200200028004d006900630072006f
0073006f00660074002900560065007200730069006f006e00200036002e
0039003000540069006d00650073004e006500770052006f006d0061006e
00500053004d005400a90020003200300031003500200054006800650020
004d006f006e006f007400790070006500200043006f00720070006f0072
006100740069006f006e002e00200041006c006c00200052006900670068
00740073002000520065007300650072007600650064002e0020000d000a
000d000a0048006500620072006500770020004f00700065006e00540079
007000650020004c00610079006f007500740020006c006f006700690063
00200063006f0070007900720069006700680074002000a9002000320030
003000330020002600200032003000300037002c002000520061006c0070
0068002000480061006e0063006f0063006b002000260020004a006f0068
006e00200048007500640073006f006e002e002000540068006900730020
006c00610079006f007500740020006c006f00670069006300200066006f
00720020004200690062006c006900630061006c00200048006500620072
006500770020006900730020006f00700065006e00200073006f00750072
0063006500200073006f00660074007700610072006500200075006e0064
0065007200200074006800650020004d004900540020004c006900630065
006e00730065003b002000730065006500200065006d0062006500640064
006500640020006c006900630065006e0073006500200064006500730063
00720069007000740069006f006e00200066006f00720020006400650074
00610069006c0073002e004d006f006e006f007400790070006500200054
007900700065002000440072006100770069006e00670020004f00660066
0069006300650020002d0020005300740061006e006c006500790020004d
006f007200690073006f006e002c00200056006900630074006f00720020
004c0061007200640065006e0074002000310039003300320059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
002000200059006f00750020006d006100790020006f006e006c00790020
00280069002900200065006d006200650064002000740068006900730020
0066006f006e007400200069006e00200063006f006e00740065006e0074
0020006100730020007000650072006d0069007400740065006400200062
0079002000740068006500200065006d00620065006400640069006e0067
0020007200650073007400720069006300740069006f006e007300200069
006e0063006c007500640065006400200069006e00200074006800690073
00200066006f006e0074003b00200061006e006400200028006900690029
002000740065006d0070006f0072006100720069006c007900200064006f
0077006e006c006f006100640020007400680069007300200066006f006e
007400200074006f002000610020007000720069006e0074006500720020
006f00720020006f00740068006500720020006f00750074007000750074
002000640065007600690063006500200074006f002000680065006c0070
0020007000720069006e007400200063006f006e00740065006e0074002e
000d000d00540068006500200066006f006c006c006f00770069006e0067
0020006c006900630065006e00730065002c002000620061007300650064
0020006f006e00200074006800650020004d004900540020006c00690063
0065006e00730065002000280068007400740070003a002f002f0065006e
002e00770069006b006900700065006400690061002e006f00720067002f
00770069006b0069002f004d00490054005f004c006900630065006e0073
00650029002c0020006100700070006c00690065007300200074006f0020
0074006800650020004f00700065006e00540079007000650020004c0061
0079006f007500740020006c006f00670069006300200066006f00720020
004200690062006c006900630061006c0020004800650062007200650077
0020201c004c00610079006f007500740020004c006f006700690063201d
0020006100730020006a006f0069006e0074006c00790020006400650076
0065006c006f007000650064002000620079002000520061006c00700068
002000480061006e0063006f0063006b00200061006e00640020004a006f
0068006e00200048007500640073006f006e002e0020000d000d00500065
0072006d0069007300730069006f006e0020006900730020006800650072
0065006200790020006700720061006e007400650064002c002000660072
006500650020006f00660020006300680061007200670065002c00200074
006f00200061006e007900200070006500720073006f006e0020006f0062
007400610069006e0069006e00670020006100200063006f007000790020
006f006600200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
00720065007700200061006e00640020006100730073006f006300690061
00740065006400200064006f00630075006d0065006e0074006100740069
006f006e002000660069006c00650073002000280074006800650020201c
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065201d0029002c00200074006f002000640065
0061006c00200069006e00200074006800650020004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
006500200077006900740068006f00750074002000720065007300740072
0069006300740069006f006e002c00200069006e0063006c007500640069
006e006700200077006900740068006f007500740020006c0069006d0069
0074006100740069006f006e002000740068006500200072006900670068
0074007300200074006f0020007500730065002c00200063006f00700079
002c0020006d006f0064006900660079002c0020006d0065007200670065
002c0020007000750062006c006900730068002c00200064006900730074
007200690062007500740065002c0020007300750062006c006900630065
006e00730065002c00200061006e0064002f006f0072002000730065006c
006c00200063006f00700069006500730020006f00660020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f006600740077006100720065002c00200061006e006400200074006f
0020007000650072006d0069007400200070006500720073006f006e0073
00200074006f002000770068006f006d00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
00770061007200650020006900730020006600750072006e006900730068
0065006400200074006f00200064006f00200073006f002c002000730075
0062006a00650063007400200074006f002000740068006500200066006f
006c006c006f00770069006e006700200063006f006e0064006900740069
006f006e0073003a000d000d005400680065002000610062006f00760065
00200063006f00700079007200690067006800740020006e006f00740069
0063006500200061006e0064002000740068006900730020007000650072
006d0069007300730069006f006e0020006e006f00740069006300650020
007300680061006c006c00200062006500200069006e0063006c00750064
0065006400200069006e00200061006c006c00200063006f007000690065
00730020006f00720020007300750062007300740061006e007400690061
006c00200070006f007200740069006f006e00730020006f006600200074
006800650020004c00610079006f007500740020004c006f006700690063
00200053006f006600740077006100720065002e000d000d005400480045
00200053004f004600540057004100520045002000490053002000500052
004f0056004900440045004400200027004100530020004900530027002c
00200057004900540048004f00550054002000570041005200520041004e
005400590020004f004600200041004e00590020004b0049004e0044002c
002000450058005000520045005300530020004f005200200049004d0050
004c004900450044002c00200049004e0043004c005500440049004e0047
00200042005500540020004e004f00540020004c0049004d004900540045
004400200054004f0020005400480045002000570041005200520041004e
00540049004500530020004f00460020004d00450052004300480041004e
0054004100420049004c004900540059002c0020004600490054004e0045
0053005300200046004f0052002000410020005000410052005400490043
0055004c0041005200200050005500520050004f0053004500200041004e
00440020004e004f004e0049004e004600520049004e00470045004d0045
004e0054002e00200049004e0020004e004f0020004500560045004e0054
0020005300480041004c004c002000540048004500200041005500540048
004f005200530020004f005200200043004f005000590052004900470048
005400200048004f004c00440045005200530020004200450020004c0049
00410042004c004500200046004f005200200041004e005900200043004c
00410049004d002c002000440041004d00410047004500530020004f0052
0020004f00540048004500520020004c0049004100420049004c00490054
0059002c0020005700480045005400480045005200200049004e00200041
004e00200041004300540049004f004e0020004f004600200043004f004e
00540052004100430054002c00200054004f005200540020004f00520020
004f00540048004500520057004900530045002c00200041005200490053
0049004e0047002000460052004f004d002c0020004f005500540020004f
00460020004f005200200049004e00200043004f004e004e004500430054
0049004f004e00200057004900540048002000540048004500200053004f
0046005400570041005200450020004f0052002000540048004500200055
005300450020004f00520020004f00540048004500520020004400450041
004c0049004e0047005300200049004e002000540048004500200053004f
004600540057004100520045002e000da9203230313520546865204d6f6e
6f7479706520436f72706f726174696f6e2e20416c6c2052696768747320
52657365727665642e200d0d486562726577204f70656e54797065204c61
796f7574206c6f67696320636f7079726967687420a92032303033202620
323030372c2052616c70682048616e636f636b2026204a6f686e20487564
736f6e2e2054686973206c61796f7574206c6f67696320666f7220426962
6c6963616c20486562726577206973206f70656e20736f7572636520736f
66747761726520756e64657220746865204d4954204c6963656e73653b20
73656520656d626564646564206c6963656e736520646573637269707469
6f6e20666f722064657461696c732e54696d6573204e657720526f6d616e
20697320612074726164656d61726b206f6620546865204d6f6e6f747970
6520436f72706f726174696f6e2e4d6f6e6f747970653a54696d6573204e
657720526f6d616e20526567756c617220284d6963726f736f6674295665
7273696f6e20362e393054696d65734e6577526f6d616e50534d544d6f6e
6f7479706520547970652044726177696e67204f6666696365202d205374
616e6c6579204d6f7269736f6e2c20566963746f72204c617264656e7420
31393332596f75206d617920757365207468697320666f6e742061732070
65726d6974746564206279207468652045554c4120666f72207468652070
726f6475637420696e207768696368207468697320666f6e742069732069
6e636c7564656420746f20646973706c617920616e64207072696e742063
6f6e74656e742e2020596f75206d6179206f6e6c792028692920656d6265
64207468697320666f6e7420696e20636f6e74656e74206173207065726d
69747465642062792074686520656d62656464696e672072657374726963
74696f6e7320696e636c7564656420696e207468697320666f6e743b2061
6e6420286969292074656d706f726172696c7920646f776e6c6f61642074
68697320666f6e7420746f2061207072696e746572206f72206f74686572
206f75747075742064657669636520746f2068656c70207072696e742063
6f6e74656e742e0d0d54686520666f6c6c6f77696e67206c6963656e7365
2c206261736564206f6e20746865204d4954206c6963656e736520286874
74703a2f2f656e2e77696b6970656469612e6f72672f77696b692f4d4954
5f4c6963656e7365292c206170706c69657320746f20746865204f70656e
54797065204c61796f7574206c6f67696320666f72204269626c6963616c
2048656272657720d24c61796f7574204c6f676963d3206173206a6f696e
746c7920646576656c6f7065642062792052616c70682048616e636f636b
20616e64204a6f686e20487564736f6e2e200d0d5065726d697373696f6e
20697320686572656279206772616e7465642c2066726565206f66206368
617267652c20746f20616e7920706572736f6e206f627461696e696e6720
6120636f7079206f6620746865204f70656e54797065204c61796f757420
6c6f67696320666f72204269626c6963616c2048656272657720616e6420
6173736f63696174656420646f63756d656e746174696f6e2066696c6573
202874686520d24c61796f7574204c6f67696320536f667477617265d329
2c20746f206465616c20696e20746865204c61796f7574204c6f67696320
536f66747761726520776974686f7574207265737472696374696f6e2c20
696e636c7564696e6720776974686f7574206c696d69746174696f6e2074
68652072696768747320746f207573652c20636f70792c206d6f64696679
2c206d657267652c207075626c6973682c20646973747269627574652c20
7375626c6963656e73652c20616e642f6f722073656c6c20636f70696573
206f6620746865204c61796f7574204c6f67696320536f6674776172652c
20616e6420746f207065726d697420706572736f6e7320746f2077686f6d
20746865204c61796f7574204c6f67696320536f66747761726520697320
6675726e697368656420746f20646f20736f2c207375626a65637420746f
2074686520666f6c6c6f77696e6720636f6e646974696f6e733a0d0d5468
652061626f766520636f70797269676874206e6f7469636520616e642074
686973207065726d697373696f6e206e6f74696365207368616c6c206265
20696e636c7564656420696e20616c6c20636f70696573206f7220737562
7374616e7469616c20706f7274696f6e73206f6620746865204c61796f75
74204c6f67696320536f6674776172652e0d0d54484520534f4654574152
452049532050524f564944454420274153204953272c20574954484f5554
2057415252414e5459204f4620414e59204b494e442c2045585052455353
204f5220494d504c4945442c20494e434c5544494e4720425554204e4f54
204c494d4954454420544f205448452057415252414e54494553204f4620
4d45524348414e544142494c4954592c204649544e45535320464f522041
20504152544943554c415220505552504f534520414e44204e4f4e494e46
52494e47454d454e542e20494e204e4f204556454e54205348414c4c2054
484520415554484f5253204f5220434f5059524947485420484f4c444552
53204245204c4941424c4520464f5220414e5920434c41494d2c2044414d
41474553204f52204f54484552204c494142494c4954592c205748455448
455220494e20414e20414354494f4e204f4620434f4e54524143542c2054
4f5254204f52204f54484552574953452c2041524953494e472046524f4d
2c204f5554204f46204f5220494e20434f4e4e454354494f4e2057495448
2054484520534f465457415245204f522054484520555345204f52204f54
484552204445414c494e475320494e2054484520534f4654574152452e0d
004e006f0072006d0061006c006e0079006f00620079010d0065006a006e
00e9006e006f0072006d0061006c005300740061006e0064006100720064
039a03b103bd03bf03bd03b903ba03ac0059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
006100730020007000650072006d00690074007400650064002000620079
0020007400680065002000450055004c004100200066006f007200200074
00680065002000700072006f006400750063007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
0069007300200069006e0063006c007500640065006400200074006f0020
0064006900730070006c0061007900200061006e00640020007000720069
006e007400200063006f006e00740065006e0074002e002000200059006f
00750020006d006100790020006f006e006c007900200028006900290020
0065006d0062006500640020007400680069007300200066006f006e0074
00200069006e00200063006f006e00740065006e00740020006100730020
007000650072006d00690074007400650064002000620079002000740068
006500200065006d00620065006400640069006e00670020007200650073
007400720069006300740069006f006e007300200069006e0063006c0075
00640065006400200069006e0020007400680069007300200066006f006e
0074003b00200061006e006400200028006900690029002000740065006d
0070006f0072006100720069006c007900200064006f0077006e006c006f
006100640020007400680069007300200066006f006e007400200074006f
002000610020007000720069006e0074006500720020006f00720020006f
00740068006500720020006f007500740070007500740020006400650076
00690063006500200074006f002000680065006c00700020007000720069
006e007400200063006f006e00740065006e0074002e000d000a000d000a
00540068006500200066006f006c006c006f00770069006e00670020006c
006900630065006e00730065002c0020006200610073006500640020006f
006e00200074006800650020004d004900540020006c006900630065006e
00730065002000280068007400740070003a002f002f0065006e002e0077
0069006b006900700065006400690061002e006f00720067002f00770069
006b0069002f004d00490054005f004c006900630065006e007300650029
002c0020006100700070006c00690065007300200074006f002000740068
00650020004f00700065006e00540079007000650020004c00610079006f
007500740020006c006f00670069006300200066006f0072002000420069
0062006c006900630061006c00200048006500620072006500770020201c
004c00610079006f007500740020004c006f006700690063201d00200061
00730020006a006f0069006e0074006c007900200064006500760065006c
006f007000650064002000620079002000520061006c0070006800200048
0061006e0063006f0063006b00200061006e00640020004a006f0068006e
00200048007500640073006f006e002e0020000d000a000d000a00500065
0072006d0069007300730069006f006e0020006900730020006800650072
0065006200790020006700720061006e007400650064002c002000660072
006500650020006f00660020006300680061007200670065002c00200074
006f00200061006e007900200070006500720073006f006e0020006f0062
007400610069006e0069006e00670020006100200063006f007000790020
006f006600200074006800650020004f00700065006e0054007900700065
0020004c00610079006f007500740020006c006f00670069006300200066
006f00720020004200690062006c006900630061006c0020004800650062
00720065007700200061006e00640020006100730073006f006300690061
00740065006400200064006f00630075006d0065006e0074006100740069
006f006e002000660069006c00650073002000280074006800650020201c
004c00610079006f007500740020004c006f00670069006300200053006f
006600740077006100720065201d0029002c00200074006f002000640065
0061006c00200069006e00200074006800650020004c00610079006f0075
00740020004c006f00670069006300200053006f00660074007700610072
006500200077006900740068006f00750074002000720065007300740072
0069006300740069006f006e002c00200069006e0063006c007500640069
006e006700200077006900740068006f007500740020006c0069006d0069
0074006100740069006f006e002000740068006500200072006900670068
0074007300200074006f0020007500730065002c00200063006f00700079
002c0020006d006f0064006900660079002c0020006d0065007200670065
002c0020007000750062006c006900730068002c00200064006900730074
007200690062007500740065002c0020007300750062006c006900630065
006e00730065002c00200061006e0064002f006f0072002000730065006c
006c00200063006f00700069006500730020006f00660020007400680065
0020004c00610079006f007500740020004c006f00670069006300200053
006f006600740077006100720065002c00200061006e006400200074006f
0020007000650072006d0069007400200070006500720073006f006e0073
00200074006f002000770068006f006d00200074006800650020004c0061
0079006f007500740020004c006f00670069006300200053006f00660074
00770061007200650020006900730020006600750072006e006900730068
0065006400200074006f00200064006f00200073006f002c002000730075
0062006a00650063007400200074006f002000740068006500200066006f
006c006c006f00770069006e006700200063006f006e0064006900740069
006f006e0073003a000d000a000d000a005400680065002000610062006f
0076006500200063006f00700079007200690067006800740020006e006f
007400690063006500200061006e00640020007400680069007300200070
00650072006d0069007300730069006f006e0020006e006f007400690063
00650020007300680061006c006c00200062006500200069006e0063006c
007500640065006400200069006e00200061006c006c00200063006f0070
0069006500730020006f00720020007300750062007300740061006e0074
00690061006c00200070006f007200740069006f006e00730020006f0066
00200074006800650020004c00610079006f007500740020004c006f0067
0069006300200053006f006600740077006100720065002e000d000a000d
000a00540048004500200053004f00460054005700410052004500200049
0053002000500052004f0056004900440045004400200027004100530020
004900530027002c00200057004900540048004f00550054002000570041
005200520041004e005400590020004f004600200041004e00590020004b
0049004e0044002c002000450058005000520045005300530020004f0052
00200049004d0050004c004900450044002c00200049004e0043004c0055
00440049004e004700200042005500540020004e004f00540020004c0049
004d004900540045004400200054004f0020005400480045002000570041
005200520041004e00540049004500530020004f00460020004d00450052
004300480041004e0054004100420049004c004900540059002c00200046
00490054004e00450053005300200046004f005200200041002000500041
00520054004900430055004c0041005200200050005500520050004f0053
004500200041004e00440020004e004f004e0049004e004600520049004e
00470045004d0045004e0054002e00200049004e0020004e004f00200045
00560045004e00540020005300480041004c004c00200054004800450020
0041005500540048004f005200530020004f005200200043004f00500059
0052004900470048005400200048004f004c004400450052005300200042
00450020004c004900410042004c004500200046004f005200200041004e
005900200043004c00410049004d002c002000440041004d004100470045
00530020004f00520020004f00540048004500520020004c004900410042
0049004c004900540059002c002000570048004500540048004500520020
0049004e00200041004e00200041004300540049004f004e0020004f0046
00200043004f004e00540052004100430054002c00200054004f00520054
0020004f00520020004f00540048004500520057004900530045002c0020
00410052004900530049004e0047002000460052004f004d002c0020004f
005500540020004f00460020004f005200200049004e00200043004f004e
004e0045004300540049004f004e00200057004900540048002000540048
004500200053004f0046005400570041005200450020004f005200200054
0048004500200055005300450020004f00520020004f0054004800450052
0020004400450041004c0049004e0047005300200049004e002000540048
004500200053004f004600540057004100520045002e000d000a004e006f
0072006d00610061006c0069004e006f0072006d00e1006c006e0065004e
006f0072006d0061006c0065005300740061006e00640061006100720064
041e0431044b0447043d044b0439004e0061007600610064006e006f0074
006801b001a10300006e00670041007200720075006e007400610000410a
005403ef02ad001d001f03ee03ed003c001f03edb2061d1fb803ecb3032a
1f3f411503e4006003e9009f03e500df03e50004001003e4001003e5003f
03e5007003e400ff03e40005ffc003e1b345453240b803e1b32b2e3240b8
03e1b2282932b9ffc003e1b21a1c32bd03e102ac0027001fffc003dfb216
1b32b9ffc003deb2424232b9ffc003deb2363832b9ffc003deb32a2d32df
410a03de00ef03de000203de03df0028001fffc003dfb3282e32f0410d03
df0001037e000f0101001f00a003dd00b003dd0002004003dab32426329f
bf03cc000103ca03c90064001fffc003c9b20d1132410a03c703b7001200
1f03b603b50064001fffc003b5b30e1132004173038d000100c0038d00d0
038d00e0038d00f0038d0004006f03a7007f03a7008f03a700af03a70004
000f03a7001f03a7002f03a7004f03a7000403ab03ab00ef03a50001000f
03a5002f03a5006f03a5008f03a50004005403aa0001006b03aa000103a8
036a0022001f038c03940015001f038b03930015001f03a40393001a001f
03a20394001e001f03a10393001e001f039f0394001e001f039b0394001a
001f039a0393001e001f039903940016001f039803940016001f03970393
001b001f03960394001b001f03950393001b001f03760375001a001f0374
0375001a001f03a00373b21e1f10411e0393002003930030039300030020
0394003003940040039400030000039400010383036c001e001f03b1036c
0032001f036d036c0032001fffc0037db2212332b9ffc0037db3171932a0
410a037d00b0037d00c0037d00d0037d0004ffc0037cb2212332b9ffc003
7cb3171932a0412d037c00b0037c00c0037c00d0037c0004003003730040
03730002000003730010037300200373000300e0037300f00373000200b0
037300c0037300d003730003008403730090037300a0037300030377036a
0029001f0389036ab2281f40b80367b33940323fbb0366000100400366b3
191d328fbb0366000100400366b3090a3240b80366b3090e3240b80366b3
090f323fbb0365000100400365b3090c3240b80365b31a1d3240b80365b3
090e326b410e0363007b0363000200140363002403630034036300440363
00040363b2242f1fba034e006d0800400e1f7f027f037f047f0504304401
12bf033200500800001f0012032d003c0800b61f5f3c013785a041850362
000100000362001003620070036200900362000400f0035f00010020035e
0020035f0030035f0040035e00040000035e0000035f0010035f00d0035e
00e0035f00050010030f0020030f0030030f00d0030f00e0030f00050000
030f0010030f0050030f0060030f0070030f00d0030f00060000030f0010
030f0020030f0030030f00e0030f00f0030f0006030f00270000030e0030
030e000200e0030e00f0030e0002030e004a00e0030d00f0030d0002030d
002700d002fc0001001002fc002002fc005002fc000300d002fc00e002fc
0002000002fc001002fc002002fc003002fc005002fc006002fc000600e0
02fc00f002fc0002002002fc003002fc004002fc000302fc402c27c02901
b02901a02901902901403c3f413240223f4132121212858f4caf4cbf4ccf
4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8ffc0b5
b2191a32370f413b02af0001005f02af009f02af00df02af0003001f02af
002f02af003f02af006f02af000402af02af001f02ad002f02ad003f02ad
004f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02ad005f
02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad003f02ad
0003004002acb23a334f414d02ac005f02ac009f02ac0003002f02ac003f
02ac0002000f02ac003f02ac00af02ac000300b002ac00e002ac0002004f
02ac005f02ac00a002ac0003001f02ac002f02ac003f02ac0003000f02ac
0001000f035a0001000f035a001f035a003f035a005f035a0070035a0005
00cf035700df03570002000f0357001f03570070035700af03570004035a
035a0357035702ad02ad02ac02ac032c400d31151f001616000000121108
104110020c004a000d01a8004a000d0198004a000d0189004a000d013f00
4a000d0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d0194
0041000d0121400b410db4410d4f410d29410d411002170021000d021500
21000d02060021000d01eb0021000d014e0021000d012c4014210df9210d
f3210df1210d9d210d71210d3d210d4110021c001f000d0214001f000d02
0b001f000d0196001f000d014a001f000d0126400b1f0dc61f0d571f0d37
1f0d410d019e0141000d00420141000d001e0141000d001b0141000d01f2
b40f440f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb2
3c411fb801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f01
01001f01f6b224e41f411501f401490401001f01f301490401001f01f101
4900ab001f01f001490067001f01a6003c0125001f01a4b23c811f411501
a3010f019a001f01a200220801001f01a100500401001f019f0149019a00
1f019d01490067001f019cb22c621fb8019bb22c791fbc019a002c010100
1f0197b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb801
6ab23c2a1f4111016700240201001f0163002502ab001f014c010f019a00
1f01480149006c001f0147b22c891fb80145b22c9e1fb80144b22c791fb8
0143b223311fb80127b23c811fbc012300500101001f011fb223e41f4115
011d0023019a001f011c00230801001f011b00250801001f010e010f0401
001f010d00220401001f0108b223811fb80106b425e41ff73cbb0125001f
00f5010fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401b21f
cf2cb80125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201
b51fb124e41fb0b901490201b61faf2c671fad23b80801b21fa523b80201
400b1f9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f01
56400b1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a2372
1f393cab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24e41f
2623b80156b41f35555537ba023500070175402c0774076207560751073b
0733072d0720071d071c071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
01b0124b004b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59
b0382bb00288b801005458b801ffb101018e851bb0124358b90001012f85
8d1bb90001017c858d5959014bb0c063004b6220b0f65323b8010a515ab0
052342180016763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b2b2b181d42b0964b5358b235aaaa1d4259b0324b5358b235
ffff1d42594bb04753205c58b90271026f4544b90270026f45445958b901
7a0271455258b90271017a4459594bb04753205c58b9002202704544b900
3c027045445958b901b30022455258b9002201b34459594bb04c53205c58
b9014900224544b1222245445958b901c20149455258b9014901c2445959
4bb06753205c58b9002402714544b90050027145445958b9021e00244552
58b90024021e4459594bb8020153205c58b9010f00224544b12222454459
58b90c00010f455258b9010f0c004459594bb01c53205c58b125254544b1
2c2545445958b13725455258b125374459594bb0ab53205c58b125254544
b1232545445958b901590025455258b9002501594459594bb8010153205c
58b125254544b1282545445958b902080025455258b9002502084459592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b01b361dc6463456523456023456560234560b08b766818b080622020b1
64dc4565234520b003266062636820b003266165b0dc236544b064234420
b161634565234520b003266062636820b003266165b063236544b0612344
b10063455458b163406544b26140614523614459b3a67f434b4565234560
23456560234560b089766818b080622020b1437f4565234520b003266062
636820b003266165b07f236544b043234420b1a64b4565234520b0032660
62636820b003266165b04b236544b0a62344b1004b455458b14b406544b2
a640a645236144594b5242014b5058b108004259435c58b108004259b302
0b0a124358601b2159421610703eb0124358b93b21187e1bba040001a800
0b2b59b00c2342b00d2342b0124358b92d412d411bba04000400000b2b59
b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59b01023
42b0112342002b0018456944456944456944456944737373747373737374
75752b7373747475184569447373742b4bb021534bb046515a58b03cb03c
45b040604459012b2b2b2b75752b5840365f235f255f285fa5046f236f25
6f286fa5044f234f254f284fa5043f233f253f283fa5042f232f252f282f
a5041f231f251f281fa5047575757575755943584010bf3ccf3c026f3c7f
3c8f3c9f3caf3c0575755943584012bf22cf22025f226f227f228f229f22
af2206757559435c58b6403c9f22ef220375592b2b017474747445447373
7474757545447345447374454473747573737373732b5840246009700980
090310092009300940095009056f037f038f03031f032f033f034f035f03
05b8ffc0b2073a33b8ffc04046063a33900ba00bb00bc00bd00b05b006c0
06d006e006f0060520063006400650066006700680069006a00609900690
0702600b700b800b03100b200b300b400b500b051f070100757575737575
752b2b757575751b40100706441f0b0a441f0302441f0908441f2b2b2b2b
592b752b435841220063032d00010003032d0013032d0023032d0033032d
0053032d000500c3032d00d3032d00e3032d00f3032d00040083032d0093
032d00a3032d00b3032d0004032d032d4518694474747575592b4358b900
180332b330353238b80332b361663238b80332b3535a3238b80332b3454e
3238b80332b33c413218b80332b23f330a410f0332000100ba033200ca03
3200da033200ea033200fa03320005033203324518694474752b2b2b2b2b
2b597300732b012b7575002b2b2b74002b2b2b732b74012b002b2b017373
737474732b2b00732b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b
2b2b2b2b2b2b2b00017375007373004569440073730173742b2b2b2b2b73
2b00732b752b2b732b2b2b2b2b2b2b2b2b73742b002b2b2b2b0000>
[1801 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 254 19 <0002004affe803b705680010002400dbb0852b58b2610820b80106b20505
15b80106b20d0d1ab8010f4012091a002640260240266026a026e0260426
11b8010f400e5f006f007f008f00a00005001925ba011e010100182b4e10
f45d4ded4e105d71f64ded003fed3fed31304379404c0124232422240206
02010301020607251c1b1d1b1e1b030613260f250b261819171902062104
1162001f061a6201140e116200160c1a620124012062011b082062011210
156200190a1562002b2b2b2b012b2b2b2b2a2b2b2b2a2b2a2a811bb10520
b807eab46c05050d15b807e9b26c0d0d00183f2b3f2b3031591334123736
333217161114020623222726371017163332363736113427262726232207
06024a8c745a609c7c9b88d362c2816dc445397136741e2e302439293a44
354834029ee8014f52419fc5feafecfeb695e5c1f7fee8b1956172ac0139
e89b7330213d53fe9c00>MAAAAA+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007006cb0852b58b10201bb02be00060007
02bfb2000504b802beb403000a0704b802beb5010019080605bf02be0002
000301290009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c
10fc3cfd3c31301bb10004b807d7b36c000107b807d7b16c0100182f2b2f
2b3031592111211125211121011c0400fc2003c0fc400500fb002004c000
>MAAAAA+TimesNewRomanPSMT AddT42Char 
MAAAAA+TimesNewRomanPSMT /CharStrings get begin
/g19 19 def
end
MAAAAA+TimesNewRomanPSMT /Encoding get
dup 48 /g19 put
pop
end
%ADOEndSubsetFont
/NLZWPP+TimesNewRomanPSMT /MAAAAA+TimesNewRomanPSMT findfont ct_VMDictPut
/NLZWPP+TimesNewRomanPSMT*1 
[48{/.notdef}rp /g19 207{/.notdef}rp]
NLZWPP+TimesNewRomanPSMT nf
NLZWPP+TimesNewRomanPSMT*1 [13.9904 0 0 -14.0007 0 0 ]msf
64.5605 170.487 mo
(0)sh
grestore
gsave
94.5 173.484 mo
104.486 173.484 li
104.486 158.5 li
94.5 158.5 li
94.5 173.484 li
eclp
%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPP+TimesNewRomanPSMT gcheck setglobal} if
1 1358 24 <00010062ffe80379054c0021014db0852b584043a4040112591e691e7f05
7f067f1d8c048d1d07350235215503552057216b1c7605791c87028a1a8a
1ca303a809a023e0230f0023010f1011121315161708140d020303b8011c
401120211420030420211a1b1c030718040503b8019fb320202113ba01f9
00180313400c0d0d01e20002e22121000400ba013e001b0147b58007a007
0207b801f5400a40230140236023022316b801f9b61002a021012103b801
9f4009204010a01002101922ba019501e900182b4e10e45d4d10ed105d3c
10ed105d71f65dede4003f3c10ed10ed3feded12392fed01113911121739
87082e2b057d10c40011121739b10602435458400d720172027220820182
02822006005d59313001715d005d435c58400b6b046f12641e7005701d05
5d59015d1bb10320b80821b56c0303210d18b80800b46c0d0d2102b80821
b26c210400183f2b3f2b12392f2b30315901072107041716151406060706
23222635343633321617163332363534262726270103794efe685901099b
8557845173797a6f2e231a272f4b4d75b19e8b6dbc0104054caab6279e88
b86bb680273753321c2b102134b17f7bd53a2d07020f>NLZWPP+TimesNewRomanPSMT AddT42Char 
NLZWPP+TimesNewRomanPSMT /CharStrings get begin
/g24 24 def
end
NLZWPP+TimesNewRomanPSMT /Encoding get
dup 53 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPP+TimesNewRomanPSMT*1 
[48{/.notdef}rp /g19 4{/.notdef}rp /g24 202{/.notdef}rp]
NLZWPP+TimesNewRomanPSMT nf
NLZWPP+TimesNewRomanPSMT*1 [13.9904 0 0 -14.0007 0 0 ]msf
95.8418 170.487 mo
(5)sh
grestore
gsave
126 173.482 mo
141.964 173.482 li
141.964 158.5 li
126 158.5 li
126 173.482 li
eclp
%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPP+TimesNewRomanPSMT gcheck setglobal} if
1 594 20 <000100f0000003060568001600b2b0852b58401440186018a018e0180400
1840180276008600020e411301690141000901a000220003016901410008
01a00023000001f8000f016900160141000001f2400e010f0f0209020105
09080c020300ba01f70003014940120e0e0f401135300f7f0f900fa00f04
0f1917ba022401e400182b4e10f45d2b3c4d10ede4103c003f3c3f3c1112
3901113900f5edfc01f52b2b3130005d01715d1bb4010507090ab803e2b2
6c090c00183f2b323f30315913253311141616171521353e023511342726
26232207f0014a21133c5cfe026038160a07251a254204c7a1fb8772381e
022525021d317a02dc942a201e1f>NLZWPP+TimesNewRomanPSMT AddT42Char 
NLZWPP+TimesNewRomanPSMT /CharStrings get begin
/g20 20 def
end
NLZWPP+TimesNewRomanPSMT /Encoding get
dup 49 /g20 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPP+TimesNewRomanPSMT*1 
[48{/.notdef}rp /g19 /g20 3{/.notdef}rp /g24 202{/.notdef}rp]
NLZWPP+TimesNewRomanPSMT nf
NLZWPP+TimesNewRomanPSMT*1 [14.0006 0 0 -13.9998 0 0 ]msf
126.25 170.486 mo
(10)
[6.98448 0 ]xsh
grestore
gsave
157.5 173.482 mo
173.464 173.482 li
173.464 158.5 li
157.5 158.5 li
157.5 173.482 li
eclp
NLZWPP+TimesNewRomanPSMT*1 [14.0006 0 0 -13.9998 0 0 ]msf
157.75 170.486 mo
(15)
[6.98448 0 ]xsh
grestore
gsave
189 173.493 mo
206.973 173.493 li
206.973 158.499 li
189 158.499 li
189 173.493 li
eclp
%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPP+TimesNewRomanPSMT gcheck setglobal} if
1 848 21 <0001002c000003ab0568001e0195b0852b58408207180b3917181c3d3418
401c3d3419401c3d340f1e161629073c074907a9070640205b045a085b17
5a186b08741174129c0b9d0e9911ac0bac0ec905c917c818d917d918e020
f904f9171515011d0419051b15191619171d180709170b180b1d34194719
89178f200718190202171a190c19060d031902050618171615140713040d
b8016840090940140c3f80090109b80333400c10051a8f19019f19af1902
19ba03330003018db301020c1eb8018d400d0006e24f135f136f137f1304
13b801074013400001001a002040208020036020a020022019bb01f90003
000d014040145f026f027f028f02bf02cf02df02ef020802191fba018e01
0100182b4e10f45d4de43ced4e105d71f65d4df45ded10ed003f3cedfd5d
713c3ffd71b10602435458b78f0901bf09cf0902005d71592be411121739
11123901111239390210b10602435458b47d198d1902005d590e3c871005
7dc40ec431300171725d005d012b2b2b002b1bb70d0d101e1e021009b808
1ab46c10050219b8081ab26c020c00183f2b3f2b12392f11392f30315901
032135000035342623220607233636333216151407060702072132363637
03ab5ffce0016101209e6e649f262519cf9ba5dd304aa6f93e01626c5746
1a0105fefb2501420198a981a67571b9c6d4906767a2b5fef03810312d00
>NLZWPP+TimesNewRomanPSMT AddT42Char 
NLZWPP+TimesNewRomanPSMT /CharStrings get begin
/g21 21 def
end
NLZWPP+TimesNewRomanPSMT /Encoding get
dup 50 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPP+TimesNewRomanPSMT*1 
[48{/.notdef}rp /g19 /g20 /g21 2{/.notdef}rp /g24 202{/.notdef}rp]
NLZWPP+TimesNewRomanPSMT nf
NLZWPP+TimesNewRomanPSMT*1 [14.0143 0 0 -14.0109 0 0 ]msf
190.779 170.494 mo
(20)
[6.98976 0 ]xsh
grestore
gsave
35.5238 94.502 mo
56.4691 94.502 li
56.4691 79.505 li
35.5238 79.505 li
35.5238 94.502 li
eclp
%ADOBeginSubsetFont: MAAAAA+TimesNewRomanPSMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPP+TimesNewRomanPSMT gcheck setglobal} if
1 150 17 <00010091ffe4016f00c2000b003bb0852b58401c0040060b034009403a35
09403f355f09019f09af090209850c6a7a182b10f671722b2bed003fed31
301bb200060b00183f3330315925321615140623222635343601002f4041
2e2e4141c2412e2e41412e2f4000>NLZWPP+TimesNewRomanPSMT AddT42Char 
NLZWPP+TimesNewRomanPSMT /CharStrings get begin
/g17 17 def
end
NLZWPP+TimesNewRomanPSMT /Encoding get
dup 46 /g17 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPP+TimesNewRomanPSMT*1 
[46{/.notdef}rp /g17 /.notdef /g19 /g20 /g21 2{/.notdef}rp /g24 
202{/.notdef}rp]
NLZWPP+TimesNewRomanPSMT nf
NLZWPP+TimesNewRomanPSMT*1 [14.021 0 0 -14.0132 0 0 ]msf
37.0824 91.502 mo
(0.5)
[7.01052 3.4632 0 ]xsh
grestore
gsave
43 156.737 mo
52.9859 156.737 li
52.9859 141.753 li
43 141.753 li
43 156.737 li
eclp
NLZWPP+TimesNewRomanPSMT*1 [13.9904 0 0 -14.0007 0 0 ]msf
44.5605 153.74 mo
(0)sh
grestore
gsave
42.0148 32.71 mo
49.998 32.71 li
49.998 18.746 li
42.0148 18.746 li
42.0148 32.71 li
eclp
NLZWPP+TimesNewRomanPSMT*1 [13.964 0 0 -13.98 0 0 ]msf
42.2641 30.714 mo
(1)sh
grestore
gsave
0 .5 mo
0 212 li
241.5 212 li
241.5 .5 li
cp
clp
%ADOBeginSubsetFont: OAAAAA+MicrosoftSansSerif Initial
ct_T42Dict begin
-0.578 -0.254 1.473 1
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+MicrosoftSansSerif
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
742077d37c8600000124000002906670676d03741f64000003b400000789
676c79660000000000004ce80000024268656164e841bff600000b400000
0036686865610e88050200000b7800000024686d74780000000000000b9c
000000d86c6f63610000000000000c7400001d3e6d61787013e607d70000
29b4000000206e616d65243cfd16000029d400001b8f707265701207efc7
000045640000078267646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff000000000000000000000000000100000000000005ba0019000005ba
001900000000000000000000000000000000000000000425001900000000
ffe700000000ffe70000000000000000fe68ffea00000000000000000000
0000000002f5ffee05cd000002ddffee02f0000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000008000000080000000000000000000000000000000000000000000000
00000000000000000000000000d2010e012c01130000000000c8010900c8
000000000000000000000000000000890048001bff77ffb8ffe500a4005f
000aff5cffa1fff6000000000000000afff6000000000000000000000059
ffa700c9000000c3000000c2008300c3000000bd000000bd007900c3006c
00bd009100af00000000026f00ae00a6009a0000009b0094008b00cc00ae
00a600940000000000ff000001e300000000000000000000000000000000
00000000000000000000000000cd00cd006801ee0060008c000000000000
0000000000000000000000a800a800a800b900cd00a80052016a0049007d
007d0083008a00000071009b00910078000001fc0071ff8f022a006d0094
00a0029a030a00b800ae008b018b019101d10391008c00730268027d01b0
01dd021c033302a3026b02730152024c0021004c05e704f20098ff6800ac
00c500850085005c0054006000b401baff1ffe680000008300bc00940094
ff85ffae00520029061400ae00460046fe580560008f076002f20025003e
004700500058007300a80160006000950025003e004700500058007300a8
01600000002d005000600081009300ba0108ffd3ffaeff9106520060005c
00b0012b012b04ba013e018507600016000a004b047d069c076000600060
004c00cb01dc04b305c2008200660082006e404154524d4c49483b393837
363534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c01b01843
58456ab0194360b0462344231020b0464ef04d2fb000121b21231133592d
2c01b0184358b0052bb000134bb0145058b100403859b0062b1b21231133
592d2c01b01843584eb0032510f221b000124d1b2045b00425b00425234a
6164b0285258212310d21bb0032510f221b0001259592d2cb01a43582121
1bb00225b0022549b00325b003254a612064b01050582121211bb00325b0
032549b0005058b0005058b8ffe238211bb0103821591bb0005258b01e38
211bb8fff03821595959592d2c01b0184358b0052bb000134bb0145058b9
0000ffc03859b0062b1b21231133592d2c4e018a10b146194344b00014b1
0046e2b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c0118
b0002fb00114f2b00113b001154db000122d2c01b0184358b0052bb00013
b90000ffe038b0062b1b21231133592d2c01b018435845646a23456469b0
1943646060b0462344231020b046f02fb000121b2121208a208a52581133
1b212159592d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0
462370b101463e01b0462370b10246453ab10200080d2d2cb0122bb00225
45b00225456ab0408b60b0022523442121212d2cb0132bb0022545b00225
456ab8ffc08c60b0022523442121212d2cb000b0122b2121212d2cb000b0
132b2121212d2c01b00643b00743650a2d2c2069b04061b0008b20b12cc0
8a8cb8100062602b0c642364615c58b00361592d2cb1000325456854b01c
4b505a58b0032545b0032545606820b004252344b0042523441bb0032520
4568208a2344b00325456860b003252344592d2cb00325204568208a2344
b003254564686560b00425b0016023442d2cb00943588721c01bb0124358
8745b0112bb0472344b0477ae41b038a45186920b04723448a8a8720b0a0
5158b0112bb0472344b0477ae41b21b0477ae4595959182d2c208a452345
6860442d2c456a422d2c01182f2d2c01b0184358b00425b0042549642345
64696120b080626ab00225b00225618cb0194360b0462344218a10b046f6
211b21212121592d2c01b0184358b0022545b002254564606ab00325456a
6120b00425456a208a8b65b0042523448cb00325234421211b20456a4420
456a44592d2c012045b00055b018435a584568234569b0408b6120b08062
6a208a236120b003258b65b0042523448cb00325234421211b2121b0192b
592d2c018a8a45642345646164422d2cb00425b00425b0192bb0184358b0
0425b00425b00325b01b2b01b0022543b04054b0022543b000545a58b003
252045b040614459b0022543b00054b0022543b040545a58b004252045b0
4060445959212121212d2c014b525843b00225452361441b2121592d2c01
4b525843b00225452360441b2121592d2c4b525845441b2121592d2c0120
b003252349b04060b0206320b000525823b002253823b002256538008a63
381b212121212159012d2c4b505845441b2121592d2c01b005251023208a
f500b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b0
062510f500edec2d2c462346608a8a462320468a608a61b8ff8062232010
238ab14b4b8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068
013a2d2c2045b00325465258b0022546206861b00325b003253f2321381b
2111592d2c2045b00325465058b0022546206861b00325b003253f232138
1b2111592d2c00b00743b006430b2d2c8a10ec2d2cb00c4358211b2046b0
005258b8fff0381bb0103859592d2c20b0005558b8100063b003254564b0
0325456461b0005358b0021bb04061b00359254569535845441b2121591b
21b0022545b00225456164b028515845441b212159592d2c21210c642364
8bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b002
602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c
6423648bb84000626023212d2c4b5358b00425b004254964234564696120
b080626ab00225b00225618cb0462344218a10b046f6211b218a11231220
392f592d2c2121212121212d2cb0134358031b02592d2cb0134358021b03
592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320d0
23b0102bb0054358c01b3c59201011b00012012d2c4b53234b515a58381b
2121592d2c01b0022510d023c901b00113b0001410b0013cb001162d2c01
b00013b001b0032549b0031738b001132d2c4b53234b515a5820458a6044
1b2121592d2cb0024354584b53234b515a58381b2121591b21212121592d
2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb002435458
b0482b1b21212121592d2cb002435458b0492b1b212121592d2c4b52587d
1b7a592d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b202020243604259b1
2401885458b2022002436042004b014b5258b2020802436042591bb94000
0080885458b202040243604259b94000008063b80100885458b202080243
604259b94000010063b80200885458b2021002436042595959592d000000
000100000006e8f6b1b0afba5f0f3cf5001b080000000000aff53caf0000
0000d1f34f5afb5cfdf20bc9080700000009000100000000000000010000
0760fe5200000bdefb5cfa7a0bc900010000000000000000000000000000
003602580032025800320258003202580032025800320258003202580032
025800320258003202580032025800320258003202580032025800320258
00320258003202aa004202aa004202aa004202aa004202aa004202aa0042
02aa004202aa004202aa004202aa004202aa004202aa004202aa004202aa
004202aa004202aa004202aa004202aa004202aa004202aa004202aa0042
02aa004202aa004202aa004202aa004204e300a404e300a404e300a404e3
00a404e300a404e300a404e300a404e300a404e300a404e300a404e300a4
04e300a405c700a400000014001400140014001400140014001400140014
001400140014001400140014003a003a003a003a003a003a003a003a003a
003a003a003a003a003a003a003a003a003a003a003a003a003a003a003a
003a00780078007800780078007800780078007800780078007801210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121012101210121
012101210121012101210121012101210121012101210121000000010000
0e9e001d00020000000000020010002f0055000004e00789000000000000
002d02220001000000000000010900000001000000000001001401090001
000000000002000701660001000000000003001c01510001000000000004
001401090001000000000005000c016d0001000000000006001201790001
00000000000700480109000100000000000d068c018b0003000104030002
000c08170003000104050002001008270003000104060002000c08370003
000104070002001008430003000104080002001008530003000104090000
021e0863000300010409000100280a810003000104090002000e0b3b0003
00010409000300380b11000300010409000400280a810003000104090005
00180b49000300010409000600240b61000300010409000700900a810003
000104090008002a0871000300010409000b00540b85000300010409000d
0d2a0bd9000300010409000e00540b8500030001040a0002000c08170003
0001040b00020010190300030001040c0002000c081700030001040e0002
000c19130003000104100002000e19230003000104130002001219310003
000104140002000c08170003000104150002001008170003000104160002
000c08170003000104190002000e194300030001041b0002001019130003
0001041d0002000c081700030001041f0002000c08170003000104240002
000e195100030001042d0002000e195f00030001080a0002000c08170003
000108160002000c0817000300010c0a0002000c0817000300010c0c0002
000c0817a92032303135204d6963726f736f667420436f72706f72617469
6f6e2e20416c6c207269676874732072657365727665642e0d0d48656272
6577204f70656e54797065204c61796f7574206c6f67696320636f707972
6967687420a92032303033202620323030372c2052616c70682048616e63
6f636b2026204a6f686e20487564736f6e2e2054686973206c61796f7574
206c6f67696320666f72204269626c6963616c2048656272657720697320
6f70656e20736f7572636520736f66747761726520756e64657220746865
204d4954204c6963656e73653b2073656520656d626564646564206c6963
656e7365206465736372697074696f6e20666f722064657461696c732e4d
6963726f736f66742053616e732053657269662069732061207472616465
6d61726b206f6620746865204d6963726f736f66742067726f7570206f66
20636f6d70616e6965732e4d6963726f736f66742053616e732053657269
6620526567756c617256657273696f6e20362e39314d6963726f736f6674
53616e735365726966596f75206d617920757365207468697320666f6e74
206173207065726d6974746564206279207468652045554c4120666f7220
7468652070726f6475637420696e207768696368207468697320666f6e74
20697320696e636c7564656420746f20646973706c617920616e64207072
696e7420636f6e74656e742e2020596f75206d6179206f6e6c7920286929
20656d626564207468697320666f6e7420696e20636f6e74656e74206173
207065726d69747465642062792074686520656d62656464696e67207265
737472696374696f6e7320696e636c7564656420696e207468697320666f
6e743b20616e6420286969292074656d706f726172696c7920646f776e6c
6f6164207468697320666f6e7420746f2061207072696e746572206f7220
6f74686572206f75747075742064657669636520746f2068656c70207072
696e7420636f6e74656e742e0d0d54686520666f6c6c6f77696e67206c69
63656e73652c206261736564206f6e20746865204d4954206c6963656e73
652028687474703a2f2f656e2e77696b6970656469612e6f72672f77696b
692f4d49545f4c6963656e7365292c206170706c69657320746f20746865
204f70656e54797065204c61796f7574206c6f67696320666f7220426962
6c6963616c2048656272657720d24c61796f7574204c6f676963d3206173
206a6f696e746c7920646576656c6f7065642062792052616c7068204861
6e636f636b20616e64204a6f686e20487564736f6e2e200d0d5065726d69
7373696f6e20697320686572656279206772616e7465642c206672656520
6f66206368617267652c20746f20616e7920706572736f6e206f62746169
6e696e67206120636f7079206f6620746865204f70656e54797065204c61
796f7574206c6f67696320666f72204269626c6963616c20486562726577
20616e64206173736f63696174656420646f63756d656e746174696f6e20
66696c6573202874686520d24c61796f7574204c6f67696320536f667477
617265d3292c20746f206465616c20696e20746865204c61796f7574204c
6f67696320536f66747761726520776974686f7574207265737472696374
696f6e2c20696e636c7564696e6720776974686f7574206c696d69746174
696f6e207468652072696768747320746f207573652c20636f70792c206d
6f646966792c206d657267652c207075626c6973682c2064697374726962
7574652c207375626c6963656e73652c20616e642f6f722073656c6c2063
6f70696573206f6620746865204c61796f7574204c6f67696320536f6674
776172652c20616e6420746f207065726d697420706572736f6e7320746f
2077686f6d20746865204c61796f7574204c6f67696320536f6674776172
65206973206675726e697368656420746f20646f20736f2c207375626a65
637420746f2074686520666f6c6c6f77696e6720636f6e646974696f6e73
3a0d0d5468652061626f766520636f70797269676874206e6f7469636520
616e642074686973207065726d697373696f6e206e6f7469636520736861
6c6c20626520696e636c7564656420696e20616c6c20636f70696573206f
72207375627374616e7469616c20706f7274696f6e73206f662074686520
4c61796f7574204c6f67696320536f6674776172652e0d0d54484520534f
4654574152452049532050524f564944454420274153204953272c205749
54484f55542057415252414e5459204f4620414e59204b494e442c204558
5052455353204f5220494d504c4945442c20494e434c5544494e47204255
54204e4f54204c494d4954454420544f205448452057415252414e544945
53204f46204d45524348414e544142494c4954592c204649544e45535320
464f52204120504152544943554c415220505552504f534520414e44204e
4f4e494e4652494e47454d454e542e20494e204e4f204556454e54205348
414c4c2054484520415554484f5253204f5220434f505952494748542048
4f4c44455253204245204c4941424c4520464f5220414e5920434c41494d
2c2044414d41474553204f52204f54484552204c494142494c4954592c20
5748455448455220494e20414e20414354494f4e204f4620434f4e545241
43542c20544f5254204f52204f54484552574953452c2041524953494e47
2046524f4d2c204f5554204f46204f5220494e20434f4e4e454354494f4e
20574954482054484520534f465457415245204f52205448452055534520
4f52204f54484552204445414c494e475320494e2054484520534f465457
4152452e0d004e006f0072006d0061006c006e0079006f00620079010d00
65006a006e00e9006e006f0072006d0061006c005300740061006e006400
6100720064039a03b103bd03bf03bd03b903ba03ac00a900200032003000
3100350020004d006900630072006f0073006f0066007400200043006f00
720070006f0072006100740069006f006e002e00200041006c006c002000
720069006700680074007300200072006500730065007200760065006400
2e000d000a000d000a0048006500620072006500770020004f0070006500
6e00540079007000650020004c00610079006f007500740020006c006f00
670069006300200063006f0070007900720069006700680074002000a900
2000320030003000330020002600200032003000300037002c0020005200
61006c00700068002000480061006e0063006f0063006b00200026002000
4a006f0068006e00200048007500640073006f006e002e00200054006800
6900730020006c00610079006f007500740020006c006f00670069006300
200066006f00720020004200690062006c006900630061006c0020004800
6500620072006500770020006900730020006f00700065006e0020007300
6f007500720063006500200073006f006600740077006100720065002000
75006e00640065007200200074006800650020004d004900540020004c00
6900630065006e00730065003b002000730065006500200065006d006200
6500640064006500640020006c006900630065006e007300650020006400
650073006300720069007000740069006f006e00200066006f0072002000
640065007400610069006c0073002e000d000a000d000a004d0069006300
72006f0073006f00660074002000530061006e0073002000530065007200
69006600200069007300200061002000740072006100640065006d006100
72006b0020006f006600200074006800650020004d006900630072006f00
73006f00660074002000670072006f007500700020006f00660020006300
6f006d00700061006e006900650073002e004d006900630072006f007300
6f00660074002000530061006e0073002000530065007200690066002000
52006500670075006c0061007200560065007200730069006f006e002000
36002e00390031004d006900630072006f0073006f006600740053006100
6e0073005300650072006900660068007400740070003a002f002f007700
770077002e006d006900630072006f0073006f00660074002e0063006f00
6d002f007400790070006f006700720061007000680079002f0066006f00
6e00740073002f0059006f00750020006d00610079002000750073006500
20007400680069007300200066006f006e00740020006100730020007000
650072006d00690074007400650064002000620079002000740068006500
2000450055004c004100200066006f007200200074006800650020007000
72006f006400750063007400200069006e00200077006800690063006800
20007400680069007300200066006f006e00740020006900730020006900
6e0063006c007500640065006400200074006f0020006400690073007000
6c0061007900200061006e00640020007000720069006e00740020006300
6f006e00740065006e0074002e002000200059006f00750020006d006100
790020006f006e006c0079002000280069002900200065006d0062006500
640020007400680069007300200066006f006e007400200069006e002000
63006f006e00740065006e00740020006100730020007000650072006d00
690074007400650064002000620079002000740068006500200065006d00
620065006400640069006e00670020007200650073007400720069006300
740069006f006e007300200069006e0063006c0075006400650064002000
69006e0020007400680069007300200066006f006e0074003b0020006100
6e006400200028006900690029002000740065006d0070006f0072006100
720069006c007900200064006f0077006e006c006f006100640020007400
680069007300200066006f006e007400200074006f002000610020007000
720069006e0074006500720020006f00720020006f007400680065007200
20006f007500740070007500740020006400650076006900630065002000
74006f002000680065006c00700020007000720069006e00740020006300
6f006e00740065006e0074002e000d000a000d000a005400680065002000
66006f006c006c006f00770069006e00670020006c006900630065006e00
730065002c0020006200610073006500640020006f006e00200074006800
650020004d004900540020006c006900630065006e007300650020002800
68007400740070003a002f002f0065006e002e00770069006b0069007000
65006400690061002e006f00720067002f00770069006b0069002f004d00
490054005f004c006900630065006e007300650029002c00200061007000
70006c00690065007300200074006f00200074006800650020004f007000
65006e00540079007000650020004c00610079006f007500740020006c00
6f00670069006300200066006f00720020004200690062006c0069006300
61006c00200048006500620072006500770020201c004c00610079006f00
7500740020004c006f006700690063201d0020006100730020006a006f00
69006e0074006c007900200064006500760065006c006f00700065006400
2000620079002000520061006c00700068002000480061006e0063006f00
63006b00200061006e00640020004a006f0068006e002000480075006400
73006f006e002e0020000d000a000d000a005000650072006d0069007300
730069006f006e0020006900730020006800650072006500620079002000
6700720061006e007400650064002c002000660072006500650020006f00
660020006300680061007200670065002c00200074006f00200061006e00
7900200070006500720073006f006e0020006f0062007400610069006e00
69006e00670020006100200063006f007000790020006f00660020007400
6800650020004f00700065006e00540079007000650020004c0061007900
6f007500740020006c006f00670069006300200066006f00720020004200
690062006c006900630061006c0020004800650062007200650077002000
61006e00640020006100730073006f006300690061007400650064002000
64006f00630075006d0065006e0074006100740069006f006e0020006600
69006c00650073002000280074006800650020201c004c00610079006f00
7500740020004c006f00670069006300200053006f006600740077006100
720065201d0029002c00200074006f0020006400650061006c0020006900
6e00200074006800650020004c00610079006f007500740020004c006f00
670069006300200053006f00660074007700610072006500200077006900
740068006f00750074002000720065007300740072006900630074006900
6f006e002c00200069006e0063006c007500640069006e00670020007700
6900740068006f007500740020006c0069006d0069007400610074006900
6f006e002000740068006500200072006900670068007400730020007400
6f0020007500730065002c00200063006f00700079002c0020006d006f00
64006900660079002c0020006d0065007200670065002c00200070007500
62006c006900730068002c00200064006900730074007200690062007500
740065002c0020007300750062006c006900630065006e00730065002c00
200061006e0064002f006f0072002000730065006c006c00200063006f00
700069006500730020006f006600200074006800650020004c0061007900
6f007500740020004c006f00670069006300200053006f00660074007700
6100720065002c00200061006e006400200074006f002000700065007200
6d0069007400200070006500720073006f006e007300200074006f002000
770068006f006d00200074006800650020004c00610079006f0075007400
20004c006f00670069006300200053006f00660074007700610072006500
20006900730020006600750072006e006900730068006500640020007400
6f00200064006f00200073006f002c0020007300750062006a0065006300
7400200074006f002000740068006500200066006f006c006c006f007700
69006e006700200063006f006e0064006900740069006f006e0073003a00
0d000a000d000a005400680065002000610062006f007600650020006300
6f00700079007200690067006800740020006e006f007400690063006500
200061006e0064002000740068006900730020007000650072006d006900
7300730069006f006e0020006e006f007400690063006500200073006800
61006c006c00200062006500200069006e0063006c007500640065006400
200069006e00200061006c006c00200063006f0070006900650073002000
6f00720020007300750062007300740061006e007400690061006c002000
70006f007200740069006f006e00730020006f0066002000740068006500
20004c00610079006f007500740020004c006f0067006900630020005300
6f006600740077006100720065002e000d000a000d000a00540048004500
200053004f00460054005700410052004500200049005300200050005200
4f0056004900440045004400200027004100530020004900530027002c00
200057004900540048004f00550054002000570041005200520041004e00
5400590020004f004600200041004e00590020004b0049004e0044002c00
2000450058005000520045005300530020004f005200200049004d005000
4c004900450044002c00200049004e0043004c005500440049004e004700
200042005500540020004e004f00540020004c0049004d00490054004500
4400200054004f0020005400480045002000570041005200520041004e00
540049004500530020004f00460020004d00450052004300480041004e00
54004100420049004c004900540059002c0020004600490054004e004500
53005300200046004f005200200041002000500041005200540049004300
55004c0041005200200050005500520050004f0053004500200041004e00
440020004e004f004e0049004e004600520049004e00470045004d004500
4e0054002e00200049004e0020004e004f0020004500560045004e005400
20005300480041004c004c00200054004800450020004100550054004800
4f005200530020004f005200200043004f00500059005200490047004800
5400200048004f004c00440045005200530020004200450020004c004900
410042004c004500200046004f005200200041004e005900200043004c00
410049004d002c002000440041004d00410047004500530020004f005200
20004f00540048004500520020004c0049004100420049004c0049005400
59002c0020005700480045005400480045005200200049004e0020004100
4e00200041004300540049004f004e0020004f004600200043004f004e00
540052004100430054002c00200054004f005200540020004f0052002000
4f00540048004500520057004900530045002c0020004100520049005300
49004e0047002000460052004f004d002c0020004f005500540020004f00
460020004f005200200049004e00200043004f004e004e00450043005400
49004f004e00200057004900540048002000540048004500200053004f00
46005400570041005200450020004f005200200054004800450020005500
5300450020004f00520020004f0054004800450052002000440045004100
4c0049004e0047005300200049004e002000540048004500200053004f00
4600540057004100520045002e000d000a004e006f0072006d0061006100
6c0069004e006f0072006d00e1006c006e0065004e006f0072006d006100
6c0065005300740061006e00640061006100720064041e0431044b044704
3d044b0439004e0061007600610064006e006f0041007200720075006e00
74006100b15440b80135b31c22392f410c0135003f0135004f0135008f01
35009f013500050040012eb31c1f39304112012800010040012800800128
0090012800a0012800b00128000500ef0126000100400125b31b1f394041
0a01240001002f01050001004f010400010040010340aa090d392f652f66
2f672f682f692f6a2f742f752f7b2f7c2fd12fd20c20fc30fc40fcd0fc04
f1f2197ff2018ff2aff2e0f203d1d216171c7b7c161b7b7c19307c407c50
7c607c707c05767716171c6d7016171c6c6f16171c6b6e161b0f6b7f6b8f
6e9f6eaf6e056b6e7f721a747514151c676a14151ca96ab96ae96af96a04
666914151cc669016568141b0f651f6502af68bf68ef65ff650465688571
1a1973167a431921794319212f4147014200400142007f01420003005001
3b0001002f013a004f013a006f013a007f013a00bf013a0005007f013400
01007f013300800133009001330003006f0132007f0132008f0132000300
7001210001002f0121003f0121004f0121005f0121000400a0011e00b001
1e00c0011e00030020012d0030012d0060012d0070012d0080012d009001
2d00060040010fb40b1f39092f411f010e005f010e009f010e00af010e00
bf010e00050090010e00bf010e00cf010e00df010e00ef010e0005002001
0e006f010e00b0010e00d0010e00e0010eb205d10f4123010e003f010e00
bf010e00cf010e0004000f010e005f010e006f010e00a0010e00bf010e00
cf010e00df010e0007003f010e004f010e007f010e00af010e00ef010e00
ff010eb2069f7f4123010e00af010e00e0010e00ff010e0004001f010e00
3f010e00af010e00df010e00ef010e0005000f010e001f010e002f010e00
7f010e008f010e00c0010e00df010e00ef010eb2086d9f411b010e00cf01
0e00ef010e00ff010e0004000f010e00ef010e0002000f010e002f010e00
3f010e004f010e00c0010e00df010e00ef010eb2073a70bd010e00df010e
00020040010eb32b33395f411b010e0070010e008f010e009f010e00cf01
0e00df010e0006000f010e001f010e003f010e0080010e00bf010e00ef01
0e00060040010eb3091b3970bb0136000100200108b30d113940b80102b2
0b1439b9ffc00107b31b22392f4118010c004f010c0002002f010c000100
8f010b0001002f0107004f010700c0010700d001070004004f0107000100
40010040640b103940fe0b1139e0f601e0f60114f424f40274f40140df60
df0220d830d840d80366c176c10299be0120b230b240b20360b070b0029b
93002b9a92002b9991002b9493002b9293002b9193062b9395032b988504
2b9796042b9695032b9995a995026f410f0131007f0131008f0131000301
3001160032001f011901160015001f0116b285032bb9ffe0012fb30b1439
70410d01170001002f0117003f0117004f0117005f0117000401130114b2
2a1fa0bc011400b0011400c0011440160370fbf0fb022ffb6ffb7ffb0340
fa50fa60faf0fa04b8ffc040fffa11153950ec70ec0250ec70ec0240ec01
bfeb0170ea0130ea0170e9015fe970e9f0e903a0e9015fe870e802efe801
7fe8bfe8efe803f0e701f0e7012fe780e7a0e7f0e70450e6f0e60250e660
e670e6c0e60450e50170e50180e4e0e4f0e40340dca0dc02309050900220
a04fa05fa09fa0afa0efa006e0f501e0f501f3851e1f2fe20140dd019fd5
afd5bfd5030fd340d302e0d0010fc470c4022fc43fc44fc45fc49fc4afc4
efc4ffc40899bd99bf02dad9042bd685022bcccd062bcd85022bc9c8062b
c885022b8d8b042b8c8b191f8b83c81f897d641f817f082b7d7f082b7f85
072baf85042b8885012b8785002b8485042b8385002b2ffd4ffd027f40ab
ef012df03bf04ff069f07ff0051b37151836151535151234150f33150c32
15093115063015032f15002e1526270f28270f26002a1f0f2a2f2a3f2a03
2f24bf24022a2b0f2c2b0f22230e24230f1e1f0e201f0f2005010f10110c
0c0d0e0c090a0b0c0607080c0304050c0001020c0003181f500f700f027f
0f800fbf0f030f031f032f034f037f03bf03ef030704012c1f1b011d0d18
071a0d1510170d1204140d701b01501b701bf01b03b8ffc0400b1b131839
701b801b02503301b0124b004b5442b013014b004b5342b0332b4bb80320
52b0322b4bb009505b58b101018e59b0332bb00288b8010054b00488b802
0054b012435a5b58b80119b101018e851bb900040100b04b60858d592b1d
b0644b5358b0801d59b0324b5358b0901d5900732b74742b2b2b2b2b7373
742b2b2b2b2b2b2b732b2b2b2b2b2b73732bb1282645b02a4561b02c4560
442b2b2b2b2b2b2b2b2b2b2b2b73b0ef45b0f0456168b0f04560b0ef2344
7373012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73737473737373732b
747373747373737473747374747373747374747374737374742b74737474
2b73742b2b2b2b7300732b2b2b2b2b2b2b2b2b2b73737373737373747374
2b2b73737373732b2b2b742b73742b755e7374755e7374755e7374755e73
74755e2b73747374737373737373012b2bb018b0314b53422b2b73742b73
2b732b2b2b732b2b2b2b732b2b2b73742b73732b7373732b7373742b732b
b109322b4bb05052424bb03c524bb00f505bb01a23424bb0c8524bb03650
5bb00c23422b000000>
[579 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 116 41 <000100a40000048105ba0009004f40110591020207019108030704040002
067f07b8fffe401c0d0d063b074000400b16360b006f020a076b02e80b01
270b570b02005f5d5d2b2b2b011a18102b4ded3212392f002f3fed12392f
ed3130012111211521112311210481fce502b1fd4fc203dd050cfe3aaefd
6805ba00>OAAAAA+MicrosoftSansSerif AddT42Char 
1 0 0 <0002003200000226060000030007000033112111252111213201f4fe7801
1cfee40600fa006c0528>OAAAAA+MicrosoftSansSerif AddT42Char 
OAAAAA+MicrosoftSansSerif /CharStrings get begin
/g41 41 def
end
OAAAAA+MicrosoftSansSerif /Encoding get
dup 70 /g41 put
pop
end
%ADOEndSubsetFont
/NLZWPQ+MicrosoftSansSerif /OAAAAA+MicrosoftSansSerif findfont ct_VMDictPut
/NLZWPQ+MicrosoftSansSerif*1 
[70{/.notdef}rp /g41 185{/.notdef}rp]
NLZWPQ+MicrosoftSansSerif nf
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
116.35 192.025 mo
(F)sh
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
116.35 192.025 mo
(F) false chp
.34429 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
@
%ADOBeginSubsetFont: OAAAAA+MicrosoftSansSerif AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPQ+MicrosoftSansSerif gcheck setglobal} if
1 40 16 <0001004201b80268026d0003003140208f0101012f024f025f0203025000
6000027001012f01010005017005012005015d712f10c65d5d5d002f5dcd
5d3130012135210268fdda022601b8b5>NLZWPQ+MicrosoftSansSerif AddT42Char 
NLZWPQ+MicrosoftSansSerif /CharStrings get begin
/g16 16 def
end
NLZWPQ+MicrosoftSansSerif /Encoding get
dup 45 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPQ+MicrosoftSansSerif*1 
[45{/.notdef}rp /g16 24{/.notdef}rp /g41 185{/.notdef}rp]
NLZWPQ+MicrosoftSansSerif nf
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
123.72 192.025 mo
(-)sh
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
123.72 192.025 mo
(-) false chp
@
%ADOBeginSubsetFont: OAAAAA+MicrosoftSansSerif AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal NLZWPQ+MicrosoftSansSerif gcheck setglobal} if
1 240 53 <000200a40000056a05ba0014001c00f14017470c570c670c03024c035c03
020302011c018100141400b8fff840320b0b063b0000148a14012c143c14
0208141814020902050e150e250e350e0403197d070e170e270e370e040e
040d0d063b0eb8fff4401a0b0b063b0e01020e1112140600080018007800
030d0015077f08b8fff8b40d0d063b08b8fff8402f0b0b063b08401e006f
021d086b028711010212110915919706010606081c9209030008481e0177
1e01a71eb71e02005f5d715d002f333fed12392f5ded1239395f5d302b2b
011a18102b2b4ded325f5e5d1117332f2b2b5ded5f5d5f5e5d5d5d872e2b
2b0e4b52587d1b7a5910c431005f5d5f5d21230326262321112311213216
16151406071516170121323635342121056ad28a25ac70fe99c20289aad8
88b0999950fc8f01b1b5a3fec6fe3101876884fd8d05ba42d48598cc1f04
31d80192728cfa00>NLZWPQ+MicrosoftSansSerif AddT42Char 
NLZWPQ+MicrosoftSansSerif /CharStrings get begin
/g53 53 def
end
NLZWPQ+MicrosoftSansSerif /Encoding get
dup 82 /g53 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/NLZWPQ+MicrosoftSansSerif*1 
[45{/.notdef}rp /g16 24{/.notdef}rp /g41 11{/.notdef}rp /g53 173{/.notdef}rp]
NLZWPQ+MicrosoftSansSerif nf
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
127.72 192.025 mo
(R)sh
NLZWPQ+MicrosoftSansSerif*1 [12.05 0 0 -12.05 0 0 ]msf
127.72 192.025 mo
(R) false chp
@
54 85.75 mo
57 85.75 li
57.2762 85.75 57.5 85.974 57.5 86.25 cv
57.5 86.526 57.2762 86.75 57 86.75 cv
54 86.75 li
53.7238 86.75 53.5 86.526 53.5 86.25 cv
53.5 85.974 53.7238 85.75 54 85.75 cv
60 85.75 mo
60.2762 85.75 60.5 85.974 60.5 86.25 cv
60.5 86.526 60.2762 86.75 60 86.75 cv
59.7238 86.75 59.5 86.526 59.5 86.25 cv
59.5 85.974 59.7238 85.75 60 85.75 cv
63 85.75 mo
66 85.75 li
66.2762 85.75 66.5 85.974 66.5 86.25 cv
66.5 86.526 66.2762 86.75 66 86.75 cv
63 86.75 li
62.7238 86.75 62.5 86.526 62.5 86.25 cv
62.5 85.974 62.7238 85.75 63 85.75 cv
69 85.75 mo
69.2762 85.75 69.5 85.974 69.5 86.25 cv
69.5 86.526 69.2762 86.75 69 86.75 cv
68.7238 86.75 68.5 86.526 68.5 86.25 cv
68.5 85.974 68.7238 85.75 69 85.75 cv
72 85.75 mo
75 85.75 li
75.2762 85.75 75.5 85.974 75.5 86.25 cv
75.5 86.526 75.2762 86.75 75 86.75 cv
72 86.75 li
71.7238 86.75 71.5 86.526 71.5 86.25 cv
71.5 85.974 71.7238 85.75 72 85.75 cv
78 85.75 mo
78.2762 85.75 78.5 85.974 78.5 86.25 cv
78.5 86.526 78.2762 86.75 78 86.75 cv
77.7238 86.75 77.5 86.526 77.5 86.25 cv
77.5 85.974 77.7238 85.75 78 85.75 cv
81 85.75 mo
84 85.75 li
84.2762 85.75 84.5 85.974 84.5 86.25 cv
84.5 86.526 84.2762 86.75 84 86.75 cv
81 86.75 li
80.7238 86.75 80.5 86.526 80.5 86.25 cv
80.5 85.974 80.7238 85.75 81 85.75 cv
87 85.75 mo
87.2762 85.75 87.5 85.974 87.5 86.25 cv
87.5 86.526 87.2762 86.75 87 86.75 cv
86.7238 86.75 86.5 86.526 86.5 86.25 cv
86.5 85.974 86.7238 85.75 87 85.75 cv
90 85.75 mo
93 85.75 li
93.2762 85.75 93.5 85.974 93.5 86.25 cv
93.5 86.526 93.2762 86.75 93 86.75 cv
90 86.75 li
89.7238 86.75 89.5 86.526 89.5 86.25 cv
89.5 85.974 89.7238 85.75 90 85.75 cv
96 85.75 mo
96.2762 85.75 96.5 85.974 96.5 86.25 cv
96.5 86.526 96.2762 86.75 96 86.75 cv
95.7238 86.75 95.5 86.526 95.5 86.25 cv
95.5 85.974 95.7238 85.75 96 85.75 cv
99 85.75 mo
102 85.75 li
102.276 85.75 102.5 85.974 102.5 86.25 cv
102.5 86.526 102.276 86.75 102 86.75 cv
99 86.75 li
98.7238 86.75 98.5 86.526 98.5 86.25 cv
98.5 85.974 98.7238 85.75 99 85.75 cv
105 85.75 mo
105.276 85.75 105.5 85.974 105.5 86.25 cv
105.5 86.526 105.276 86.75 105 86.75 cv
104.724 86.75 104.5 86.526 104.5 86.25 cv
104.5 85.974 104.724 85.75 105 85.75 cv
108 85.75 mo
111 85.75 li
111.276 85.75 111.5 85.974 111.5 86.25 cv
111.5 86.526 111.276 86.75 111 86.75 cv
108 86.75 li
107.724 86.75 107.5 86.526 107.5 86.25 cv
107.5 85.974 107.724 85.75 108 85.75 cv
114 85.75 mo
114.276 85.75 114.5 85.974 114.5 86.25 cv
114.5 86.526 114.276 86.75 114 86.75 cv
113.724 86.75 113.5 86.526 113.5 86.25 cv
113.5 85.974 113.724 85.75 114 85.75 cv
117 85.75 mo
120 85.75 li
120.276 85.75 120.5 85.974 120.5 86.25 cv
120.5 86.526 120.276 86.75 120 86.75 cv
117 86.75 li
116.724 86.75 116.5 86.526 116.5 86.25 cv
116.5 85.974 116.724 85.75 117 85.75 cv
123 85.75 mo
123.276 85.75 123.5 85.974 123.5 86.25 cv
123.5 86.526 123.276 86.75 123 86.75 cv
122.724 86.75 122.5 86.526 122.5 86.25 cv
122.5 85.974 122.724 85.75 123 85.75 cv
126 85.75 mo
129 85.75 li
129.276 85.75 129.5 85.974 129.5 86.25 cv
129.5 86.526 129.276 86.75 129 86.75 cv
126 86.75 li
125.724 86.75 125.5 86.526 125.5 86.25 cv
125.5 85.974 125.724 85.75 126 85.75 cv
132 85.75 mo
132.276 85.75 132.5 85.974 132.5 86.25 cv
132.5 86.526 132.276 86.75 132 86.75 cv
131.724 86.75 131.5 86.526 131.5 86.25 cv
131.5 85.974 131.724 85.75 132 85.75 cv
135 85.75 mo
138 85.75 li
138.276 85.75 138.5 85.974 138.5 86.25 cv
138.5 86.526 138.276 86.75 138 86.75 cv
135 86.75 li
134.724 86.75 134.5 86.526 134.5 86.25 cv
134.5 85.974 134.724 85.75 135 85.75 cv
141 85.75 mo
141.276 85.75 141.5 85.974 141.5 86.25 cv
141.5 86.526 141.276 86.75 141 86.75 cv
140.724 86.75 140.5 86.526 140.5 86.25 cv
140.5 85.974 140.724 85.75 141 85.75 cv
144 85.75 mo
147 85.75 li
147.276 85.75 147.5 85.974 147.5 86.25 cv
147.5 86.526 147.276 86.75 147 86.75 cv
144 86.75 li
143.724 86.75 143.5 86.526 143.5 86.25 cv
143.5 85.974 143.724 85.75 144 85.75 cv
150 85.75 mo
150.276 85.75 150.5 85.974 150.5 86.25 cv
150.5 86.526 150.276 86.75 150 86.75 cv
149.724 86.75 149.5 86.526 149.5 86.25 cv
149.5 85.974 149.724 85.75 150 85.75 cv
153 85.75 mo
156 85.75 li
156.276 85.75 156.5 85.974 156.5 86.25 cv
156.5 86.526 156.276 86.75 156 86.75 cv
153 86.75 li
152.724 86.75 152.5 86.526 152.5 86.25 cv
152.5 85.974 152.724 85.75 153 85.75 cv
159 85.75 mo
159.276 85.75 159.5 85.974 159.5 86.25 cv
159.5 86.526 159.276 86.75 159 86.75 cv
158.724 86.75 158.5 86.526 158.5 86.25 cv
158.5 85.974 158.724 85.75 159 85.75 cv
162 85.75 mo
165 85.75 li
165.276 85.75 165.5 85.974 165.5 86.25 cv
165.5 86.526 165.276 86.75 165 86.75 cv
162 86.75 li
161.724 86.75 161.5 86.526 161.5 86.25 cv
161.5 85.974 161.724 85.75 162 85.75 cv
168 85.75 mo
168.276 85.75 168.5 85.974 168.5 86.25 cv
168.5 86.526 168.276 86.75 168 86.75 cv
167.724 86.75 167.5 86.526 167.5 86.25 cv
167.5 85.974 167.724 85.75 168 85.75 cv
171 85.75 mo
174 85.75 li
174.276 85.75 174.5 85.974 174.5 86.25 cv
174.5 86.526 174.276 86.75 174 86.75 cv
171 86.75 li
170.724 86.75 170.5 86.526 170.5 86.25 cv
170.5 85.974 170.724 85.75 171 85.75 cv
177 85.75 mo
177.276 85.75 177.5 85.974 177.5 86.25 cv
177.5 86.526 177.276 86.75 177 86.75 cv
176.724 86.75 176.5 86.526 176.5 86.25 cv
176.5 85.974 176.724 85.75 177 85.75 cv
180 85.75 mo
183 85.75 li
183.276 85.75 183.5 85.974 183.5 86.25 cv
183.5 86.526 183.276 86.75 183 86.75 cv
180 86.75 li
179.724 86.75 179.5 86.526 179.5 86.25 cv
179.5 85.974 179.724 85.75 180 85.75 cv
186 85.75 mo
186.276 85.75 186.5 85.974 186.5 86.25 cv
186.5 86.526 186.276 86.75 186 86.75 cv
185.724 86.75 185.5 86.526 185.5 86.25 cv
185.5 85.974 185.724 85.75 186 85.75 cv
189 85.75 mo
192 85.75 li
192.276 85.75 192.5 85.974 192.5 86.25 cv
192.5 86.526 192.276 86.75 192 86.75 cv
189 86.75 li
188.724 86.75 188.5 86.526 188.5 86.25 cv
188.5 85.974 188.724 85.75 189 85.75 cv
195 85.75 mo
195.276 85.75 195.5 85.974 195.5 86.25 cv
195.5 86.526 195.276 86.75 195 86.75 cv
194.724 86.75 194.5 86.526 194.5 86.25 cv
194.5 85.974 194.724 85.75 195 85.75 cv
198 85.75 mo
201 85.75 li
201.276 85.75 201.5 85.974 201.5 86.25 cv
201.5 86.526 201.276 86.75 201 86.75 cv
198 86.75 li
197.724 86.75 197.5 86.526 197.5 86.25 cv
197.5 85.974 197.724 85.75 198 85.75 cv
204 85.75 mo
204.276 85.75 204.5 85.974 204.5 86.25 cv
204.5 86.526 204.276 86.75 204 86.75 cv
203.724 86.75 203.5 86.526 203.5 86.25 cv
203.5 85.974 203.724 85.75 204 85.75 cv
207 85.75 mo
210 85.75 li
210.276 85.75 210.5 85.974 210.5 86.25 cv
210.5 86.526 210.276 86.75 210 86.75 cv
207 86.75 li
206.724 86.75 206.5 86.526 206.5 86.25 cv
206.5 85.974 206.724 85.75 207 85.75 cv
213 85.75 mo
213.276 85.75 213.5 85.974 213.5 86.25 cv
213.5 86.526 213.276 86.75 213 86.75 cv
212.724 86.75 212.5 86.526 212.5 86.25 cv
212.5 85.974 212.724 85.75 213 85.75 cv
216 85.75 mo
219 85.75 li
219.276 85.75 219.5 85.974 219.5 86.25 cv
219.5 86.526 219.276 86.75 219 86.75 cv
216 86.75 li
215.724 86.75 215.5 86.526 215.5 86.25 cv
215.5 85.974 215.724 85.75 216 85.75 cv
f
grestore
gsave
86.25 155.75 mo
58.5 155.75 li
58.5 149.625 li
86.25 149.625 li
86.25 155.75 li
86.25 148.875 mo
58.5 148.875 li
58.5 58.25 li
86.25 58.25 li
86.25 148.875 li
81 85.75 mo
80.7238 85.75 80.5 85.974 80.5 86.25 cv
80.5 86.526 80.7238 86.75 81 86.75 cv
84 86.75 li
84.2762 86.75 84.5 86.526 84.5 86.25 cv
84.5 85.974 84.2762 85.75 84 85.75 cv
81 85.75 li
78 85.75 mo
77.7238 85.75 77.5 85.974 77.5 86.25 cv
77.5 86.526 77.7238 86.75 78 86.75 cv
78.2762 86.75 78.5 86.526 78.5 86.25 cv
78.5 85.974 78.2762 85.75 78 85.75 cv
72 85.75 mo
71.7238 85.75 71.5 85.974 71.5 86.25 cv
71.5 86.526 71.7238 86.75 72 86.75 cv
75 86.75 li
75.2762 86.75 75.5 86.526 75.5 86.25 cv
75.5 85.974 75.2762 85.75 75 85.75 cv
72 85.75 li
69 85.75 mo
68.7238 85.75 68.5 85.974 68.5 86.25 cv
68.5 86.526 68.7238 86.75 69 86.75 cv
69.2762 86.75 69.5 86.526 69.5 86.25 cv
69.5 85.974 69.2762 85.75 69 85.75 cv
63 85.75 mo
62.7238 85.75 62.5 85.974 62.5 86.25 cv
62.5 86.526 62.7238 86.75 63 86.75 cv
66 86.75 li
66.2762 86.75 66.5 86.526 66.5 86.25 cv
66.5 85.974 66.2762 85.75 66 85.75 cv
63 85.75 li
60 85.75 mo
59.7238 85.75 59.5 85.974 59.5 86.25 cv
59.5 86.526 59.7238 86.75 60 86.75 cv
60.2762 86.75 60.5 86.526 60.5 86.25 cv
60.5 85.974 60.2762 85.75 60 85.75 cv
clp
58.19 156.01 mo
86.51 156.01 li
86.51 57.99 li
58.19 57.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[28.32 0 0 98.02 58.19 55.99 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 408 
/M[118 0 0 -408 0 408 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4Z
JcLB&JcLB&JcMSHqZ5d[gB.6QdfA/)j9!R+dfSn<blGlfp&`\CqZ4M7rrW&udf@,aq>f"F^B3p*h#P1k
kQ'rLqZ4G5qZ5dYmf:*(ec>IF^B2X[^B3'grW3!"rWE-&p]eeDrWN3&rW<'"iW/rYrW<'"mf_#@rW3!"
rW1[PrW;3^g&V*RX8oj4rW3!"rWE-&e->7DrWN3&rW<'"iW/rYrW<'"b67J@rW3!"rW1[PrW9q:rW)p!
L]H<4rW3!"rWE-&^BXZ?rWE-$rW2uujT,8\rW<'"^BFN:rW<'"nc7kRrW9h7rW;*[KE2#Q!!3'#rWE-&
^BXZ?rWE-$rW2!YrW3!"rrE*#^BFN:rW<'"f`;!Qq#JG8rW9h7[K,n!rW<''rX&Q3^CL5NrX&Q.rW;?b
quH]srWN3)rWW9,`<Q;IrWW9*rWN3$i;iQO`<"'\QiR*erW`?.rX8H1aU\:XrX&Q.rW;0]rW3!$rW`?*
rWr#ueHZ!YrWW9*rWN3$ec=n7h>sGQ]E%p4rW`?.rX70bm10+'rX&Q.rW;0]rW3!$rW`?*rWpaQq$-g(
rWW9*rWN3$ec<Yi!!%TNj8f,ZrWE-+rXf&ErYWTlrYYVMrXf&8rWE*"klC\arW`?-rX-CKrX/W1rW`?'
oDn4XrW2lrrW11BrW2lrrW2*\M#dJTrWE-+rXf&ErYWTlrYYVMrXf&8rWE*"klC\arW`?-rX-CKrX/W1
rW`?'hZ3WVqZ-TrrW(4DrW2lrrW0h8XT8;#rWE-+rXf&ErYXl;h&62/rYGJErX&Q+r;l-_rW<''rWrK1
h$i<PrX/W1rW`?'hZ3WVqZ-Trg&U[DrW2lrrW/Pid/a+GrWN3.rYPPTrZT6)rZV7^rYPPArWN0#klC\`
rWW9/rXSo=`=MqZrXSo8rWW9%jT,8]XT8>%rW%NMo`4pkrWN3.rYPPTrZT6)rZV7^rYPPArWN0#n,W:b
rW3!%rX8]8rXd$ZrXf&=rX8]/rW2*\rrN0%XT8>%g&RQAr;lm#rX8]ArZ;%^r$'9-rZV7^rYPPArWN0#
klC\`rWW9/rXSo=o+0:\rXf&=rX8]/rW2Tjo)SakXT8>%l2Z\Ar;us&!"T#=rYYVWrZoH/rZqIcrYYVE
rW`<&m/[(drWN3+rXAc9!"m!YrXSo9rWrK+r;u?dr;uWlrW2iqbQ.VCo`4plm/[(diW-sur;u?dr;us&
rXSoErZM1ckU#(3rZqIcrYYVErW`<&m/[(drWN3+rXAc9g_&TZrXSo9rWrK+r;u?dr;uWlrW1RMn,WFg
o`4plm/[(d^&[Eur;u?dr;us&rXSoErZM1c`?bL0s!7RdrYYVErW`<&m/[(drWN3+rXAc9^CgGTrX8c4
rs8T,r;u?dr;uWlrW0t<rW2Zlr;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@f
r;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uruqZ45-qZ6Zrr;u?dr;uWlZN0q*m/[(drW`?3rYb\Z
r[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)frirI[2qZ6Zr
r;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?
rXAc1rWN0$m/[(drW)fr^B"-2qZ6Zrr;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'
!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'
!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj
_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?
`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\u
r;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?d
r;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$u
r;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?d
r;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZm
Z2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$
pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$
rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Z
r[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uu
r;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:
!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEf
rrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoF
rZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IK
rW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<
rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3
rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(d
rrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
o)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:
rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=G
fDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$
m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z
`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$
m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(d
p&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)
r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoF
rZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^
rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?
rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&
mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3
rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,
rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mb
rXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\F
rW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?d
r<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;uru
rW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1
rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(d
ciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)
r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(d
irI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)
r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?d
r;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1
rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?d
r;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3
rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,
rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^
rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3
r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&
rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pW
e,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEg
p_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ys
m/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)
rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%Cf
bU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?d
r;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1
rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?d
r;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1
rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lu
m/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:
rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&
rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17D
k5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^
rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\F
rW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(d
rW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ou
huM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%Of
rYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rks
r;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?d
r;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$
rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=f
qBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lu
m/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:
rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lu
m/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:
rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uu
r;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?
rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3
r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(d
rW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)ou
blHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?d
r;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;uru
rW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)lu
VZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$
m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!
rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Z
r[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uu
r;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?
rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uu
r;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?
rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*
rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;Wl
rX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?d
r;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;uru
rW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:
rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%Of
rYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*
m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(d
rW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFf
r;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)
r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4e
r;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoF
rZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RL
rW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmBfq%EZ=
rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rksr;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9
rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn'$jq@Y*
rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drr<$!rW0>*
rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?o+KLb
rXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1rZ_=Z
rXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?dr;tsY`W5r=
m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1rWN0$m/[(d
rW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lum/[(do`2;u
r;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:rW`?)r;u?d
r;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*rW2uur;uHg
rW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^rXo,?rXAc1
rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe
!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+m/[(drW`?3
rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(drW)ouhZ21,
rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?bnBgb
rXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!VZ?Ysm/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ounc6N,
rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?i"G/b
rXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rksr;ucpo`4pl
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!
ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn`7
dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Zr[#N1r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lum/[(diW-su
r;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:rW`?)r;u?d
r;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&m/[(drWN3)
rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uur;u?dr;uWl
ZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$
m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lu
n,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^rX\u:
rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&
mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?dr;us&
rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;ururW1mV
eH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmBf
q%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rksr;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW2Qi
_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn'$
jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ysq#L'f
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drr<$!
rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1
rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?dr;tsY
`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1rWN0$
m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lum/[(d
o`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:rW`?)
r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*rW2uu
r;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^rXo,?
rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3
r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+m/[(d
rW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(drW)ou
hZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!VZ?Ys
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
nc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rksr;ucp
o`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!
!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lum/[(d
iW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:rW`?)
r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&m/[(d
rWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uur;u?d
r;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?rXAc1
rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ouZN0t*
rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@`=i.^
rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%OfrYb\F
rW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5ur;u?d
r;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?dr;uru
rW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@fr;rks
r;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru
rW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(dVZ?Ys
q#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#GrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uur;u?d
r;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?rXAc1
rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)lu
m/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`mrX\u:
rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*
rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^
rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+
m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(d
rW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!
VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rks
r;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lu
m/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:
rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&
m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uu
r;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?
rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ou
ZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@
`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%Of
rYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5u
r;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?d
r;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@f
r;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(d
VZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#G
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uu
r;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?
rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*
rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`m
rX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;uru
rW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?
rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTk
ZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$
m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEf
rrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nf
r;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:
rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+
rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\F
rW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$m
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*
rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0Fb
rXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qr
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4pl
rW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;
!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(d
oDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)
r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lu
mf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$
m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4
rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,
rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)b
rXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!f
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
ZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6
e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84u
r;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'f
r;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1
rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?d
r;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1
rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uu
r;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!
!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&
!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh
_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#
k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@Xg
rYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`o
p&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru
rW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$
qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucp
o`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)
rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lu
m/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:
rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*
rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uu
rW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?
rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(d
rWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ou
nGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%Xk
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ys
p]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(d
XT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$
rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uu
r;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?
rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*
rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?
rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*
rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^
rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?d
r;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;uru
rW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2
s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rks
r;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/C
mjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?d
r;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(d
rWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*
rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqin
rX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ou
ZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^
rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*
rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^
rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ys
m/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(d
rW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1
!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(d
VZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=f
f-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lu
m/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?d
r;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+
rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@b
rXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZs
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;uru
rW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^
rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
ZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?
`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rks
r;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?d
r;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f
`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?d
r;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Z
r[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uu
r;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&
m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-n
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#
ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5
eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u]npAt3prW`?4rYkb\r[-2Dn0e2^
rZhC\rX\u4r<)Efr;us%rW`?1rXf&@bnBgbrXo,@rXAc1rWW6%pAt!gr;ururW0V2q#LBprW)lum/[(d
X8r.ur;u]npAt3prW`?4rYkb\r[,T3r[.UhrYkbHrW`<'m/d.erWW9*rXAc;rXm*^rXo,@rXAc1rWW6%
p]1?qpAk-nrW)ouZN0t*rW)lumf<@fr;rksr;u]npAt3prW`?4rYkb\r[,T3r[.UhrYkbHrW`<'m/d.e
rWW9*rXAc;rXm*^rXo,@rXAc1rWW6%pAt!gr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u]npB(9rrWrK6
rYth\r[-kWh'`1KrZ_=\rX\u6r<2irpAt3orWW9+rXAc;rXn'%jqI_+rXf&;rWiE+r;u]opAk-nrW)fr
rW)ouf)Y7>rW2uuqZ6Zrr;u?dr;s_6klCY`pAjphr<3**rX\uIrZ_=g`@(X3rZ_=\rX\u6r<2irpAt3o
rWW9+rXAc;rXm*_rXo,@rXAc2rWW6%pAt!gr;uruqZ6ZrrW0t<rW2uuqZ6ZrrW3'$m/[(dVZ?Ysq#LEp
pB(9rrWrK6rYth\r[,T3r[.UgrYthIrWrH*pB(0lrW2s!rWW9+rXAc;rXm*_rXo,@rXAc2rWW6%pAt!g
r<!!!!!)lsrW)ou`;ol<rW)frrW)lum/[(dp&MAur;u]npBUX&rX8]>rZ1tar[@aqs!c2Ar[Rmqr[%Oa
rY5>>r<W-&o*,*trX8]9rY,8Do+f^hrY#2DrX\u9rW_rto)SakrW2lrqZ4k?qZ6QorW3!"l2[%KpBUX&
rX/]?rtPGQr[%Olr[Q)?r[Rmqr[%OarY5>>r<W-&o*,*trX8]9rY#8Ert<9crY#2DrX\u9rW_rto)Sak
rW2lrqZ6WqcN*hCqZ-TrrW:(>\,c7.r<WB1rY5>Pr[%Olr[R4_i@4aUr[@alrZ1tPrX8Z1pBU9nrW`?0
rX\uArY"*'k8!t/rY,8ArX8]0o*+^crW<'"qZ-Kof`:UDqZ6QorW3!"U&`sKpBpj,rXJi@rYth]_']1/
rZhC]rY5>@r<r?,o*#$srWrK3rX\u@`=`(^rX\u:!!rT1rW_rsn,`LirW3!"^B+<8rW3!"q>p<kMuWhX
pBpj,rXJi@rYth]^F&q)rYthNrXJf6pBp^!qZQm&rWrK3rX\u@`=`(^rX\u:rWrK-o*"O`rW<'"rW9h8
rW<'"rW;Qik5_=YpBpj,rXJi@rYth]pa4'/rZhC]rY5>@r<r?,o*#$srWrK3rX\u@ne'@`rY#2@rXAc3
rW_rsn,`LirW3!"joO0:rW<'"rW;Qi_Z7dYpBpj,rXAc;rYPPPrYthWg)TZ'rZ1tWrYkbPrXf&;r<r?,
pB:<rrWiE0q[CaZp^R*/rX/W0q??Trm/d(crW3!"b5qSDrW2ltm/`gZm/Zkfr<rT5rXf&FrYkbTrZ00%
rZ1tWrYkbPrXf&;rX/]6pBpWtq??j'rX/N2`=;\QrX/W0q??Ztrrh]iqZ?`trW:7DrW<'"qZ?-cq>cZY
pBpj,rsSl9rXf&FrYkbTrZ00%rZ1tWrYkbPrXf&;r<r?,pB:<rrWiE0rs\i7`=;\QrX/W0q??Trm/d(c
rW3!"rrL@FrW<'"qZ?-cec<,Yo*>7$rX/W7rXZaUrX\u<rX/W2o*>$oquus&rWrK0^C'rHrWrB+o*+^c
rW3'"XoSG&jT,8]pAhZ&rW;Zko*>7$rX/W7rX\`8aV"L_rXSo7rX&0$o*,!rrWrK0mL%ALrX&Q0qZl]r
o)Sakg]5b&rW;0]rW:OKgAq3So)S@erX&Q2rXSo<dh1sZrX\u<rX/W2o*=jjqZm*+rX$^Sp'Ud*rWrB+
o*+^crW9S0p&P'njT,8]Y5nS&rW;Zko*>7$rX/W7rXZaUrX\u<rX/W2r<N'%o*,!rrWrK0^C'rHrWrB+
oE>3uo)SakXT8>%lN$e^rW92%rW;Zkn,iRjrWN3)^BOT@rWMTil2gke^B=H<l2g8PrW3!"p]/A8rW<'"
_#UqEm/m7irW_Kgg'.H[rWMTil2gkeh#l[>rWMKem/[+drW:RLli@"drW/PigApUBrWN3)_?KoBrW`?)
m/lPRrWKt<rWN3$m/cSSrW3!"^B"67rW2coJcPfNl2gkc^B+<8irP;DnGn.@U]BZ\rW;lr`rZ/@^B(bD
JcM#8mfE=erW9h8rW:CHV?,KQJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcN4ZJ,~>

%%EndBinary
grestore
np
grestore
gsave
86.25 149.625 mo
58.5 149.625 li
58.5 148.875 li
86.25 148.875 li
86.25 149.625 li
clp
57.69 150.51 mo
87.01 150.51 li
87.01 148.19 li
57.69 148.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 57.69 61.49 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!X9,P+seQ_-71&d-71&d-71&d-71&d-7'iR%L)t7!!!!!!!!!#"q;Fn,pjrc-71&d-71&d-71&d
-71&d,p=-8"p+c)!!!!!!!!$&%2U*1,U4NY,9nEX,9nEX,9nEX,9nHX*u>@h!<<*"!!~>
<~!!!!!!X&]9%hTEe&eYfi&eYfi&eYfi&eYfi&ePW_"p=u-!!!!!!!!!#"9o8G&J>]h&eYfi&eYfi&eYfi
&eYfi&J,?T"9JQ'!!!!!!!!!""q(qP&J5Te&J5Te&J5Te&J5Te&J5Tc%grRB!!!!!!!~>
<~!!!!!!WW6$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<<0$!!!!!!!!!#!!**#!<<*"!!!!!!!!!!!!!!!
!!!!!!<<-$!!3-#!!!!!!!!!#!<<*#!<<*"!!!!!!!!!!!!!!!!!!$#!!!$$!!!!!!!~>
<~s8W-!s7kp7cH4,Ia2c6@a2c6@a2c6@a2c6@a2uW]lhLM[s8W-!s8W-!q!?b]aiMQEaN2HDaN2HDaN2HD
aN2HDaj8`.q#CBos8W-!s8W)omG648bKJ)PbKJ)PbKJ)PbKJ)PbKJ)RdbX<drr<#urr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
84 86.75 mo
81 86.75 li
80.7238 86.75 80.5 86.526 80.5 86.25 cv
80.5 85.974 80.7238 85.75 81 85.75 cv
84 85.75 li
84.2762 85.75 84.5 85.974 84.5 86.25 cv
84.5 86.526 84.2762 86.75 84 86.75 cv
78 86.75 mo
77.7238 86.75 77.5 86.526 77.5 86.25 cv
77.5 85.974 77.7238 85.75 78 85.75 cv
78.2762 85.75 78.5 85.974 78.5 86.25 cv
78.5 86.526 78.2762 86.75 78 86.75 cv
75 86.75 mo
72 86.75 li
71.7238 86.75 71.5 86.526 71.5 86.25 cv
71.5 85.974 71.7238 85.75 72 85.75 cv
75 85.75 li
75.2762 85.75 75.5 85.974 75.5 86.25 cv
75.5 86.526 75.2762 86.75 75 86.75 cv
69 86.75 mo
68.7238 86.75 68.5 86.526 68.5 86.25 cv
68.5 85.974 68.7238 85.75 69 85.75 cv
69.2762 85.75 69.5 85.974 69.5 86.25 cv
69.5 86.526 69.2762 86.75 69 86.75 cv
66 86.75 mo
63 86.75 li
62.7238 86.75 62.5 86.526 62.5 86.25 cv
62.5 85.974 62.7238 85.75 63 85.75 cv
66 85.75 li
66.2762 85.75 66.5 85.974 66.5 86.25 cv
66.5 86.526 66.2762 86.75 66 86.75 cv
60 86.75 mo
59.7238 86.75 59.5 86.526 59.5 86.25 cv
59.5 85.974 59.7238 85.75 60 85.75 cv
60.2762 85.75 60.5 85.974 60.5 86.25 cv
60.5 86.526 60.2762 86.75 60 86.75 cv
clp
58.49 87.51 mo
85.51 87.51 li
85.51 85.19 li
58.49 85.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[27.02 0 0 2.32 58.49 124.49 ]ct
snap_to_device
<<
/T 1
/W 36 
/H 3 
/M[36 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!#"qDLp,pjrc-71&d-71&d-71&d-71&d,pF3:"p+c)!!!!#"qDLp,pjrc-71&d-71&d-71&d-71&d
,pF3:"p+c)!!!!#"qDLp,pjrc-71&d-71&d-71&d-71&d,pF3:"p+c)~>
<~!!!!#"9o8F&J>]h&eYfi&eYfi&eYfi&eYfi&J#9S"9JQ'!!!!#"9o8F&J>]h&eYfi&eYfi&eYfi&eYfi
&J#9S"9JQ'!!!!#"9o8F&J>]h&eYfi&eYfi&eYfi&eYfi&J#9S"9JQ'~>
<~!!!!#!!*'"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!!3-#!!!!#!!*'"!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!"!!3-#!!!!#!!*'"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"!!3-#~>
<~s8W-!q!6\[aiDHBa2c6@a2c6@a2c6@a2c6@aj/Z,q#CBos8W-!q!6\[aiDHBa2c6@a2c6@a2c6@a2c6@
aj/Z,q#CBos8W-!q!6\[aiDHBa2c6@a2c6@a2c6@a2c6@aj/Z,q#CBo~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
63 149.25 mo
81 149.25 li
81 61.05 li
63 61.05 li
cp
gsave
grestore
/218096728.0 
<<
/ID /218096728.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 32 32 ] 
/XStep 32 
/YStep 32 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
gsave
0 0 mo
32 0 li
32 32 li
0 32 li
cp
clp
-.01 -.01 mo
32.01 -.01 li
32.01 32.01 li
-.01 32.01 li
cp
false sop
/1 /CSD get_res idxcs
gsave
clp
[1 0 0 -1 0 212 ]ct
[32.02 0 0 -32.02 -.01 212.01 ]ct
snap_to_device
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/MD false
/BC 1 
/D[0 1 ]
/DS 
<~J0:LU+s[kY."hp/&?pg5;$J40cp/G@"sjh96Qr\$KM!a1J]8ifW-!1f+,dt10Zbja4V[rjAlC^cenm@9
:1mM9jS"!dTMT<$3[GQ$8#0$s<4ZX!SPQ1`C/bbKkQ3=E,E\XQ"$cnfA/W09lCF6cB=(i-&.e~>
/LZWDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
%%EndBinary
grestore
np
grestore
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/218096728.0 /Pattern get_res
[.999988 0 0 -.999988 0 192.5 ]make_pattern set_pattern
ef
2 vmreclaim
.75075 lw
2 lc
0 lj
10 ml
[] 0 dsh
true sadj
63 149.25 mo
81 149.25 li
81 61.05 li
63 61.05 li
cp
false sop
.0127258 .270508 .324951 0 cmyk
@
gsave
117.75 155.75 mo
90 155.75 li
90 149.625 li
117.75 149.625 li
117.75 155.75 li
117.75 148.875 mo
90 148.875 li
90 95.75 li
117.75 95.75 li
117.75 148.875 li
clp
89.69 156.01 mo
118.01 156.01 li
118.01 95.49 li
89.69 95.49 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[28.32 0 0 60.52 89.69 55.99 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 252 
/M[118 0 0 -252 0 252 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4Z
JcLB&JcLB&JcMJEiW7[4dfB@Jg]6C8rW/_nJcNai^&e-4dfB@J^B"66r;_ELJcP$8\H1[inc8Xi^B"66
f`6U(NWA_Q`<"EfrW2Hfd/a.H[/bdY\,cL/rW;s"f)t@ArWN3%rW1[PqZG+Fo`G*pec>[MqZ=_:rW)p!
rW.oWg]7<SrW;s"_?9c?rW<'"qZ,LRqZF\:rWDKelN$nbqZ=V7rW<'"joBu5!!*!!rW;s"_?9c?rW<'"
f`;$Sr<'n<rWC^OrW2ltquFb;rW<'"_>q"Eo)SakrWE-(rWp7FrWrK-rWE-$l2^_^qZ?a!rWKt>rWN3&
qZ>jZrW3'"quH]s[K-:.jT,8]pAhZ&rW;0]rW<'$rW`?-pBeqJrWrK-rWE-$jT,/ZrWE-&mKM#BrWN3&
qZ>jZrW;rsrW2*\dK'7JjT,8]dfA,&rW;0]rW<'$rW`?-dg>CJrWrK-rWE-$jT,/ZrWE-&ap%JBrWN3&
qZ>jZrW;rsrW0h8p&P'njT,8]Y5nS&rW;<ar;lm!rWiE3rXo,C`>&:brXo,=rWiE(r;l9cq>pQtrW`?-
rX/W2b6n4Tq[!0*rWDutp]0X\qZ6ZrrW11Bo`=.SM#dJTrW<'(rXJi=rY*6brY,8CrXJi3rW<$!m/Zt`
rWE-(rWrK1rX$aTrX&H-rW`?(q>oUVqZ6ZrrW2uuc2dM<_#US;r;lm!rWiE3rXo,CknMqfrY,8CrXJi3
rW<$!m/Zt`rWE-(rWrK1rX%TlkmICrq[!0*rWDutirJrWrW)oug&U[Do`:T`d/a+GrWE-,rY,8LrZ&lu
rZ1tVrY,8<rWE*"klC\arWW9,rX8]7_@HPQrWrK+rW;'Zp]8,0p]:6lJcPHDr;lm"rX/W<rYkbU`?,"!
rYkbLrX/W,r;lBfq>gKrrWW9,rX8]7_@HPQrWrK+rW;*[!!)cp^B"$0f)V6>r;lm"rX/W<rYkbUr#X!%
rZ1tVrY,8<rWE*"klC\arWW9,rX8]7o+'+WrX8]2rWN3%o)S7[p]8,0p]9OXM?*SUrWE31rserDrZD+`
rZoZ3rZqIerZD+UrXJi0r;l-_rW3!&rX8Z8rt!'\q[`Z6rW`?&jT,8]rW2lrqZ6WqcN*hCqZ-TrrW:(>
XoSD$rWN30rYPPUrZ_=elQb@5rZqIerZD+UrXJi0r;l-_rW3!&rX8T6h\##`q[`Z6rW`?&jT,8]rW2lr
qZ5@Mo)SXgqZ-TrrW8eodK'4HrWN30rYPPUrZ_=eb9R!3!$_FerZD+UrXJi0r;l-_rW3!&rX8T6`=_tX
rX/]1rs&H'jT,8]rW2lrqZ4k?qZ6QorW3!"r;_ELp&P$mrW`?2rYb\Yr[#N1r[%OerYb\ErW`<&mf<@f
r;us$rW`?1rXf&@`=i.^rXf&;rW`?)r;u?dr;uruqZ6ZrrW0t<rW2uuqZ6Zrr;u?dr;uWlZN0q*m/[(d
rW`?2rYb\Yr[%Fgb9m37rZV7YrXJi2r;u?dr;us$rW`?1rXf&@ne0FbrXo,@rXAc1rWN0$m/[(drW)fr
rW)ouklBN>rW2uuqZ6Zrr;u?dr;t@Hf)YaNm/[(drW`?2rYb\Yr[$/CmjA#[rZV7YrXJi2r;u?dr;us$
rW`?1rXf&@c4]mbrXo,@rXAc1rWN0$m/[(drW)frrW)ou`;ol<rW)frrW)lum/[(dXT84ur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;ururW0>*
rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?rXm*^
rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1rZ_=Z
rXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTkZiL%+
m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$m/[(d
rW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEfrrE!!
VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nfr;rks
r;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:rW)lu
m/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+rX\u:
rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\FrW`<&
m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$mrW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uu
r;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0FbrXo,?
rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qrm/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4plrW)ou
ZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;!"]&@
`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1r[%Of
rYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(doDl5u
r;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)r;u?d
r;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lumf<@f
r;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$m/[(d
VZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4rso#G
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,rW2uu
r;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)brXo,?
rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!fr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*
rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6e.V`m
rX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84ur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'fr;uru
rW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rso)?
rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f`?tR1
rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?dr;uTk
ZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1rWN0$
m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uur;uEf
rrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!!!;Nf
r;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&!"T#=
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh_Z9Z:
rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#k7[b+
rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@XgrYb\F
rW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`op&P$m
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*
rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?ne0Fb
rXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$qZ-Qr
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucpo`4pl
rW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAf;
!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Zr[#N1
r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lum/[(d
oDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:rW`?)
r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*rW)lu
mf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uurW3'$
m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(drWW?4
rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ounGpH,
rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?h\,)b
rXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%XkrZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ysp]1!f
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
ZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn]6
e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(dXT84u
r;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$q#L'f
r;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1
rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoFrZ_=f
`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uur;u?d
r;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?rXAc1
rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*rW2uu
r;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(drW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*rW)p!
!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?dr;us&
!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;ururW2Nh
_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn$#
k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2s!@Xg
rYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rksr;u`o
p&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru
rW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/CmjA#[
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?dr;s)$
qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;ucp
o`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)
rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3rYb\Z
r[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*rW)lu
m/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqinrX\u:
rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ouZN0t*
rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\FrW`<&
m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?dr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*rW2uu
rW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^rXo,?
rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ysm/[(d
rWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(drW)ou
nGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1!%%Xk
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(dVZ?Ys
p]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=ff-]r5
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lum/[(d
XT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$
rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&rXSoF
rZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+rW2uu
r;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@brXo,?
rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZsm/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;ururW0>*
rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?
rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=ZrXSo3
r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`m/[(d
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ouZN0t*
rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?`=i.^
rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rksr;u?d
r;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?dr;uru
rW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f`?kR2
s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?dr;rks
r;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?d
r;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Zr[$/C
mjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uur;u?d
r;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(d
rWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-nrW`?3
rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#ZN0t*
rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5eIqin
rX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.ur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$mrW)ou
ZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^
rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%OfrYb\F
rW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Kur;u?d
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;ururW0>*
rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:rXm*^
rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!VZ?Ys
m/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$m/[(d
rW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$rW`?1
rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Zr[#N1
!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lum/[(d
VZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$
m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoFrZ_=f
f-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19orW)lu
m/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?d
r;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpfr;us&
rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!rrKG+
rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?nIj@b
rXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\rZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#quHZs
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!fr;uru
rW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^
rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+IrZ_=Z
rXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6klCY`
m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drW)ou
ZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1rX\u?
`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4er;rks
r;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)r;u?d
r;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(drWN3)
rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoFrZ_=f
`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uur;u?d
r;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:rW`?)
r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3rYb\Z
r[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,rW2uu
r;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u?dr<!!'!!`E4rYb\Zr[#N1r[%OfrYb\FrW`<&
m/[(drWN3)rXAf;!"]&@`=i.^rX\u:rW`?)r;u?dr;ururW2Tj_#XH8rW)lum/[(dj8d*ur;u]npAk-n
rW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mJm4er;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru!!3*#
ZN0t*rW)lum/[(doDl5ur;u?dr;us&rXSoFrZ_=fqBjE5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXnZ5
eIqinrX\u:rW`?)r;u?dr;ururW1mVeH#RLrW)lum/[(dciD\ur;u?dr;us&rXSoFrZ_=fegBl5r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXmBfq%EZ=rX\u:rW`?)r;u?dr;ururW0V2q#LBprW)lum/[(dX8r.u
r;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u`op&P$m
rW)ouZN0t*rW)lumf<@fr;rksr;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
`=i.^rX\u:rW`?)r;u?dr;ururW2Qi_>sQ9rW)lum/[(dirI$ur;u?dr;us&rXSoFrZ_=fkpG45r[%Of
rYb\FrW`<&m/[(drWN3)rXAc:rXn'$jq@Y*rX\u:rW`?)r;u?dr;ururW1:EjoGA]rW)lum/[(d^B!Ku
r;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:rW`?)r;u?dr;uru
rW0>*rW2uurW3'$m/[(dVZ?Ysq#L'fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uHgrW)lurWN3)rXAc:
rXm*^rXo,?rXAc1rWN0$m/[(drr<$!rW0>*rW2uur;u?dr;uZmZ2jh)m/[(drW`?3rYb\Zr[%IhasR*6
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?o+KLbrXo,?rXAc1rWN0$pAjpfr;ururW0>*rW2uur;uBe!!)s!
VZ?Ysm/[(drWW?4rso#GrZ_=f`?tR1rZ_=ZrXSo3r;u?dr;us$rW`?1rXSu@rt33_rXo,?rXAc1rWN0$
m/[(drW)ounGpH,rW2uur;u?dr;tsY`W5r=m/[(drW`?3rYb\Zr[$bThBr4JrZ_=ZrXSo3r;u?dr;us$
rW`?1rX\u?h\,)brXo,?rXAc1rWN0$m/[(drW)oublHo,rW2uur;u?dr;s\5l2^bam/[(drW`?3rYb\Z
r[#N1!%%XkrZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?`=i.^rX\u:!!`H-rWN0$m/[(drW)ouZN0t*rW)lu
m/[(dVZ?Ysp]1!fr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uEfrrE!!rWN3)rXAc:rXm*^rXo,?rXAc1
rWN0$m/[(drW)ouZN0t*rW)lum/[(do`2;ur;u?dr;us&rXSoFrZ_=fq^0K5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn]6e.V`mrX\u:rW`?)r;u?dr;ururW1pWe,]IKrW)lum/[(dd/_bur;u?dr;us&rXSoF
rZ_=ff-]r5r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXmEgp_*Q<rX\u:rW`?)r;u?dr;ururW0Y3p]19o
rW)lum/[(dXT84ur;u?dr;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3rW3'$m/[(drWN3)rXAc:rXm*^rXo,?
rXAc1rWN0$q#L'fr;ururW0>*rW2uur;uHgrW)luVZ?Ysm/[(drrrH-rXSoFrZ_=f`?tR1rZ_=ZrXSo3
r;u?dr;us$rW`?1rso)?rXm*^rXo,?rXAc1rWN0$m/[(drW)ouo)QT,rW2uur;u?dr;u$[_uT`;pAjpf
r;us&rXSoFrZ_=f`?tR1rZ_=ZrXSo3r;uBe!!)s!rWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(drVup!
rrKG+rW2uur;u?dr;uTkZiL%+m/[(drW`?3rYb\Zr[%CfbU3<8rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?
nIj@brXo,?rXAc1rWN0$m/[(drW)ouhZ21,rW2uur;u?dr;t=GfDtjOm/[(drW`?3rYb\Zr[$,Bn0\,\
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?bnBgbrXo,?rXAc1rWN0$m/[(drW)ou])_X,rW2uur;u?dr;s&#
quHZsm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$p]1!f
r;ururW0>*rW2uur;uEfrrE!!VZ?Ysm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:
rXm*^rXo,?rXAc1rWN0$m/[(drW)ounc6N,rW2uur;u?dr;u!Z`;oi<m/[(drW`?3rYb\Zr[$eUh'W+I
rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?i"G/brXo,?rXAc1rWN0$m/[(drW)ouc2cu,rW2uur;u?dr;s_6
klCY`m/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rXAc1rWN0$m/[(d
rW)ouZN0t*rW)p!!!;Nfr;rksr;ucpo`4plrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&n,WFfr;us$rW`?1
rX\u?`=i.^rX\u:rW`?)r;u?dr<!!!!!*!!ZN0t*rW)lum/[(dp&MAur;u?dr;us&rXSoFrZ_=fr$KQ5
r[%OfrYb\FrW`<&m/[(drWN3)rXAc:rXn`7dh;WlrX\u:rW`?)r;u]npAk-nrW)ouZN0t*rW)lumJm4e
r;rksr;u?dr;us&!"T#=rYb\Zr[#N1r[%OfrYb\FrW`<&m/[(drWN3)rXAc:!"o5C`=i.^rX\u:rW`?)
r;u?dr;ururW2Nh_Z9Z:rW)lum/[(diW-sur;u?dr;us&rXSoFrZ_=fkU,.5r[%OfrYb\FrW`<&m/[(d
rWN3)rXAc:rXn$#k7[b+rX\u:rW`?)r;u?dr;ururW17Dk5bJ^rW)lum/[(d^&[Eur;u?dr;us&rXSoF
rZ_=f`?kR2s!@XgrYb\FrW`<&m/[(drWN3)rXAc:rXm*^rXo,?rX8c2rs&H*r;u?dr;ururW0>*rW2uu
r;u?dr;rksr;u`op&P$mrW`?3rYb\Zr[#N1r[%OfrYb\FrW`<&mf<@fr;us$rW`?1rX\u?`=i.^rX\u:
rW`?)r;u?dr;ururW0>*rW2uur;u?dr;uWlZN0q*m/[(drW`?3rYb\Zr[%Fgb9m37rZ_=ZrXSo3r;u?d
r;us$rW`?1rX\u?ne0FbrXo,?rXAc1rWN0$m/[(drW)ouhuM7,rW2uur;u?dr;t@Hf)YaNm/[(drW`?3
rYb\Zr[$/CmjA#[rZ_=ZrXSo3r;u?dr;us$rW`?1rX\u?c4]mbrXo,?rXAc1rWN0$m/[(drW)ou]E%^,
rW2uur;u?dr;s)$qZ-Qrm/[(drW`?3rYb\Zr[#N1r[%OfrYb\FrW`?'!!;Nfr;us$rW`?1rX\u?`=i.^
rX\u:rW`?)r;ucpo`4plrW)ouZN0t*rW)lun,WFfr;rksr;u]npAt3prrrH-rX\uHrZhCh`@(X3rZhC\
rX\u4r<)Efr;us%rW`?1rt#/ArXm*^rXo,@rXAc1rWW6%pAt!gr;ururW2Tj_#XH8rW)lum/[(dj8d*u
r;u]npAt3prW`?4rYkb\r[,T3r[.UhrYkbHrW`<'mK!:gr;us%rW`?1rXf&@`=i.^rXf&;rW`?*r;u]o
pAk-nrVup!rrKG+rW2uur;u?dr;uTkZiL%+pAjpgr<*$'rX\uHrZhChqBsK7r[.UhrYkbHrW`<'m/d.e
rWW9*rXAc;rXnZ5eIqinrXf&;rW`?*r;u]opAk-nrW)ouhZ21,rW2uur;u?dr;t=GfDtjOpAjphr<3**
rX\uIrZ_=gegKr7r[.UgrYthIrWrH*pB('ir;us%rWiE2rXf&@bnKmdrXo,@rXAc2rWW6%pAt!gr;uru
qZ6ZrrW0t<!!3*#rW)frrW)lum/[(dX8r.ur;u]npB(9rrWrK6rYth\r[,T3r[.UgrYthIrWrH*pB('i
r;us%rWiE2rXf&@`=r4_rXf&;rWiE+r;u`p!!2for;uruqZ6ZrrW0t<rW2uuqZ6Zrr;uEfrrE!!VZ?Ys
pAjphr<3**rX\uIrZ_=g`@(X3rZ_=\rX\u6r<2irpAt3orWW9+rXAc;rXm*_rXo,@rXAc2rWW6%pAt!g
r;uruqZ6ZrrW2lrb5hMBrW)frrW)lum/[(dirI$ur;u]npBUX&rX8]>rZ1tar[@aqlm^jAr[Rmqr[%Oa
rY5>>r<W-&o*,*trX8]9rY,8Di"bAhrY#2DrX\u9rW_rto)SakrW2lrqZ5CNnc8OfqZ-TrrW8hpgApsQ
r<WB1rY5>Pr[%Olr[Q)?r[Rmqr[%OarY5>>r<W-&o*,*trX8]9rY,8D`>/@brY,8ArX8]0o*+^crW<'"
qZ-Kob5hD?qZ-TrrW<'!JcPfNpBUX&rX8]>rZ1tar[@aqb:3E?r[@alrZ1tPrX8Z1pBUNuq??j&rX8]9
rY,8D`>/@brY,8ArX8]0o*+^crrN0%rW2lrqZ4k?qZ6QorW3!"g&RoKpBpj,rXJi@rYth]q'O-/rZhC]
rY5>@r<r?,o*#$srWrK3rX\u@o+BF`rY#2@rXAc3rW_rsn,`LirW3!"^B+<8rW3!"n,`:aPQ:Fbr<rT6
!#5GIrYth]^F&q)rYthNrXJf6pBpKprW`?-rXAc:!##;E`=`(^rX\u:rWrK-o*"O`rW<'"rW;fpaT;AB
rW3!"n,_#=\,c71r<rT6rY5>NrZgMOgEunErYthNrXJf6pBpKprW`?-rXAc:rY"*#k7R\+rX\u:rWrK-
o*"O`rW<'"rW:OLm/d1frW3!"n,]`ng]7'Ur<rT5rXf&FrYkbTrZ00%rZ(tXru:qUrYPPFrXA`5pBpWt
q??j'rX/N2`=;\QrX&W1rs/B(pB9jaqZ?`trW:7DrW<'"qZ?KmpAp3Q!!)a#r<rT5rXf&FrYkbTrZ00%
rZ1tWrYkbPrXf&;r<r?,q#p^#q??j'rX/N2`=;\QrX/W0q??Trn,`LhqZ?`trW:7DrW<'"qZ?-ck5_=Y
pBpj,rXAc;rYPPPrYthWrZ'3'rZ1tWrYkbPrXf&;r<r?,pB:<rrWiE0q[E$)e.)9`rX/W0q??Trm/d(c
rW3!"liH#FrW<'"qZ?-c_Z7dYo*>7$rX/W7rX[Kjlk04-rXSo7rX&0$o*,!rrWrK0b6mnLrX&Q0qZl]r
o)Sak\H):&rW;0]rW9;(rW)p!o)S@erX&Q2rXSo<^CgGUrXSo7rX&Q/p':0mqZm*+rX$=HrX&Q0qZlct
rrquorW92%rW;Edq>gKrXT8>%o)S@ers8Z3rX/W7rXZaUrX\u<rX/W2o*=jjqZm*+rs8Z3^C'rHrWrB+
o*+^crW;Qh^&\-6jT,8]k5`O&rW;Zko*>7$rX/W7rXZaUrX\u<rX/W2o*>$oquus&rWrK0^C'rHrWrB+
o*+^crW3'"XoSG&jT,8]pAhZ&rW;Zkm/m7irW`*#aT_YJrWMTil2gkemK:l>rWMKem/[+drW;0]gAq3S
rW0/%aoLf1rWN3)dfo+BrW`?)m/lPRrWL@Gp&k9sl2g8PrW3!"_#XK8rW<'"M?*&Em/m7irW^+@rW`?)
pB('jl2gke^B=H<lN$tdm/[+drW9h7rW<'"jT(JEn,`CerW9h8rW:FIV#fEQJcN7[l2gkcjoO0:rW9/%
aT8sQJcOO*l2gkc_?'W:rW7lVm/`LQJcLB&JcLB&JcLB&[K(mZJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcNmmJ,~>

%%EndBinary
grestore
np
grestore
gsave
117.75 149.625 mo
90 149.625 li
90 148.875 li
117.75 148.875 li
117.75 149.625 li
clp
89.19 150.51 mo
118.51 150.51 li
118.51 148.19 li
89.19 148.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 89.19 61.49 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!X9,P+seQ_-71&d-71&d-71&d-71&d-7'iR%L)t7!!!!!!!!!#"q;Fn,pjrc-71&d-71&d-71&d
-71&d,p=-8"p+c)!!!!!!!!$&%2U*1,U4NY,9nEX,9nEX,9nEX,9nHX*u>@h!<<*"!!~>
<~!!!!!!X&]9%hTEe&eYfi&eYfi&eYfi&eYfi&ePW_"p=u-!!!!!!!!!#"9o8G&J>]h&eYfi&eYfi&eYfi
&eYfi&J,?T"9JQ'!!!!!!!!!""q(qP&J5Te&J5Te&J5Te&J5Te&J5Tc%grRB!!!!!!!~>
<~!!!!!!WW6$!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!<<0$!!!!!!!!!#!!**#!<<*"!!!!!!!!!!!!!!!
!!!!!!<<-$!!3-#!!!!!!!!!#!<<*#!<<*"!!!!!!!!!!!!!!!!!!$#!!!$$!!!!!!!~>
<~s8W-!s7kp7cH4,Ia2c6@a2c6@a2c6@a2c6@a2uW]lhLM[s8W-!s8W-!q!?b]aiMQEaN2HDaN2HDaN2HD
aN2HDaj8`.q#CBos8W-!s8W)omG648bKJ)PbKJ)PbKJ)PbKJ)PbKJ)RdbX<drr<#urr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
94.5 149.25 mo
112.5 149.25 li
112.5 98.85 li
94.5 98.85 li
cp
/218096728.0 /Pattern get_res
[.999988 0 0 -.999988 0 192.5 ]make_pattern set_pattern
ef
2 vmreclaim
94.5 149.25 mo
112.5 149.25 li
112.5 98.85 li
94.5 98.85 li
cp
.0127258 .270508 .324951 0 cmyk
@
gsave
149.25 155.75 mo
121.5 155.75 li
121.5 149.625 li
149.25 149.625 li
149.25 155.75 li
149.25 148.875 mo
121.5 148.875 li
121.5 142.25 li
149.25 142.25 li
149.25 148.875 li
clp
121.19 156.01 mo
149.51 156.01 li
149.51 141.99 li
121.19 141.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[28.32 0 0 14.02 121.19 55.99 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 58 
/M[118 0 0 -58 0 58 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4Z
JcLB&JcLB&JcMJEiW7[4dfB@Jg]6C8rW/_nJcNai^&e-4dfB@J^B"66r;_ELJcP$8\H1[inc8Xi^B"66
f`6U(PQ:[`rW;s"qZG"DqZQm"rW1[PqZHBje,oLLec>[MqZ?!^h#R<RrW02&\,cL/rW;s"f)tIDqZQm"
rW1[PqZG+Fp]C<pec>[MqZ=_:qZ?`tMZDN4rW3!"qZOk?qZQm"rW2lrhZ3NU`<,o=li?>OrW2lt`;oc:
rW2-]JcGcNrW3!"qZOk?qZQm"rW1[Prr`3%`<,o=ec>[MqZ?ZqaoM;?rW0k9[K,n!rW<'$rW`?-^BslF
rW`?(rW;?bquHTqrWE-&^BOT>rWE$!jT,8]!!)osrW0b6rW2lrrW;0]rW;fo[fHC/jT,8]rWE-(rWr6)
aU.qPrW`?(rW;0]qZ?a!rWMWmdKTUQrWE$!jT,8]qZ-TrjT+$8rW2lrrW;0]rW:OKgAq3SjT,8]rWE-(
rWpsZm0WatrW`?(rW;0]qZ?a!rWL@Ip'(EurWE$!jT,8]qZ-Tr_#XK8rW2lrrW;0]rW98'rrE$"klCY_
rW<'(rXJi=rY*6brY,8CrXJi3rW<$!m/Zt`rWE-(rWrK1rX$aTrX&Q2rWrK-rWDutp]0X\qZ6ZrrW11B
rW2uuqZ5dYM#dJTrW<'(rXJi=rY*6brY,8CrXJi3rW<$!m/Zt`rWE-(rWrK1rX$aTrX&Q2rWrK-rWDut
irJrWrW)ourW(4DrW2uuqZ4M5XT8;#rW<'(rXJi=rY+N1h%]i%rXo,=rWiE(r;l9cq>pQtrW`?-rX/W2
isP#XrX&Q2rWrK-rWDutirJrWrW)oug&U[DrW2uuqZ35fd/a+GrWE-,rY,8LrZ&lurZ(nUrY,8<rWE*"
klC\arWW9,rX8]7`=DkVrX8]2rWW9&iW/`S^B"$0qZ)3Jo`4pkrWE-,rY,8LrZ&lurZ(nUrY,8<rWE*"
n,W:brW<'&rWrK2rXHgVrXJi7rWrK,rW;*[!!)cp^B"$0f)V6>r;lm"rX/W<rYkbUr#X!%rZ(nUrY,8<
rWE*"klC\arWW9,rX8]7o+'4ZrXJi7rWrK,rW;Zkn,W4a^B"$0k5^_Ho)\go!"T#=rYYVWq]j91q]l(_
rYYVErWVBarW<'(rXAc;!"\u<b7a[_rXf&;rWiE(o)\F_rW<'"qZ-TrrW)ltcN4"FrW2lrrW3!"`W3LK
o)\gorXSoErZM(_lQtL9q]l(_rYYVErWVBarW<'(rXAc;q[_[!l4Wt)rXf&;rWiE(o)\F_rW<'"qZ-Tr
rW(UPo)\gjrW2lrrW3!"U&`sKo)\gorXSoErZM(_b9d*3s!.LcrYYVErWVBarW<'(rXAc;q[^j_q[`Z;
rX8c3rs/N)o)\F_rW<'"qZ-TrrW(+BrW)ouqZ-TrrW<#uJcGcNpB(9rrWrK7rYkbZ^F&q'rYkbIrWrH*
pB(-krrN'"rWW9,rXJi;^CgGUrXJi4rWW6%pAt!gr;urup]10lb5hD?o`4plm/[(do`2;ur;u]npB(9r
rWrK7rYkbZpa4'/rZV7ZrXf&7r<2irpAt3orWW9,rXJi;mh*qZrX\u;rWrK,r;u]opAk-no`4jili>rD
qZ6?ir;u?dr;t@Hf)YaNpAjphr<3**rXf&IrZTc<lmD]TrYkbIrWrH*pB('ir;us%rWrK4rX[0aob%06
rXJi4rWW6%pAt!gr;uWlqZ4k?rW3!!o`4plm/[(dXT84ur;u]npBUX&rX8]>rZ1taq^BW;q^DFirZ1tP
rX8]2!!r<(o*,*trX8]9rY,/Ab8'merY,8ArX8]0o`b@!o)SakrW2lrrW2uub5qSBrW2lrrW3!"li<1K
pBUX&rsJf7rY5>Pr[%Fib:<B;r[%OarY5>>r<W-&o*,*trX8]9rt>AGq\%'eq\&lArX\u9rW_rto)Sak
rW2lrrW2uurrL@FrW)ouqZ-TrrW:.@[K-%,r<WB1rY5>Pr[%Fib:<B;r[%OarY5>>r<W-&p]^R!rW`?0
rX\uAq\%'eq\&lArX\u9rW_rto)Sak!!3*#qZ-TrrW(+BrW)ouqZ-TrrW:^PV?$>tr<rT6rY5>NrZh.a
aX7!3rYthNrXJf6pBpKprW`?-rXAc:rY"`5eIhcnrX\u:rWrK-o*"O`rW<'"rW;0^gB%9TrW3!"n,^B+
aoM/Cr<rT6rY5>NrZfl=m3_fWrYthNrXJf6pBpKprW`?-rXAc:rY!Hfq%<T=rX\u:rWrK-o*"O`rW<'"
rW9n:rrN*#rW3!"n,]*\mJutgr<rT6rY5>NrZf0)rZhC]rY5>@r<r?,o*#$srWrK3rX\u@`=`(^rX\u:
rWrK-oE5-sn,`LirW3!"^B+<8rW3!"n,`=bP5t=ar<rT5rXf&FrYkbTrZ00%rZ1tWrYkbPrXf&;r<r?,
pB:<rrWiE0rXAc7`=;\QrX/W0q??Trm/d(crW3!"rW1:FrW<'"qZ?-ceH!&YpBpj,rXAc;rYPPPrYthW
ll=q'rZ1tWrYkbPrXf&;r<r?,pB:<rrWiE0q[DBljph1rrX/W0q??Trm/d(crW3!"g&^aFrW<'"qZ?-c
YlNMYpBpj,rXAc;rYPPPrYthWb8gL%rYthTrYPPFrXA`5pBpWtq??j'rX/N2`=;\QrX/W0q??Trm/d(c
rW3!"b5qSDrW2ltp]:'hN<&tYo*>7$rX/W7rXZaUrX\u<rX/W2o*>*qq??a$rWrK0^C'rHrWrB+o*+^c
rrN0%XT8>%jT,8]q#If&rW;Zko*>7$rX/W7rX\f:`tA:]rXSo7rX&0$o*,!rrWrK0n-[MLrX&Q0qZl]r
o)SakXT8>%l2^_^rW92%rW;Zko*>7$!"/`5rXSo<^CgGUrXSo7rX&0$o*,!rrWrK0!"-LKrX&Q0qZl]r
o)SakmJt$&rW;0]rW;0]aT2;Ao)S@erX&Q2rXSo<jUp5ZrX\u<rX/W2o*=jjqZm*+rX%?ej9kkmrWrB+
o*+^crW:4Bj8f/\jT,8]_#Wj&rW;Zkm/m7irW^1BrrrB+rWMTil2gke^B=H<r;l<em/[+drW9h7rW<'"
pAfdF!!)BfrWN3)^BOT@rWMTiq#U$erWKt<rWMKen,WFfrW3!"^B"67rW1IJV#]larWN3)p]\_BrW`?)
m/lPRrWMZld0'@Nl2g8PrW3!"joF*8rW<'"Y5lZEl2gkce,en:rW8MhgB"5QJcP0<l2gkc^B+<8o`9XF
rrIcQOoY"Qq>pQs^B+<8d/g$DhZ/6.[K(mZJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcPfNJ,~>

%%EndBinary
grestore
np
grestore
gsave
149.25 149.625 mo
121.5 149.625 li
121.5 148.875 li
149.25 148.875 li
149.25 149.625 li
clp
120.69 150.51 mo
150.01 150.51 li
150.01 148.19 li
120.69 148.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 120.69 61.49 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!<`iJ+!MmS,U=W\,U=W\,U=W\,U=W\+sJ*F%0Q\3!!!!!!!!!#"qDIm,UF`_,pai`,pai`,pai`
,pai`,Tmp6"p+c)!!!!!!!!$&%2U*1+s\EZ,U=W\,U=W\,U=W\,U=QX*u>@h!<<*"!!~>
<~!!!!!!!*93%hB0_&J5Te&J5Te&J5Te&J5Te%hB0Y"p"](!!!!!!!!!#":,DG&J5Te&J5Te&J5Te&J5Te
&J5Te&Io3T"9JQ'!!!!!!!!!""q(qP%hTBc&J5Te&J5Te&J5Te&J5Na%grRB!!!!!!!~>
<~!!!!!!!30$!!*'#!<E3%!<E3%!<E3%!<E3%!!*'"!<N6$!!!!!!!!!#!!!!!!<E0#!!!!!!!!!!!!!!!
!!!!"!<<*"!!3-#!!!!!!!!!#!<<*#!!**$!<E3%!<E3%!<E3%!<E0$!!!$$!!!!!!!~>
<~s8W-!rqYs<d`p"ZbKJ)PbKJ)PbKJ)PbKJ)Pbg"SmmJ6b]s8W-!s8W-!q!?e_b/qcIaiVZHaiVZHaiVZH
aiVZHb0\r1q#CBos8W-!s8W)omG648bfe2QbKJ)PbKJ)PbKJ)PbKJ,SdbX<drr<#urr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
126 149.25 mo
144 149.25 li
144 145.434 li
126 145.434 li
cp
/218096728.0 /Pattern get_res
[.999988 0 0 -.999988 0 192.5 ]make_pattern set_pattern
ef
2 vmreclaim
126 149.25 mo
144 149.25 li
144 145.434 li
126 145.434 li
cp
.0127258 .270508 .324951 0 cmyk
@
gsave
180.75 157.25 mo
153 157.25 li
153 155.75 li
180.75 155.75 li
180.75 157.25 li
clp
152.19 158.01 mo
181.51 158.01 li
181.51 154.99 li
152.19 154.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 3.01999 152.19 53.99 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 4 
/M[39 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
180.75 155.75 mo
153 155.75 li
153 149.625 li
180.75 149.625 li
180.75 155.75 li
180.75 148.875 mo
153 148.875 li
153 145.25 li
180.75 145.25 li
180.75 148.875 li
clp
152.69 156.11 mo
181.01 156.11 li
181.01 144.99 li
152.69 144.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[28.32 0 0 11.12 152.69 55.89 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 46 
/M[118 0 0 -46 0 46 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4Z
JcLB&JcLB&JcMSHhZ;7.f`;!Pf`9t2rW/hqJcNjl])h^.f`;!P\H)U0!!%TNJcP-;ZN9.fo`4sl\H)U0
g]2p+OT=qQ_?&<irW2?cc2dhE\,_*\aT1o5rW<'$rWW9(rW^sXmfi[prWN3(rWE-$iW9#[rWN3%rWURK
p]CEurW<'%rW;Qin,W=eqZ+S:qZ-KphZ3WWZN0t+n,W%\rW<'$rWW9(rW^=FrW`?)rWW9'rW<'"jT5>^
rWN3%rWU7BrWW9&rWN3%ncAakn,W=eqZ+S:qZ-KpklCGXrW9D+rW;Qho)\jm!!<-%rWW9(rW^=FrW`?)
rWW9'rW;'[rW<'%rrN0%rWU7BrWW9&rWN3%n,`"YqZ?WpquY"BqZ-KphZ3WWl2\s,rW;Qho)emorWW9/
rX?ONrXAc6rWW9(o)e[fquQcurWE-(rWU%@rWW9*rWE-$o)\:[quH]s^B"66cN'gBo)emorWW9/rXAN1
aUS4XrX8]/rWMfoo)\glrWE-(rWV]odK][SrW`?(rW;Zll2^eajT+$8rW0&"aoM#7rWN3(rX8]6dgb[R
rXAc6rWW9(o)eLarW<'$rW`?*ap.PDrWW9*rWE-$o)\+VrW0h8rrE$!LB-`BpBUX&rX8]:rY>DN^E*:l
rY>DDrX8Z1pBU9nrWrK0rX/W7^CU;RrX/W2rWr-"!!VrorW;iqrW'n=rW)]orW;BcP5t=^r<WB1rXf&D
rYiNlrYkbNrXf&:r<W-&o*,+!rX&Q2rXQ[RrXSo7rX&Q0o*+^crW;iqrW)fsb6%YCp]:?q`rNRKpBUX&
rX8]:rY>DNjrN.rrYkbNrXf&:r<W-&o*,+!rX&Q2rXR`pit),!rX/W2rWr*!o)Sakp]:?of)kCBrW)]o
rW8hpgApsTr<rT6rY5>PrZf9,r[.UhrZ1tPrXJf6pBpKprW`?-rXJi<^CgGVrXJi4rW_rsn,`Cf\H2R/
qZ6BkN<&tYpBpj,rXJi@rZ1t_^F&q)rZ1tPrXJf6pBpa"q?6d%rWrK4rXcgVrXf&<rWrK-o*"Ra!!2ru
\H2R/n,__QU]C,rr<rT6rY5>PrZh4ca!Ud1rZ1tPrXJf6pBpKprW`?-rXJi<n.F"ZrXf&<rWrK-o*"O`
qZ=;/qZ?6fp]-NYpBpj,rXAiArtPGPrZf0)rZhC^rY5>@r<r?,o*#$srX&Q5rX]&A^_-PWrXJi5rW_rs
h#X\[e,ZuYpBpj,rXJi@rZ(n^jX/_/rZhC^rY5>@r<r?,o*#$srX&Q5rXdisj:VA&rXJi5rW_rs\H1.[
YQ3GYpBpj,rXJi@rZ(n^_']1/rZhC^rY5>@r<r?,o*#$srX&Q5rXcgVrXf&<!"&Z3rW_rsPl^U[MuWhX
pBUX&rX8]:rYGJO^E*:lrYGJErX8Z1pBUKtqZZs)rX&Q3rXQ[RrXSo8rX&Q0o*+^crW<'"p]/87p]19o
rW:aQV#^5pr<WB1rXf&ErYkPPa;t6urYGJErX8Z1pBU9nrWrK0rX8]8mgmeVrXSo8rX&Q0o*+^crW<'"
p]0O[h#d?OrW3!"[/e;KpBUX&rX8]:rYGJOe/dlrrYkbOrXf&:r<W-&o*,+!rX&Q3rXR*^oah$3rX8]3
rWr*!o)SakrW2co`<,f7rW3!"OT=bKo)emorWiE0rX?ONrXAc5rWiE*rW;cpo)\glp]\D:p]^Wuo`>'n
m/["a^B"-3joCPEo)epp!!N9+rX/W5^CC/NrX/W0rWMfoo)\glq#pa%^BXH:rW;Zlm/["aq#JG8qZ4P6
[K,n#rWN3*rX/W5^CC/NrX/W0rWMfop]:9nrW;iu^BXH:rW;Zlmf<@fqZ4G3qZ5+FV?$2grW<'$rWW9(
rW`3&bQ[tMrWN3(rWE-$iW9#[rWN3%rWVfneH5^RrW<'%rW;Qim/[+eqZ,g]h?*QSrW95&aoM#6rW<'$
rWW9(rW^pWn-/dqrWN3(rWE-$iW9#[rWN3%rWUOJq#^O!rW<'%rW;Qim/[+eqZ+S:!!)osrW7rWmJuhZ
rW<'$rWW9(rW^=FrW`?)rWW9'rW<$!joPG_rWN3%rWU7BrWW9&rWN3%nGrUjm/[+eqZ+S:qZ-TsjT(JE
o)\glrWE-'rWN3)`<H5FrWN3(rWE-$iW9#[rWN3%rWU7BrWW9&rWN3%n,_nVrW;rsqZ=qBqZ-Ts_#U51
huV=.Y5j.SJcNgk]E.d.MZA>/JcP*:ZN91gJcLB&JcLB&[K(mZJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
!!%N~>

%%EndBinary
grestore
np
grestore
gsave
180.75 149.625 mo
153 149.625 li
153 148.875 li
180.75 148.875 li
180.75 149.625 li
clp
152.19 150.51 mo
181.51 150.51 li
181.51 148.19 li
152.19 148.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 152.19 61.49 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!*-(!sJf1"9\i1"9\i1"9\i1"9\i1"9el1!W`9$!!!!!!!!!!!Wr`9$O[=M$O[=M$O[=M$O[=M
$O[=M$OR1B!WW3#!!!!!!!!$&#S%Ob(Ddl((Ddl((Ddl((Ddl((Ddl('FkBO!<<*"!!~>
<~!!!!!!!*-'!X&N)!<E3%!<E3%!<E3%!<E3%!<`H+!W`9$!!!!!!!!!!!<NH/"pG/6"U,&5"U,&5"U,&5
"U,&5"pG24!<<*"!!!!!!!!!$"9o/?$O[=M$O[=M$O[=M$O[=M$O[=M#mLM7!!!!!!!~>
<~!!!!!!!!'%!!!'%!WiE)!WiE)!WiE)!WiE)!WW3%!WW3#!!!!!!!!!!!!!!"!!!!!!!!!!!!!!!!!!!!
!!!!!!!*'"!!!!!!!!!!!!!!#!<E3$!WiE)!WiE)!WiE)!WiE)!WiE'!<E3&!!!!!!!~>
<~s8W-!s8N&qqYBs_q>'j^q>'j^q>'j^q>'j^q>'mas8N&us8W-!s8W-!rVH0Vn*]W3mdBN2mdBN2mdBN2
mdBN2n+$&HrVuots8W-!s8W)qo]tPphVR,GhVR,GhVR,GhVR,GhVR,Hj6Q@7rr<#urr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
157.5 150.186 mo
175.5 150.186 li
175.5 148.314 li
157.5 148.314 li
cp
/218096728.0 /Pattern get_res
[.999988 0 0 -.999988 0 192.5 ]make_pattern set_pattern
ef
2 vmreclaim
157.5 150.186 mo
175.5 150.186 li
175.5 148.314 li
157.5 148.314 li
cp
.0127258 .270508 .324951 0 cmyk
@
gsave
212.25 156.5 mo
184.5 156.5 li
184.5 155.75 li
212.25 155.75 li
212.25 156.5 li
clp
183.69 157.31 mo
213.01 157.31 li
213.01 154.99 li
183.69 154.99 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 183.69 54.69 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
gsave
212.25 155.75 mo
184.5 155.75 li
184.5 149.625 li
212.25 149.625 li
212.25 155.75 li
212.25 148.875 mo
184.5 148.875 li
184.5 146 li
212.25 146 li
212.25 148.875 li
clp
184.19 156.01 mo
212.61 156.01 li
212.61 145.59 li
184.19 145.59 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[28.42 0 0 10.42 184.19 55.99 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 118 
/H 43 
/M[118 0 0 -43 0 43 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 118 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4Z
JcLB&JcLB&JcLB&JcLB&JcOR+m/ag$q#f:NqZ=M5qZ6`umK)\TrW<'!^B+<6rW;foirK&[\H)U1mJm4e
m/aNqjT5#TqZ=M5qZ?-cn,WFfrW<'!^B+<6rW:aQrW<'!]E%p4m/ZMSncQ`2f`CsOmfCf:qZ?-cm/[+e
rW)']g&_0QrW:aQrW:dRhuN`Xm/ZVWrWN3*rWq![lj<XsrWiE*n,htXrWW'"d0'7Jp]UR"m/c/Gb5qSB
JcP0<n,iRlrWiE.^BslFrWiE*qZ?Hmm/d1ip]SbBp]UR"mfEFhi;h%%g&R99nH&[lrWN3*rWp7FrWrK.
rWM]lm/d1irri0$b6.MBrWVZii;ilYblP6Q[K-"+rWrK0rXJi=rY,8HrY<TlrY>DJrY,8CrXJi5rWr3&
p]^[$qZd$+rX/E.b744SrX/W2qZc`tmf<7crW2lrb5qJ?rW1=FV?$;prWrK0rXJi=rY,8HrY>AIcPHKp
rYGJHrXo,=rX&Q0p':9pqZd$+rX/E.oF9F^p^@'.rX&H+p''^]rW2lrlN,rFqZ-TrWrU9Bp':R&rX&Q5
rXo,CrYGJJfbX/prY>DJrY,8CrXJi5rWr3&p'(<trX&Q2p^>FXr!iE/rX/W2qZc`tl2^eaqZ+e?r;cit
rW.cSmJuqfrX8]8rY#2JrZ1t[`?>.%rZ1tUrY#2?rX/]5pBpKpq[!0/rXJi:`=MqXrXJi7qZufs!!Mlo
qZ?a!rW9h8rW<'$qZ??iq#HTYp'Ud,rXSo?rYb\UrZB*%rZD+[rYb\JrXSo8p'UBoq[!0/rXJi:`=MqX
rXJi7qZucro)\^irWE-$p]8G:rW<'$qZ??ieH!&Yp'Ud,rXSo?rYb\UrZCAIh&u\=rZ1tUrY#2?rX8E,
o*"prrX8]7rXRisjq%G$rXJi7qZucro)\^irWE-$e,en:rW<'$qZ??iYlNMYp'Ud,rXSo?rYb\TrZB*%
rZD+ZrYb\JrXSo8p'UBoq[!0/rXJi:`=MqXrXJi7qZucro)\^iZN9q)rW2]nN<&tYp'Ud,rXSo?rYb\T
rZB*%rZD+ZrYb\JrXSo8p'UX!q?6[$rX8]7rXQmXrXSo:rX8T/o*"XcrrW-#ZN9q)o)\%TU]C)qrX8]8
rY#2JrZ(nZr#j-)rZD+ZrYb\JrXSo8p'UBoq[!0/rXJi:o+0:\rXSo:rX8T/o*"XcqZ=))qZ??ip]-NY
p':R&rWrQ5rs\l>rY3*_rY5>ErXAc4rWr3&p'(F"rWW9+rX8]6!"8f7`=;eSrXAc6rWiE+rW`'"o)SXg
p]1-kbQ7J=qZ4\:\,c4-rWrK0rXAc=rY4H0gD9c&rY#2=rX&Q0p':9prW`?*rWiE1rXAc6h[S`XrX8]6
rX8]1rWW9*p'($fqZ6HlecG7@p]10lU&`sKp':R&rX&Q4rY#2E_&!%drY5>ErXAc4rWr3&p'(F"rWW9+
rX8]6rX6[SrX8]6rX/]2rs/N,rW`'"o)SXgp]/86p]10lr;_EL!!)KirWN3)rWp7FrWrK-rWM]lq#U-h
rW;itb6.MBrW;Hfn,WFfrW;ipb5qA<rW:OKV#]udrWN3)rWr9*a9hhOrW`?)n,htXrW;ito`NeJp]UQt
m/cSSrW;ipliH#Fp]19pY5lZEn,iRlrW`?-e-YIJrWrK-rWM]lm/d1fp]StHqZHTrrW;Hfm/[+ep]/J<
rW)fqrW7uXm/ZVWrWN3)rWp7FrWrK-rWN*"p&aU^rW;itb6.MBrW;NhrrMKerW;ipb5qA<rW;3^OoY"Q
r;j5,f`D!P!!9n9qZ?-cm/[+erW)`p`rZ/>rW:aQrW;HeblI_Em/ZMSZNK7hp&Y$l^B+35m/cYUrrE$"
rW'\6rW)p!f`;!Qr;aM2rW;Hem/c_Z_ZSQmqZ?0ddK04Hm/cSSrW<'!jT4*:rW)p!f`;!Qf`9t2rW8nr
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcN4ZJcM#8J,~>

%%EndBinary
grestore
np
grestore
gsave
212.25 149.625 mo
184.5 149.625 li
184.5 148.875 li
212.25 148.875 li
212.25 149.625 li
clp
183.69 150.51 mo
213.01 150.51 li
213.01 148.19 li
183.69 148.19 li
cp
/1 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 212 ]ct
[29.32 0 0 2.32 183.69 61.49 ]ct
snap_to_device
<<
/T 1
/W 39 
/H 3 
/M[39 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!$$!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!<<*"!!!!!!!!!!!<NE/#6tJ=#6tJ=#6tJ=#6tJ=
#6tJ=#6k>5!<<*"!!!!!!!!$$"pk_L%hK9`&.fBa&.fBa&.fBa&.f?_%1*4?!<<*"!!~>
<~!!!!!!!!!#!<<*"!!!!!!!!!!!!!!!!!!!!!!!$$!!!!!!!!!!!!!!!!!*3)!s8W-!s8W-!s8W-!s8W-
!s8W-!s8Z,!!!!!!!!!!!!!$#"9f#8#7(S@#RC\A#RC\A#RC\A#RCY?#6b52!<<*"!!~>
<~!!!!!!!!!#!!**$!<E3%!<E3%!<E3%!<E3%!<E0%!!!!!!!!!!!!!!!!!!!!!!!$#!<E3%!<E3%!<E3%
!<E3$!!!!!!!!!!!!!!!!!!!!!!!$"!!**$!<E3%!<E3%!<E3%!<E0#!<<*"!!!!!!!~>
<~s8W-!s8W)urVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Nnrr<#us8W-!s8W-!rquTdp@e1Pp%A"Np%A"Np%A"N
p%A"Op@nC\rr<#us8W-!s8W)sq"!h;lKRQtl07Hsl07Hsl07Hsl07KumIL&Nrr<#urr~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
grestore
189 149.826 mo
207 149.826 li
207 148.674 li
189 148.674 li
cp
/218096728.0 /Pattern get_res
[.999988 0 0 -.999988 0 192.5 ]make_pattern set_pattern
ef
2 vmreclaim
189 149.826 mo
207 149.826 li
207 148.674 li
189 148.674 li
cp
.0127258 .270508 .324951 0 cmyk
@
1 /0 /CSD get_res sepcs
1 sep
%ADOBeginSubsetFont: ZAAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZAAAAA+Calibri-Bold
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000566376
74202f49354900000124000006086670676da1ea42ac0000072c00000913
676c79660000000000005a6400000e2e68656164f3195718000010400000
0036686865610dbb0bef0000107800000024686d7478000000000000109c
0000066c6c6f63610000000000001708000020406d6178701cff16dd0000
3748000000206e616d65de3e50870000376800000d5c7072657028b9ff7e
000044c4000015a067646972000000000000000000000000000100000190
000500080000000000000000000000000000000000000000000000000000
00000000000000000000000000080000000000000000000000000000f000
f0ff00000000000000000000000000010000000000000000079e0000fe93
0000000000000000000000810081009c00ab00b500ba00c100ca00d300f3
010a0060008500bf00e300ea00f200fb010001070115011c012900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000fe83056d000d03c0000600170000fffaffe9fea9
ffe90000050e000600170000fffaffe9fe93050e00170426000600170000
fffaffe9ff12ffed050e00170426000600170000fffaffe9fe93feb8fece
060b0010050e0006001002cbfffafff001edfffa023f00060010ff36fffa
fff00287000600100000fffafff0079efeaffe9f00000000000000000000
000000700072007500780079007a007b007d007e007f0083008600870088
00890085007f0086008b008c008d008e008f009000910092009300940095
0096009700980099009a009b009c009d009e009f009200930094009b009c
009e009e00960099009a009d009e00a200a600a900ac00a200a300a400a5
00a700a800a900aa00ab00ac00ae00a300a500a700a800aa00ab00ac00ad
00ae00a000a100a300a600a700a900aa00ac00ad00af00af00b000b100b2
00b300b400b500af00af00b000b200b300b400b500b800c000b600b700b8
00b900ba00bb00bc00bd00be00bf00c000c100c200b900ba00bc00bd00bf
00c000c100c200b600b700b800b900ba00bb00bc00bd00be00bf00c000c1
00c200c000c100c200c300c400c500c600c700c800c900ca00cb00cc00cd
00ce00cf00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf
00c300c400c500c600c700c800c900ca00cb00cc00cd00ce00cf00c500c8
00c900ca00cb00ce00cf00d000d100d200d300d400d500d600d700d900db
00de00df00e000e200e300ec00d000d100d200d300d400d500d600d700d8
00d900da00db00dd00de00df00e000e100e300e500e900ec00ed00d100d3
00d400d500d800d900da00dc00e000e100e800d000d100d400d600e000e4
010800f5010200fb00ff0108008f00900096009200930099009000910097
0098009a009d00a400a600a700a800a900af009a00a200a300a700a900aa
00ab00ac00ad00b000ad009b00aa00ab00ad00b0009a00aa00ac00ad00ae
00af00b100b900bb00bc00bd00be00c100c200c300c400c500c600c700c8
00c900ca00cb00ce00b300b400b500b600b700b800bc00c200c500c800ca
00cb00cd00ce00cf00d000c700b700b800b900bb00bc00be00c600c700c8
00c900cb00cf00d000b200b600b700c200c400c500c600c700cb00cc00cd
00ce00cf00d000d100d400d500d700d800d900da00db00dc00de00df00e0
00e200e300e500e600d100d300d600d700d800da00db00dc00dd00de00df
00e000e100e200e300e400e500d100d200d400d500da00db00dd00de00df
00e000e100e200e600d200d300d400d700d800dd00de00e000e100e200e3
00e400e500e600d200da00e100e900ea00ec00e800e900ea00eb00ec00ed
00eb00e700ea00eb00ec00ed00e700e900ea00ec00ed00ee00ef00f500ee
00ef00f000f100f200f300f400f500f600ee00f000f200ef00f000f100f2
00f300f400f500f600ee00ef00f000f100f200f300f400f500f600f700f7
00f800f900fa00fb00fc00fd00f700f800f900fa00fb00fd00f700f800f9
00fa00fb00fc00fd00fd00fe00ff010001010102010300fe010001010102
010300fe00ff010001010102010301020103010401050106010701080109
010a010c010d010e010f01100107010401050106010701080109010a010b
010d010e010f01100111010401050106010701080109010a010b010c010d
010e010f0110011101040105010601070109010e010f0112011301140115
01170118011a011b011c011d011e011f0121012201120113011401150117
0119011b011c011d011e0120012101230124012501130114011501160117
01180119011a011b011c011d011f01200117011c011d011e012001210129
013001770129012b012e012f013001310134013501370139012b012d0130
01320134013a012e01300134013a014200500062006c00fa05e802cc0114
011400a000b140465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948
47464544434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f
181411100f0d0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b004
2651582320b00d44235921212d2c20204518684420b001602045b0467668
8a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b028
2370b101283e01b0282370b10228453ab10200080d2d2c2045b003254561
64b050515845441b2121592d2c2045b0004360442d2c01b00643b0074365
0a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58
b00361592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c
234445b02b23442d2c4b525845441b2121592d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c00b00743b006430b2d2c21210c6423648bb84000622d2c21b08051580c
6423648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648b
b81555621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c
4523456023456023456023766818b08062202d2cb00426b00426b00425b0
042545234520b003266062636820b0032661658a2344442d2c2045b00054
58b040442045b04061441b2121592d2c45b1302f4523456160b001606944
2d2c4b5158b02f2370b01423421b2121592d2c4b515820b0032545695358
441b2121591b2121592d2c45b01443b0006063b0016069442d2cb02f4544
2d2c452320458a60442d2c45234560442d2c4b235158b90033ffe0b13420
1bb3330034005944442d2cb0164358b00326458a586466b01f601b64b020
606620581b21b04059b001615923586559b02923442310b029e01b212121
2121592d2cb0164358b004254564b020606620581b21b04059b001612358
6559b0292344b00425b00725082058021b0359b0052510b004252046b004
2523423cb0072510b006252046b00425b0016023423c2058011b0059b005
2510b00425b029e0b0072510b00625b029e0b00425b00725082058021b03
59b00425b003254348b00625b00325b0016043481b215921212121212121
2d2cb0164358b004254564b020606620581b21b04059b0016123581b6559
b0292344b00525b00825082058021b0359b0042510b005252046b0042523
423cb00425b0072508b0072510b006252046b00425b0016023423c205801
1b0059b0042510b00525b029e0b02920456544b0072510b00625b029e0b0
0525b00825082058021b0359b00525b003254348b00425b0072508b00625
b00325b0016043481b2159212121212121212d2c02b00425202046b00425
2342b0052508b003254548212121212d2c02b0032520b0042508b0022543
482121212d2c452320451820b00050205823652359236820b040505821b0
4059235865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b
545820458a60441b2121592d2c4b53234b515a58381b2121592d2cb00021
4b5458381b2121592d2cb002435458b0462b1b21212121592d2cb0024354
58b0472b1b212121592d2cb002435458b0482b1b21212121592d2cb00243
5458b0492b1b212121592d2c208a08234b538a4b515a5823381b2121592d
2c0020b200400325b0062649618b3812342d2c0146234660234661232010
20468a61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c
1b21592d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123
018851b1400188535a58b910000020885458b202010243604259b1240188
5158b920000040885458b2020202436042b12401885458b2022002436042
004b014b5258b2020802436042591bb940000080885458b2020402436042
59b94000008063b80100885458b202080243604259b94000010063b80200
885458b202100243604259b94000020063b80400885458b2024002436042
59595959592d2c451868234b51582320452064b04050587c59688a605944
2d2cb00016b00225b0022501b001233e00b002233eb10102060cb00a2365
42b00b234201b001233f00b002233fb10102060cb006236542b0072342b0
0116012d2c20b82000628a6023622d2cb0072558001b0159b0042510b003
25b0022520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920
b005254ab0042547b004254760b0062547b0806361b00225b0005558b003
25b00725496359b0082558001b0159b00425b0062549b009255cb009255a
58b0092b59b0072546b0806361b0032520b0005558631b2159612320b000
5558b080631b21b08059b0592bb006255c586959b00425202010b0004823
3ab0062658001b0159b0052658b003252f598a12233221212d2cb00625b0
0a2587b00625b009254ab0005358b00625b00a251bb00925b0072559b002
25b00225070cb005256323b00625636020b94000040063535821b00426b0
0426b00a1bb94000040063655158b0042665b0042665b00a1bb00426b004
26b000b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525
b0052507595920b0005558b00525b0052587b00725b007250bb0092510b0
0b25b0092620b8ffff545821cd1bed59b00525b0052507b00825b00b2549
23b00625b0062587b00a2510b00b25c15920b00051b800522378b00161b0
0225b00725b0072507b00a25b00d254961b08062b00525b005250bb00a25
2338b00625b0062587b00825b008250bb00a2510b00b25c4b00625b00625
07b00925b00c2549b0032554b8ffa723792121212121212121212121212d
2c23b0005458b9400000001bb900004000598ab0005458b9400000001bb9
0000400059b05b2b2d2c08b0005458b9400000001bb900004000590db05b
2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb0
0426b00426080db00426b00426080db05b2b2d000001000000061eb8b1b0
afba5f0f3cf50019080000000000bbeb7ccc00000000d20670b9fbdafd8d
0a1a0850000100090002000000000000000100000600fe0001c40aa0fbda
fa860a1a00010000000000000000000000000000019b040e0000040e0000
040e000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000001cf000001cf
000001cf000001cf000001cf000001cf000001cf000001cf000001cf0000
01cf000001cf000001cf000001cf000001cf000001cf000006fe008d06fe
008d06fe008d06fe008d06fe008d06fe008d06fe008d06fe008d06fe008d
06fe008d06fe008d06fe008d06fe008d06fe008d06fe008d06fe008d06fe
008d06fe008d06fe008d06fe008d06fe008d06fe008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d0481008d0481008d0481008d0481008d0481008d0481008d0481
008d0481008d0481008d0481008d0481008d0481008d0481008d0481008d
0481008d03f3004703f3004703f3004703f3004703f3004703f3004703f3
004703f3004703f3004703f3004703f3004703f3004703f3004703f30047
03f3004703f3004703f3004703f3004703f3004703f3004703f3004703f3
004703f3004703f3004703f3004703f3004703f3004703f300470407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a0407004a0407004a0407004a0407
004a0407004a0407004a0407004a0407004a0407004a0407004a0407004a
0407004a0407004a0407004a0407004a03cb001b03cb001b03cb001b03cb
001b03cb001b03cb001b03cb001b03cb001b03cb001b03cb001b03cb001b
03cb001b03cb001b01f7006b01f7006b01f7006b01f7006b01f7006b01f7
006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b
01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7006b01f7
006b01f7006b01f7006b01f7006b01f7006b044b007e044b007e044b007e
044b007e044b007e044b007e044b007e044b007e044b007e044b007e044b
007e044b007e044b007e044b007e044b007e044b007e044b007e044b007e
044b007e044b007e044b007e044b007e044b007e044b007e044b007e044b
007e03310049033100490331004903310049033100490331004903310049
03310049033100490331004902c600170000009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e009e009e009e009e009e009e009e009e009e009e009e009e009e
009e009e0162016201620162016201620162016201620162016201620162
016201620162016201620162016201620162021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
021302130213021302130213021302130213021302130213021302130213
02130213021302130213021302130213021302130213021302ff02ff02ff
02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff
02ff02ff02ff02ff02ff02ff02ff02ff02ff02ff03cb03cb03cb03cb03cb
03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb
03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb
03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb03cb
04d104d104d104d104d104d104d104d104d104d104d104d104d105260526
052605260526052605260526052605260526052605260526052605260526
0526052605260526052605260526052605ad05ad05ad05ad05ad05ad05ad
05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad05ad
05ad05ad05ad05ad06800680068006800680068006800680068006800717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
071707170717071707170717071707170717071707170717071707170717
0717071707170717071707170717071707170717071700010000101f0093
00050078000300020010002f006000000c6515a0000200010000002d0222
0000000300000000006400000000000300000001000e0064000000030000
00020008032a0000000300000003002e030400000003000000040018031a
00000003000000050018033200000003000000060018034a000000030000
0007007603620000000300000008002a000e0000000300000009002003d8
000000030000000a02a00064000000030000000b005603f8000000030000
000c002a044e000000030000000d02980478000000030000000e006c0710
00010000000000000032077c0001000000000001000707ae000100000000
0002000409110001000000000003001708fe0001000000000004000c0909
0001000000000005000c09150001000000000006000c0921000100000000
0007003b092d000100000000000800150783000100000000000900100968
000100000000000a015007ae000100000000000b002b0978000100000000
000c001509a3000100000000000d014c09b8000100000000000e00360b04
0003000104090000006400000003000104090001000e0064000300010409
00020008032a0003000104090003002e030400030001040900040018031a
00030001040900050018033200030001040900060018034a000300010409
0007007603620003000104090008002a000e0003000104090009002003d8
000300010409000a02a00064000300010409000b005603f8000300010409
000c002a044e000300010409000d02980478000300010409000e006c0710
00a9002000320030003100350020004d006900630072006f0073006f0066
007400200043006f00720070006f0072006100740069006f006e002e0020
0041006c006c002000520069006700680074007300200052006500730065
0072007600650064002e00430061006c0069006200720069002000690073
002000610020006d006f006400650072006e002000730061006e00730020
00730065007200690066002000660061006d0069006c0079002000770069
0074006800200073007500620074006c006500200072006f0075006e0064
0069006e006700730020006f006e0020007300740065006d007300200061
006e006400200063006f0072006e006500720073002e0020004900740020
006600650061007400750072006500730020007200650061006c00200069
00740061006c006900630073002c00200073006d0061006c006c00200063
006100700073002c00200061006e00640020006d0075006c007400690070
006c00650020006e0075006d006500720061006c00200073006500740073
002e0020004900740073002000700072006f0070006f007200740069006f
006e007300200061006c006c006f00770020006800690067006800200069
006d007000610063007400200069006e002000740069006700680074006c
007900200073006500740020006c0069006e006500730020006f00660020
00620069006700200061006e006400200073006d0061006c006c00200074
00650078007400200061006c0069006b0065002e002000430061006c0069
006200720069002700730020006d0061006e007900200063007500720076
0065007300200061006e006400200074006800650020006e006500770020
00720061007300740065007200690073006500720020007400650061006d
00200075007000200069006e002000620069006700670065007200200073
0069007a0065007300200074006f002000720065007600650061006c0020
00610020007700610072006d00200061006e006400200073006f00660074
0020006300680061007200610063007400650072002e004d006900630072
006f0073006f00660074003a002000430061006c00690062007200690020
0042006f006c006400560065007200730069006f006e00200036002e0031
003200430061006c0069006200720069002d0042006f006c006400430061
006c00690062007200690020006900730020006100200074007200610064
0065006d00610072006b0020006f006600200074006800650020004d0069
00630072006f0073006f00660074002000670072006f007500700020006f
006600200063006f006d00700061006e006900650073002e004c00750063
0028006100730029002000640065002000470072006f006f007400680074
00740070003a002f002f007700770077002e006d006900630072006f0073
006f00660074002e0063006f006d002f007400790070006f006700720061
007000680079002f006300740066006f006e007400730068007400740070
003a002f002f0066006f006e007400660061006200720069006b002e0063
006f006d0059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e00740020006100730020007000650072
006d00690074007400650064002000620079002000740068006500200045
0055004c004100200066006f00720020007400680065002000700072006f
006400750063007400200069006e00200077006800690063006800200074
00680069007300200066006f006e007400200069007300200069006e0063
006c007500640065006400200074006f00200064006900730070006c0061
007900200061006e00640020007000720069006e007400200063006f006e
00740065006e0074002e00200059006f00750020006d006100790020006f
006e006c0079002000280069002900200065006d00620065006400200074
00680069007300200066006f006e007400200069006e00200063006f006e
00740065006e00740020006100730020007000650072006d006900740074
00650064002000620079002000740068006500200065006d006200650064
00640069006e00670020007200650073007400720069006300740069006f
006e007300200069006e0063006c007500640065006400200069006e0020
007400680069007300200066006f006e0074003b00200061006e00640020
0028006900690029002000740065006d0070006f0072006100720069006c
007900200064006f0077006e006c006f0061006400200074006800690073
00200066006f006e007400200074006f002000610020007000720069006e
0074006500720020006f00720020006f00740068006500720020006f0075
0074007000750074002000640065007600690063006500200074006f0020
00680065006c00700020007000720069006e007400200063006f006e0074
0065006e0074002e0068007400740070003a002f002f007700770077002e
006d006900630072006f0073006f00660074002e0063006f006d002f0074
00790070006f006700720061007000680079002f0066006f006e00740073
002f00640065006600610075006c0074002e0061007300700078a9203230
3135204d6963726f736f667420436f72706f726174696f6e2e20416c6c20
5269676874732052657365727665642e43616c696272692069732061206d
6f6465726e2073616e732073657269662066616d696c7920776974682073
7562746c6520726f756e64696e6773206f6e207374656d7320616e642063
6f726e6572732e204974206665617475726573207265616c206974616c69
63732c20736d616c6c20636170732c20616e64206d756c7469706c65206e
756d6572616c20736574732e204974732070726f706f7274696f6e732061
6c6c6f77206869676820696d7061637420696e2074696768746c79207365
74206c696e6573206f662062696720616e6420736d616c6c207465787420
616c696b652e2043616c696272692773206d616e79206375727665732061
6e6420746865206e65772072617374657269736572207465616d20757020
696e206269676765722073697a657320746f2072657665616c2061207761
726d20616e6420736f6674206368617261637465722e4d6963726f736f66
743a2043616c6962726920426f6c6456657273696f6e20362e313243616c
696272692d426f6c6443616c6962726920697320612074726164656d6172
6b206f6620746865204d6963726f736f66742067726f7570206f6620636f
6d70616e6965732e4c7563286173292064652047726f6f74687474703a2f
2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068792f
6374666f6e7473687474703a2f2f666f6e7466616272696b2e636f6d596f
75206d617920757365207468697320666f6e74206173207065726d697474
6564206279207468652045554c4120666f72207468652070726f64756374
20696e207768696368207468697320666f6e7420697320696e636c756465
6420746f20646973706c617920616e64207072696e7420636f6e74656e74
2e20596f75206d6179206f6e6c792028692920656d626564207468697320
666f6e7420696e20636f6e74656e74206173207065726d69747465642062
792074686520656d62656464696e67207265737472696374696f6e732069
6e636c7564656420696e207468697320666f6e743b20616e642028696929
2074656d706f726172696c7920646f776e6c6f6164207468697320666f6e
7420746f2061207072696e746572206f72206f74686572206f7574707574
2064657669636520746f2068656c70207072696e7420636f6e74656e742e
687474703a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f67
72617068792f666f6e74732f64656661756c742e61737078b10903b802f9
b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e
2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1f
b802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802
ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b2
1e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e09
1fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb8
02dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802db
b21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d
2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1f
b802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802
ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab2
1d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f
1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb8
02c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bd
b21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d
2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1f
b802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802
b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb2
1c331fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c32
1fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb8
02a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029f
b21c331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c
311fb8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321f
b80296b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb802
92b21c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb2
1c311fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c32
1fb80289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb8
0285b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281
b21b341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b
341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341f
b80278b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb802
74b21b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b2
1b341fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a35
1fb8026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb8
0267b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263
b21a351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a
351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351f
b8025ab21a351fb80259b219371fb80258b219371fb80257b219371fb802
56b219371fb80255b219371fb80254b219371fb80253b219371fb80252b2
19371fb80251b219371fb80250b219371fb8024fb219371fb8024eb21937
1fb8024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb8
0249b219371fb80248b219371fb80247b219371fb80246b219371fb80245
b219371fb80244b219371fb80243b219371fb80242b219371fb80241b219
371fb80240b219371fb8023fb219371fb8023eb219371fb8023db219371f
b8023cb219371fb8023bb219371fb8023ab219371fb80239b218391fb802
38b218391fb80237b218391fb80236b218391fb80235b218391fb80234b2
18391fb80233b218391fb80232b218391fb80231b218391fb80230b21839
1fb80301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8
022cb218391fb8022bb218391fb8022ab218391fb80229b218391fb80228
b218391fb80227b218391fb80226b218391fb80225b2173b1fb80224b217
3b1fb80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1f
b8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb802
1bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2
173b1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b
1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8
020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020a
b2173b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b217
3b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1f
b80201b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801
fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2
173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b
1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb8
01f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ec
b2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b217
3b1fb801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371f
b801e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801
dfb216441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb2
16461fb801dab216461fb801d9b216461fb801d8b216231fb801d7b21623
1fb801d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb8
01d2b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ce
b216461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216
231fb801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381f
b801c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801
c1b216461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb2
16461fb801bcb216461fb801bbb216461fb801bab216371fb801b9b21638
1fb801b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb8
01b4b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0
b216451fb801afb216451fb801aeb216461fb801adb216461fb801acb216
461fb801abb216461fb801aab216461fb801a9b215341fb801a8b215411f
b801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801
a3b215521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2
154f1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d
1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb8
0196b215501fb80195b215521fb80194b215521fb80193b215521fb80192
b215411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215
511fb8018db215521fb8018cb215521fb8018bb215521fb8018ab214581f
b80189b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb801
85b2145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140
af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b
561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561f
ab0b561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b
561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f
990a681f980a681f970a681f960a681f950a681f940a681f930a681f920a
681f910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc
02fa0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174
b212371fb80173b211421fb80172b211421fb80171b211421fb80170b211
421fb8016fb211421fb8016eb211421fb8016db211421fb8016cb211421f
b8016bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb801
3ab210421fb80139b210421fb80138b210421fb80137b210421fb80136b2
10421fb80135b210421fb80134b210421fb80133b210421fb80132b20f45
1fb80131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb8
0110b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010c
b20e481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e
481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb
0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e
1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb
0b561fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb8
0179b211421fb80178b211421fb80177b211421fb80176b211421fb80175
b211421fb80143b211421fb80142b210421fb80141b210421fb80140b210
421fb8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451f
b80114b20f451fb80113b20f451fb903030302b2401fa4be030200b40302
00c4030200030300b213321fb8017bb213321fb80153b212371fb80152b2
11401fb80151b211401fb80150b211401fb8014fb211401fb8014eb21140
1fb8014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb8
0149b211401fb80148b211401fb80147b211401fb80146b211401fb80145
b211401fb80144b211401fb80122b211401fb80121b210421fb80120b210
421fb8011fb210421fb8011eb210421fb8011db210421fb8011cb210421f
b8011bb210421fb8011ab210421fb80119b210421fb80118b20f451fb801
17b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff9
0e481ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a
1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe1
0c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e
1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb5
0b561fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8
017cb212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166
b211401fb80165b211401fb80164b211401fb80163b211401fb80162b211
401fb80161b211401fb80160b211401fb8015fb211401fb8015eb211401f
b8015db211401fb8015cb211401fb8015bb211401fb8015ab211401fb801
59b211401fb80158b211401fb80157b211401fb80156b211401fb80155b2
11401fb80154b211401fb8012fb211401fb8012eb210421fb8012db21042
1fb8012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb8
0128b210421fb80127b210421fb80126b210421fb80125b20f451fb80124
b20f451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f
451fb80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e
481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1f
d00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f8248
805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab
7ddb7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c
764875555475e475f4750314755475647574759475d475e47507a475b475
c47503b8ffc0401275383b46807590750214757475020075010fb8ffc040
21750b0e467448725573ab725504723472023bf47201e072010230720150
72607202b8ffc0b372242846b8ffc0403572161a46107230724072037148
6f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f09
0d466e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe0001
00ef02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab64
55632e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e585557
03251f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b
554cab4b554a2e485549ab4855504801472e46554503361f001f01001e01
001e701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b01
0f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f19
8f199f19030c7012801202701180110230114011d011e011040011a01102
0f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f
0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f
0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c26
2946ef0aff0a02400a242746ef09ff0902ff090100030120010100011001
20010308b8ffc0b401151f4603bd0100010000050001019000542b4bb807
ff524bb008505bb00188b02553b00188b040515ab00688b000555a5b58b1
01018e59b101024354b0144b515a58b101018e59858d8d001d424bb01d53
58b203a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d
42592b5e73757373742b732b73742b2b73745e732b5e7374757374755e73
747573015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b
2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b7374
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b185f5e00>
[3631 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> ZAAAAA+Calibri-Bold AddT42Char 
1 316 68 <0001008dfffa0671050e003c00d9b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
4ded3232323f012fd4ed32113310ed32113311393d2f3333113331301bb5
3651190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c
17101023024c0d101023024c0d172f30312e061f28511f55125505550018
3f3f3f3f1217392b2b2b2b1a4ded3232323f31305925140e0223222e0235
1123010e0323222e0227012311140e0223222e02351134363333321e0217
0133013e033333321e021506710b1d302524301c0c02fe8904121f302222
301f1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f
293825b11b27190d240a100a06060a100a041dfbe40d110a03050b100b04
1cfbe30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b27
1900>ZAAAAA+Calibri-Bold AddT42Char 
1 708 90 <0002008dfffa044d050e00360044009db10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1a4ded2b12392fed2b39012fed32d4edd4ed1112393931301bb12e10b8ff
e8b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b64021
511755055500183f3f3f1a4ded2b12392fed2b3931305925140e0223222e
0227032e03232311140e0223222e023511343633213216171e0315140e02
071e031717161601342627262623231133323e02044d081e3a322a321d0c
0474152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e
3c1d332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b11
0c0121314c331afe130a100a06060a100a04972c2704030b3657774d416b
543e130e2839492eff262303644058120506fe911b314400>ZAAAAA+Calibri-Bold AddT42Char 
1 1062 258 <00020047ffe9037603d7003300400129b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f
5f5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed32393130
1b400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e
412ab80118401be02201037d228d2202402250226022030f221f22020c04
2222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe840091001
4d3de4400c4d0400182f3f1a4ded2b3fed2b2b12392f5f5e5d5d5d5f5ded
1112392f2b5d71ed5d7131305925140606232226263535060623222e0235
343e02333335342e0223220e0223222e0235343e0433321e02150723220e
02151416333236370376142b2a2d2911378d56477757303d79b477571127
41303f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35
592e1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a
26171f241d231e132955865cda122433213840363400>ZAAAAA+Calibri-Bold AddT42Char 
1 1534 286 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>ZAAAAA+Calibri-Bold AddT42Char 
1 1942 336 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>ZAAAAA+Calibri-Bold AddT42Char 
1 2466 349 <0002006bfffa018d054e001500210045b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61a4ded012fedd4ed31
301bb9001f017bb540191049054c00183f3fd61a4ded31305925140e0223
222e023511343e0233321e0215131406232226353436333216017a0c1d30
2525301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f
0a037a0a0f0b06060b0f0a01304c3a38494c3b39>ZAAAAA+Calibri-Bold AddT42Char 
1 2636 374 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>ZAAAAA+Calibri-Bold AddT42Char 
1 2906 400 <00010049ffe902f203d7004900e9b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1a4ded5f5e5d2b3f123939ed2b5d
1139392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed31301b402004
2e012ee4370b0a010ae71137400b014d10372037020337113711160f3c01
3cb8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f2
40054d00183f1a4ded5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed
5d10ed5d31305901140e0223222e0435343e0233321e0233323e0235342e
0635343e0233321e0615140e0223222e0223220e0215141e0602f239688e
53325b4830160c04080c090b2b40553622352714253d4d514d3d25325e87
542a4f402c1308040303070c080926394b3022322010263e4f514f3e2601
1e4c744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a
3f406b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c
4059>ZAAAAA+Calibri-Bold AddT42Char 
1 3328 410 <00010017ffec028e04b1003a0093b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1a4ded3fed2bcd3fed2b01
2f33fd32c4321112392f31301bb9002dffe8b40b0f014c2db8011fb32348
1d0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1a4d
ed3fed2bcd3fed2b31305925140e0423222e02351123222635343e023333
35343e0233321e02151533321e02151406232311141633323e0233321e02
028e0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a
0f0a051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c9
2f371d28170ac70a100b05050b100ac70a17281d372ffe5d494907090707
1524>ZAAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>ZAAAAA+Calibri-Bold AddT42Char 
ZAAAAA+Calibri-Bold /CharStrings get begin
/g3 3 def
/g68 68 def
/g90 90 def
/g258 258 def
/g286 286 def
/g336 336 def
/g349 349 def
/g374 374 def
/g400 400 def
/g410 410 def
end
ZAAAAA+Calibri-Bold /Encoding get
dup 32 /g3 put
dup 77 /g68 put
dup 82 /g90 put
dup 97 /g258 put
dup 101 /g286 put
dup 103 /g336 put
dup 105 /g349 put
dup 110 /g374 put
dup 115 /g400 put
dup 116 /g410 put
pop
end
%ADOEndSubsetFont
/NLZWPR+Calibri-Bold /ZAAAAA+Calibri-Bold findfont ct_VMDictPut
/NLZWPR+Calibri-Bold*1 
[32{/.notdef}rp /g3 44{/.notdef}rp /g68 4{/.notdef}rp /g90 14{/.notdef}rp /g258 
3{/.notdef}rp /g286 /.notdef /g336 /.notdef /g349 4{/.notdef}rp /g374 
4{/.notdef}rp /g400 /g410 139{/.notdef}rp]
NLZWPR+Calibri-Bold nf
NLZWPR+Calibri-Bold*1 [-4.81e-7 -12.025 -12.025 4.81e-7 0 0 ]msf
30.2 119.25 mo
(Missing Rate)
[-10.5098 -3.01103 -4.49831 -5.24385 -2.987 -6.00508 -5.98697 -2.24774 -6.77011 -5.99271 -4.48917 0 
]ysh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 /1 ]]
[/CSD [/0 /1 ]]
[/Pattern [/218096728.0 ]]
] del_res
/NLZWPP+TimesNewRomanPSMT*1 uf
/NLZWPP+TimesNewRomanPSMT uf
/MAAAAA+TimesNewRomanPSMT uf
/NLZWPQ+MicrosoftSansSerif*1 uf
/NLZWPQ+MicrosoftSansSerif uf
/OAAAAA+MicrosoftSansSerif uf
/NLZWPR+Calibri-Bold*1 uf
/NLZWPR+Calibri-Bold uf
/ZAAAAA+Calibri-Bold uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
